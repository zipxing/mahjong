{"version":3,"sources":["file:///Applications/Cocos/Creator/3.8.7/CocosCreator.app/Contents/Resources/resources/3d/engine/editor/assets/default_renderpipeline/builtin-pipeline.ts"],"names":["PipelineConfigs","CameraConfigs","ForwardLighting","BuiltinForwardPassBuilder","BuiltinBloomPassBuilder","BuiltinToneMappingPassBuilder","BuiltinFXAAPassBuilder","BuiltinFsrPassBuilder","BuiltinUiPassBuilder","forwardNeedClearColor","camera","clearFlag","ClearFlagBit","COLOR","STENCIL","getCsmMainLightViewport","light","w","h","level","vp","screenSpaceSignY","shadowFixedArea","csmLevel","CSMLevel","LEVEL_1","left","top","width","Math","trunc","height","floor","max","setupPipelineConfigs","ppl","configs","sampleFeature","FormatFeatureBit","SAMPLED_TEXTURE","LINEAR_FILTER","device","isWeb","sys","isNative","isWebGL1","gfxAPI","gfx","API","WEBGL","isWebGPU","WEBGPU","isMobile","isHDR","pipelineSceneData","useFloatOutput","getMacroBool","toneMappingType","postSettings","shadowInfo","shadows","shadowEnabled","enabled","shadowMapFormat","pipeline","supportsR32FloatTexture","Format","R32F","RGBA8","shadowMapSize","set","size","usePlanarShadow","type","renderer","scene","ShadowType","Planar","capabilities","supportDepthSample","getFormatFeatures","DEPTH_STENCIL","platform","x","clipSpaceSignY","sortPipelinePassBuildersByConfigOrder","passBuilders","sort","a","b","getConfigOrder","sortPipelinePassBuildersByRenderOrder","getRenderOrder","addCopyToScreenPass","pplConfigs","cameraConfigs","input","assert","copyAndTonemapMaterial","pass","addRenderPass","nativeWidth","nativeHeight","addRenderTarget","colorName","LoadOp","CLEAR","StoreOp","STORE","sClearColorTransparentBlack","addTexture","addQueue","rendering","QueueHint","OPAQUE","addFullscreenQuad","getPingPongRenderTarget","prevName","prefix","id","startsWith","Number","charAt","length","downSize","scale","cclegacy","clamp","geometry","Layers","Material","PipelineEventType","Vec2","Vec3","Vec4","warn","DEBUG","EDITOR","BloomType","makePipelineSettings","AABB","Sphere","intersect","Color","TextureType","Viewport","CameraUsage","LightType","mobileMaxSpotLightShadowMaps","defaultSettings","settings","isMainGameWindow","renderWindowId","depthStencilName","enableFullPipeline","enableProfiler","remainingPasses","enableShadingScale","shadingScale","enableHDR","radianceFormat","enableStoreSceneDepth","lights","shadowEnabledSpotLights","_sphere","create","_boundingBox","_rangedDirLightBoundingBox","cullLights","frustum","cameraPos","spotLights","baked","position","y","z","range","sphereFrustum","push","sphereLights","pointLights","rangedDirLights","transform","node","getWorldMatrix","aabbFrustum","lhs","rhs","squaredDistance","_addLightQueues","queue","BLEND","SPHERE","name","SPOT","POINT","RANGED_DIRECTIONAL","addScene","SceneFlags","addSpotlightShadowPasses","maxNumShadowMaps","i","shadowPass","addDepthStencil","DISCARD","NONE","MASK","SHADOW_CASTER","useLightFrustum","addLightQueues","addLightPasses","depthStencilStoreOp","viewport","count","storeOp","setViewport","LOAD","isMultipleLightPassesNeeded","forwardLighting","_viewport","_clearColor","_reflectionProbeClearColor","ConfigOrder","RenderOrder","configCamera","pipelineConfigs","enableMainLightShadowMap","mainLight","enableMainLightPlanarShadowMap","enablePlanarReflectionProbe","cameraUsage","SCENE_VIEW","GAME_VIEW","enableMSAA","msaa","enableSingleForwardPass","windowResize","window","ResourceFlags","ResourceResidency","TEX2D","sampleCount","COLOR_ATTACHMENT","MEMORYLESS","DEPTH_STENCIL_ATTACHMENT","setup","context","setVec4","_addCascadedShadowMapPass","_tryAddReflectionProbePasses","_addForwardRadiancePasses","shadowSize","csmSupported","reflectionProbeManager","internal","probes","getProbes","maxProbeCount","probeID","probe","needRender","area","renderArea","probeType","ProbeType","PLANAR","realtimePlanarTexture","addRenderWindow","probePass","_buildReflectionProbePass","faceIdx","bakedCubeTextures","updateCameraDir","colorStoreOp","clearColor","packRGBE","clearDepth","clearStencil","REFLECTION_PROBE","undefined","disableMSAA","round","_addForwardSingleRadiancePass","_addForwardMultipleRadiancePasses","_addPlanarShadowQueue","sceneFlags","geometryRenderer","GEOMETRY","msaaRadianceName","msaaDepthStencilName","msPass","addMultisampleRenderPass","_buildForwardMainLightPass","resolveRenderTarget","firstStoreOp","PLANAR_SHADOW","_clearColorTransparentBlack","_bloomParams","_bloomTexSize","_bloomWidths","_bloomHeights","_bloomTexNames","_bloomUpSampleTexDescs","_bloomDownSampleTexDescs","_prefilterTexDesc","_originalColorDesc","bloom","hasValidMaterial","KawaseDualFilter","kawaseFilterMaterial","MipmapFilter","mipmapFilterMaterial","enableBloom","format","bloomWidth","bloomHeight","iterations","pow","createTexture","desc","prevRenderPass","material","_addKawaseDualFilterBloomPasses","_addMipmapFilterBloomPasses","bloomMaterial","radianceName","sizeCount","threshold","enableAlphaMask","prefilterPass","downPass","upPass","intensity","combinePass","_addPass","layout","passIndex","loadOp","queueHint","prefilterInfo","currSamplePass","downSampleInfos","currInfo","samplerSrc","samplerSrcName","lastIndex","upSampleInfos","sampleSrc","sampleSrcName","_colorGradingTexSize","enableColorGrading","colorGrading","colorGradingMap","enableToneMapping","setProperty","_addCopyAndTonemapPass","ldrColorPrefix","ldrColorName","lutTex","isSquareMap","setVec2","setFloat","contribute","toneMapping","_fxaaParams","enableFXAA","fxaa","_addFxaaPass","inputColorName","lastPass","fxaaMaterial","_fsrParams","_fsrTexSize","enableFSR","fsr","outputColorName","_addFsrPass","fsrMaterial","sharpness","uiColorPrefix","fsrColorName","easuPass","rcasPass","flags","UI","PROFILER","showStatistics","BuiltinPipelineBuilder","_pipelineEvent","director","root","pipelineEvent","_forwardPass","_bloomPass","_toneMappingPass","_fxaaPass","_fsrPass","_uiPass","_configs","_cameraConfigs","_copyAndTonemapMaterial","_initialized","_passBuilders","_setupPipelinePreview","isEditorView","PREVIEW","editorSettings","getEditorPipelineSettings","pipelineSettings","_preparePipelinePasses","_passes","_setupBuiltinCameraConfigs","GAME","swapchain","isGameView","visibility","Enum","DEFAULT","profiler","RGBA16F","_setupCameraConfigs","builder","cameras","_initMaterials","emit","RENDER_CAMERA_BEGIN","_buildForwardPipeline","_buildSimplePipeline","RENDER_CAMERA_END","_uuid","initialize","effectName","effectAsset","setCustomPipeline"],"mappings":";;;wQA4EaA,e,EAwDAC,a,EA6EPC,e,EAoMOC,yB,EAilBAC,uB,EAoWAC,6B,EA2HAC,sB,EAoGAC,qB,EAqGAC,oB;;AAnmDb,WAASC,qBAAT,CAA+BC,MAA/B,EAAuE;AACnE,WAAO,CAAC,EAAEA,MAAM,CAACC,SAAP,IAAoBC,YAAY,CAACC,KAAb,GAAsBD,YAAY,CAACE,OAAb,IAAwB,CAAlE,CAAF,CAAR;AACH;;AAED,WAASC,uBAAT,CACIC,KADJ,EAEIC,CAFJ,EAGIC,CAHJ,EAIIC,KAJJ,EAKIC,EALJ,EAMIC,gBANJ,EAOQ;AACJ,QAAIL,KAAK,CAACM,eAAN,IAAyBN,KAAK,CAACO,QAAN,KAAmBC,QAAQ,CAACC,OAAzD,EAAkE;AAC9DL,MAAAA,EAAE,CAACM,IAAH,GAAU,CAAV;AACAN,MAAAA,EAAE,CAACO,GAAH,GAAS,CAAT;AACAP,MAAAA,EAAE,CAACQ,KAAH,GAAWC,IAAI,CAACC,KAAL,CAAWb,CAAX,CAAX;AACAG,MAAAA,EAAE,CAACW,MAAH,GAAYF,IAAI,CAACC,KAAL,CAAWZ,CAAX,CAAZ;AACH,KALD,MAKO;AACHE,MAAAA,EAAE,CAACM,IAAH,GAAUG,IAAI,CAACC,KAAL,CAAWX,KAAK,GAAG,CAAR,GAAY,GAAZ,GAAkBF,CAA7B,CAAV;;AACA,UAAII,gBAAgB,GAAG,CAAvB,EAA0B;AACtBD,QAAAA,EAAE,CAACO,GAAH,GAASE,IAAI,CAACC,KAAL,CAAW,CAAC,IAAID,IAAI,CAACG,KAAL,CAAWb,KAAK,GAAG,CAAnB,CAAL,IAA8B,GAA9B,GAAoCD,CAA/C,CAAT;AACH,OAFD,MAEO;AACHE,QAAAA,EAAE,CAACO,GAAH,GAASE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACG,KAAL,CAAWb,KAAK,GAAG,CAAnB,IAAwB,GAAxB,GAA8BD,CAAzC,CAAT;AACH;;AACDE,MAAAA,EAAE,CAACQ,KAAH,GAAWC,IAAI,CAACC,KAAL,CAAW,MAAMb,CAAjB,CAAX;AACAG,MAAAA,EAAE,CAACW,MAAH,GAAYF,IAAI,CAACC,KAAL,CAAW,MAAMZ,CAAjB,CAAZ;AACH;;AACDE,IAAAA,EAAE,CAACM,IAAH,GAAUG,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYb,EAAE,CAACM,IAAf,CAAV;AACAN,IAAAA,EAAE,CAACO,GAAH,GAASE,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYb,EAAE,CAACO,GAAf,CAAT;AACAP,IAAAA,EAAE,CAACQ,KAAH,GAAWC,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYb,EAAE,CAACQ,KAAf,CAAX;AACAR,IAAAA,EAAE,CAACW,MAAH,GAAYF,IAAI,CAACI,GAAL,CAAS,CAAT,EAAYb,EAAE,CAACW,MAAf,CAAZ;AACH;;AAqBD,WAASG,oBAAT,CACIC,GADJ,EAEIC,OAFJ,EAGQ;AACJ,UAAMC,aAAa,GAAGC,gBAAgB,CAACC,eAAjB,GAAmCD,gBAAgB,CAACE,aAA1E;AACA,UAAMC,MAAM,GAAGN,GAAG,CAACM,MAAnB,CAFI,CAGJ;;AACAL,IAAAA,OAAO,CAACM,KAAR,GAAgB,CAACC,GAAG,CAACC,QAArB;AACAR,IAAAA,OAAO,CAACS,QAAR,GAAmBJ,MAAM,CAACK,MAAP,KAAkBC,GAAG,CAACC,GAAJ,CAAQC,KAA7C;AACAb,IAAAA,OAAO,CAACc,QAAR,GAAmBT,MAAM,CAACK,MAAP,KAAkBC,GAAG,CAACC,GAAJ,CAAQG,MAA7C;AACAf,IAAAA,OAAO,CAACgB,QAAR,GAAmBT,GAAG,CAACS,QAAvB,CAPI,CASJ;;AACAhB,IAAAA,OAAO,CAACiB,KAAR,GAAgBlB,GAAG,CAACmB,iBAAJ,CAAsBD,KAAtC,CAVI,CAUyC;;AAC7CjB,IAAAA,OAAO,CAACmB,cAAR,GAAyBpB,GAAG,CAACqB,YAAJ,CAAiB,qBAAjB,CAAzB;AACApB,IAAAA,OAAO,CAACqB,eAAR,GAA0BtB,GAAG,CAACmB,iBAAJ,CAAsBI,YAAtB,CAAmCD,eAA7D,CAZI,CAaJ;;AACA,UAAME,UAAU,GAAGxB,GAAG,CAACmB,iBAAJ,CAAsBM,OAAzC;AACAxB,IAAAA,OAAO,CAACyB,aAAR,GAAwBF,UAAU,CAACG,OAAnC;AACA1B,IAAAA,OAAO,CAAC2B,eAAR,GAA0BC,QAAQ,CAACC,uBAAT,CAAiC9B,GAAG,CAACM,MAArC,IAA+CyB,MAAM,CAACC,IAAtD,GAA6DD,MAAM,CAACE,KAA9F;AACAhC,IAAAA,OAAO,CAACiC,aAAR,CAAsBC,GAAtB,CAA0BX,UAAU,CAACY,IAArC;AACAnC,IAAAA,OAAO,CAACoC,eAAR,GAA0Bb,UAAU,CAACG,OAAX,IAAsBH,UAAU,CAACc,IAAX,KAAoBC,QAAQ,CAACC,KAAT,CAAeC,UAAf,CAA0BC,MAA9F,CAlBI,CAmBJ;;AACAzC,IAAAA,OAAO,CAACf,gBAAR,GAA2Bc,GAAG,CAACM,MAAJ,CAAWqC,YAAX,CAAwBzD,gBAAnD;AACAe,IAAAA,OAAO,CAAC2C,kBAAR,GAA6B,CAAC5C,GAAG,CAACM,MAAJ,CAAWuC,iBAAX,CAA6Bd,MAAM,CAACe,aAApC,IAAqD5C,aAAtD,MAAyEA,aAAtG,CArBI,CAsBJ;;AACA,UAAMhB,gBAAgB,GAAGoB,MAAM,CAACqC,YAAP,CAAoBzD,gBAA7C;AACAe,IAAAA,OAAO,CAAC8C,QAAR,CAAiBC,CAAjB,GAAqB/C,OAAO,CAACgB,QAAR,GAAmB,GAAnB,GAAyB,GAA9C;AACAhB,IAAAA,OAAO,CAAC8C,QAAR,CAAiBjE,CAAjB,GAAsBI,gBAAgB,GAAG,GAAnB,GAAyB,GAA1B,IAAkC,CAAlC,GAAuCoB,MAAM,CAACqC,YAAP,CAAoBM,cAApB,GAAqC,GAArC,GAA2C,GAAvG;AACH;;AAuCD,WAASC,qCAAT,CAA+CC,YAA/C,EAAoG;AAChGA,IAAAA,YAAY,CAACC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,aAAOD,CAAC,CAACE,cAAF,KAAqBD,CAAC,CAACC,cAAF,EAA5B;AACH,KAFD;AAGH;;AAED,WAASC,qCAAT,CAA+CL,YAA/C,EAAoG;AAChGA,IAAAA,YAAY,CAACC,IAAb,CAAkB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxB,aAAOD,CAAC,CAACI,cAAF,KAAqBH,CAAC,CAACG,cAAF,EAA5B;AACH,KAFD;AAGH;;AAED,WAASC,mBAAT,CACI1D,GADJ,EAEI2D,UAFJ,EAGIC,aAHJ,EAIIC,KAJJ,EAKoC;AAChCC,IAAAA,MAAM,CAAC,CAAC,CAACF,aAAa,CAACG,sBAAjB,CAAN;AACA,UAAMC,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CACTL,aAAa,CAACM,WADL,EAETN,aAAa,CAACO,YAFL,EAGT,iBAHS,CAAb;AAIAH,IAAAA,IAAI,CAACI,eAAL,CACIR,aAAa,CAACS,SADlB,EAEIC,MAAM,CAACC,KAFX,EAEkBC,OAAO,CAACC,KAF1B,EAGIC,2BAHJ;AAIAV,IAAAA,IAAI,CAACW,UAAL,CAAgBd,KAAhB,EAAuB,cAAvB;AACAG,IAAAA,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoBC,MAAlC,EACKC,iBADL,CACuBpB,aAAa,CAACG,sBADrC,EAC6D,CAD7D;AAEA,WAAOC,IAAP;AACH;;AAEM,WAASiB,uBAAT,CAAiCC,QAAjC,EAAmDC,MAAnD,EAAmEC,EAAnE,EAAuF;AAC1F,QAAIF,QAAQ,CAACG,UAAT,CAAoBF,MAApB,CAAJ,EAAiC;AAC7B,aAAQ,GAAEA,MAAO,GAAE,IAAIG,MAAM,CAACJ,QAAQ,CAACK,MAAT,CAAgBJ,MAAM,CAACK,MAAvB,CAAD,CAAiC,IAAGJ,EAAG,EAApE;AACH,KAFD,MAEO;AACH,aAAQ,GAAED,MAAO,KAAIC,EAAG,EAAxB;AACH;AACJ;;AAkxBD,WAASK,QAAT,CAAkBrD,IAAlB,EAAgCsD,KAAhC,EAAuD;AACnD,WAAOhG,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWuC,IAAI,GAAGsD,KAAlB,CAAT,EAAmC,CAAnC,CAAP;AACH;;;;;;;;;;;;;;;;;6BA1xBeT,uB;;;;;;;;;;;;;;;;AA3KZnB,MAAAA,M,OAAAA,M;AAAQ6B,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,Q,OAAAA,Q;AAAUjF,MAAAA,G,OAAAA,G;AAAKkF,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Q,OAAAA,Q;AAAUlE,MAAAA,Q,OAAAA,Q;AAClCmE,MAAAA,iB,OAAAA,iB;AAA2CzD,MAAAA,Q,OAAAA,Q;AACnEsC,MAAAA,S,OAAAA,S;AAAWrE,MAAAA,G,OAAAA,G;AAAKyF,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,I,OAAAA,I;;AAG7BC,MAAAA,K,UAAAA,K;AAAOC,MAAAA,M,UAAAA,M;;AAGZC,MAAAA,S,iBAAAA,S;AACAC,MAAAA,oB,iBAAAA,oB;;;;;;AAlCJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;OAgBM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA;AAAhB,O,GAA8Bd,Q;OAC9B;AAAEpH,QAAAA,YAAF;AAAgBmI,QAAAA,KAAhB;AAAuB7E,QAAAA,MAAvB;AAA+B5B,QAAAA,gBAA/B;AAAiDmE,QAAAA,MAAjD;AAAyDE,QAAAA,OAAzD;AAAkEqC,QAAAA,WAAlE;AAA+EC,QAAAA;AAA/E,O,GAA4FlG,G;OAC5F;AAAE4B,QAAAA;AAAF,O,GAAYD,Q;OACZ;AAAEwE,QAAAA,WAAF;AAAe1H,QAAAA,QAAf;AAAyB2H,QAAAA;AAAzB,O,GAAuCxE,K;;iCAmChC3E,e,GAAN,MAAMA,eAAN,CAAsB;AAAA;AAAA,eACzB0C,KADyB,GACjB,KADiB;AAAA,eAEzBG,QAFyB,GAEd,KAFc;AAAA,eAGzBK,QAHyB,GAGd,KAHc;AAAA,eAIzBE,QAJyB,GAId,KAJc;AAAA,eAKzBC,KALyB,GAKjB,KALiB;AAAA,eAMzBE,cANyB,GAMR,KANQ;AAAA,eAOzBE,eAPyB,GAOP,CAPO;AAOJ;AAPI,eAQzBI,aARyB,GAQT,KARS;AAAA,eASzBE,eATyB,GASPG,MAAM,CAACC,IATA;AAAA,eAUzBE,aAVyB,GAUT,IAAI+D,IAAJ,CAAS,CAAT,EAAY,CAAZ,CAVS;AAAA,eAWzB5D,eAXyB,GAWP,KAXO;AAAA,eAYzBnD,gBAZyB,GAYN,CAZM;AAAA,eAazB0D,kBAbyB,GAaJ,KAbI;AAAA,eAczBqE,4BAdyB,GAcM,CAdN;AAAA,eAgBzBlE,QAhByB,GAgBd,IAAIoD,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAhBc;AAAA;;AAAA,O;;AAsDvBe,MAAAA,e,GAAkB;AAAA;AAAA,yD;;+BAEXpJ,a,GAAN,MAAMA,aAAN,CAAoB;AAAA;AAAA,eACvBqJ,QADuB,GACMD,eADN;AAEvB;AAFuB,eAGvBE,gBAHuB,GAGJ,KAHI;AAAA,eAIvBC,cAJuB,GAIN,CAJM;AAKvB;AALuB,eAMvBhD,SANuB,GAMX,EANW;AAAA,eAOvBiD,gBAPuB,GAOJ,EAPI;AAQvB;AARuB,eASvBC,kBATuB,GASF,KATE;AAAA,eAUvBC,cAVuB,GAUN,KAVM;AAAA,eAWvBC,eAXuB,GAWL,CAXK;AAYvB;AAZuB,eAavBC,kBAbuB,GAaF,KAbE;AAAA,eAcvBC,YAduB,GAcR,GAdQ;AAAA,eAevBzD,WAfuB,GAeT,CAfS;AAAA,eAgBvBC,YAhBuB,GAgBR,CAhBQ;AAAA,eAiBvB1E,KAjBuB,GAiBf,CAjBe;AAiBZ;AAjBY,eAkBvBG,MAlBuB,GAkBd,CAlBc;AAkBX;AACZ;AAnBuB,eAoBvBgI,SApBuB,GAoBX,KApBW;AAAA,eAqBvBC,cArBuB,GAqBNjH,GAAG,CAACmB,MAAJ,CAAWE,KArBL;AAsBvB;AAtBuB,eAuBvB8B,sBAvBuB,GAuBmB,IAvBnB;AAwBvB;;AACA;AAzBuB,eA0BvB+D,qBA1BuB,GA0BC,KA1BD;AAAA;;AAAA,O;;AA6BrBpD,MAAAA,2B,GAA8B,IAAIkC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,C;AAgD9B7I,MAAAA,e,GAAN,MAAMA,eAAN,CAAsB;AAAA;AAClB;AADkB,eAEDgK,MAFC,GAEgC,EAFhC;AAGlB;AAHkB,eAIDC,uBAJC,GAIqD,EAJrD;AAMlB;AANkB,eAODC,OAPC,GAOSvB,MAAM,CAACwB,MAAP,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,CAPT;AAAA,eAQDC,YARC,GAQc,IAAI1B,IAAJ,EARd;AAAA,eASD2B,0BATC,GAS4B,IAAI3B,IAAJ,CAAS,GAAT,EAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B,EAAkC,GAAlC,CAT5B;AAAA;;AAWlB;AACA;AACA;AACO4B,QAAAA,UAAU,CAAC7F,KAAD,EAA8B8F,OAA9B,EAAyDC,SAAzD,EAAiF;AAC9F;AACA,eAAKR,MAAL,CAAYvC,MAAZ,GAAqB,CAArB;AACA,eAAKwC,uBAAL,CAA6BxC,MAA7B,GAAsC,CAAtC,CAH8F,CAI9F;;AACA,eAAK,MAAM3G,KAAX,IAAoB2D,KAAK,CAACgG,UAA1B,EAAsC;AAClC,gBAAI3J,KAAK,CAAC4J,KAAV,EAAiB;AACb;AACH;;AACD/B,YAAAA,MAAM,CAACvE,GAAP,CAAW,KAAK8F,OAAhB,EAAyBpJ,KAAK,CAAC6J,QAAN,CAAe1F,CAAxC,EAA2CnE,KAAK,CAAC6J,QAAN,CAAeC,CAA1D,EAA6D9J,KAAK,CAAC6J,QAAN,CAAeE,CAA5E,EAA+E/J,KAAK,CAACgK,KAArF;;AACA,gBAAIlC,SAAS,CAACmC,aAAV,CAAwB,KAAKb,OAA7B,EAAsCK,OAAtC,CAAJ,EAAoD;AAChD,kBAAIzJ,KAAK,CAAC6C,aAAV,EAAyB;AACrB,qBAAKsG,uBAAL,CAA6Be,IAA7B,CAAkClK,KAAlC;AACH,eAFD,MAEO;AACH,qBAAKkJ,MAAL,CAAYgB,IAAZ,CAAiBlK,KAAjB;AACH;AACJ;AACJ,WAjB6F,CAkB9F;;;AACA,eAAK,MAAMA,KAAX,IAAoB2D,KAAK,CAACwG,YAA1B,EAAwC;AACpC,gBAAInK,KAAK,CAAC4J,KAAV,EAAiB;AACb;AACH;;AACD/B,YAAAA,MAAM,CAACvE,GAAP,CAAW,KAAK8F,OAAhB,EAAyBpJ,KAAK,CAAC6J,QAAN,CAAe1F,CAAxC,EAA2CnE,KAAK,CAAC6J,QAAN,CAAeC,CAA1D,EAA6D9J,KAAK,CAAC6J,QAAN,CAAeE,CAA5E,EAA+E/J,KAAK,CAACgK,KAArF;;AACA,gBAAIlC,SAAS,CAACmC,aAAV,CAAwB,KAAKb,OAA7B,EAAsCK,OAAtC,CAAJ,EAAoD;AAChD,mBAAKP,MAAL,CAAYgB,IAAZ,CAAiBlK,KAAjB;AACH;AACJ,WA3B6F,CA4B9F;;;AACA,eAAK,MAAMA,KAAX,IAAoB2D,KAAK,CAACyG,WAA1B,EAAuC;AACnC,gBAAIpK,KAAK,CAAC4J,KAAV,EAAiB;AACb;AACH;;AACD/B,YAAAA,MAAM,CAACvE,GAAP,CAAW,KAAK8F,OAAhB,EAAyBpJ,KAAK,CAAC6J,QAAN,CAAe1F,CAAxC,EAA2CnE,KAAK,CAAC6J,QAAN,CAAeC,CAA1D,EAA6D9J,KAAK,CAAC6J,QAAN,CAAeE,CAA5E,EAA+E/J,KAAK,CAACgK,KAArF;;AACA,gBAAIlC,SAAS,CAACmC,aAAV,CAAwB,KAAKb,OAA7B,EAAsCK,OAAtC,CAAJ,EAAoD;AAChD,mBAAKP,MAAL,CAAYgB,IAAZ,CAAiBlK,KAAjB;AACH;AACJ,WArC6F,CAsC9F;;;AACA,eAAK,MAAMA,KAAX,IAAoB2D,KAAK,CAAC0G,eAA1B,EAA2C;AACvCzC,YAAAA,IAAI,CAAC0C,SAAL,CAAe,KAAKhB,YAApB,EAAkC,KAAKC,0BAAvC,EAAmEvJ,KAAK,CAACuK,IAAN,CAAYC,cAAZ,EAAnE;;AACA,gBAAI1C,SAAS,CAAC2C,WAAV,CAAsB,KAAKnB,YAA3B,EAAyCG,OAAzC,CAAJ,EAAuD;AACnD,mBAAKP,MAAL,CAAYgB,IAAZ,CAAiBlK,KAAjB;AACH;AACJ;;AAED,cAAI0J,SAAJ,EAAe;AACX,iBAAKP,uBAAL,CAA6B5E,IAA7B,CACI,CAACmG,GAAD,EAAMC,GAAN,KAActD,IAAI,CAACuD,eAAL,CAAqBlB,SAArB,EAAgCgB,GAAG,CAACb,QAApC,IAAgDxC,IAAI,CAACuD,eAAL,CAAqBlB,SAArB,EAAgCiB,GAAG,CAACd,QAApC,CADlE;AAGH;AACJ;;AACOgB,QAAAA,eAAe,CAACnL,MAAD,EAAgCyF,IAAhC,EAA8E;AACjG,eAAK,MAAMnF,KAAX,IAAoB,KAAKkJ,MAAzB,EAAiC;AAC7B,kBAAM4B,KAAK,GAAG3F,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoB8E,KAAlC,EAAyC,aAAzC,CAAd;;AACA,oBAAQ/K,KAAK,CAACyD,IAAd;AACI,mBAAK0E,SAAS,CAAC6C,MAAf;AACIF,gBAAAA,KAAK,CAACG,IAAN,GAAa,cAAb;AACA;;AACJ,mBAAK9C,SAAS,CAAC+C,IAAf;AACIJ,gBAAAA,KAAK,CAACG,IAAN,GAAa,YAAb;AACA;;AACJ,mBAAK9C,SAAS,CAACgD,KAAf;AACIL,gBAAAA,KAAK,CAACG,IAAN,GAAa,aAAb;AACA;;AACJ,mBAAK9C,SAAS,CAACiD,kBAAf;AACIN,gBAAAA,KAAK,CAACG,IAAN,GAAa,0BAAb;AACA;;AACJ;AACIH,gBAAAA,KAAK,CAACG,IAAN,GAAa,eAAb;AAdR;;AAgBAH,YAAAA,KAAK,CAACO,QAAN,CACI3L,MADJ,EAEIsG,SAAS,CAACsF,UAAV,CAAqBP,KAFzB,EAGI/K,KAHJ;AAKH;AACJ;;AACMuL,QAAAA,wBAAwB,CAC3BpK,GAD2B,EAE3BzB,MAF2B,EAG3B8L,gBAH2B,EAIvB;AACJ,cAAIC,CAAC,GAAG,CAAR;;AACA,eAAK,MAAMzL,KAAX,IAAoB,KAAKmJ,uBAAzB,EAAkD;AAC9C,kBAAM9F,aAAa,GAAGlC,GAAG,CAACmB,iBAAJ,CAAsBM,OAAtB,CAA8BW,IAApD;AACA,kBAAMmI,UAAU,GAAGvK,GAAG,CAACiE,aAAJ,CAAkB/B,aAAa,CAACc,CAAhC,EAAmCd,aAAa,CAACyG,CAAjD,EAAoD,SAApD,CAAnB;AACA4B,YAAAA,UAAU,CAACT,IAAX,GAAmB,sBAAqBQ,CAAE,EAA1C;AACAC,YAAAA,UAAU,CAACnG,eAAX,CAA4B,gBAAekG,CAAE,EAA7C,EAAgDhG,MAAM,CAACC,KAAvD,EAA8DC,OAAO,CAACC,KAAtE,EAA6E,IAAImC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA7E;AACA2D,YAAAA,UAAU,CAACC,eAAX,CAA4B,kBAAiBF,CAAE,EAA/C,EAAkDhG,MAAM,CAACC,KAAzD,EAAgEC,OAAO,CAACiG,OAAxE;AACAF,YAAAA,UAAU,CAAC3F,QAAX,CAAoBC,SAAS,CAACC,SAAV,CAAoB4F,IAAxC,EAA8C,eAA9C,EACKR,QADL,CACc3L,MADd,EACsBsG,SAAS,CAACsF,UAAV,CAAqBpF,MAArB,GAA8BF,SAAS,CAACsF,UAAV,CAAqBQ,IAAnD,GAA0D9F,SAAS,CAACsF,UAAV,CAAqBS,aADrG,EAEKC,eAFL,CAEqBhM,KAFrB;AAGA,cAAEyL,CAAF;;AACA,gBAAIA,CAAC,IAAID,gBAAT,EAA2B;AACvB;AACH;AACJ;AACJ;;AACMS,QAAAA,cAAc,CAAC9G,IAAD,EACjBzF,MADiB,EACc8L,gBADd,EAC8C;AAC/D,eAAKX,eAAL,CAAqBnL,MAArB,EAA6ByF,IAA7B;;AACA,cAAIsG,CAAC,GAAG,CAAR;;AACA,eAAK,MAAMzL,KAAX,IAAoB,KAAKmJ,uBAAzB,EAAkD;AAC9C;AACA;AACA;AACAhE,YAAAA,IAAI,CAACW,UAAL,CAAiB,gBAAe2F,CAAE,EAAlC,EAAqC,kBAArC;AACA,kBAAMX,KAAK,GAAG3F,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoB8E,KAAlC,EAAyC,aAAzC,CAAd;AACAD,YAAAA,KAAK,CAACO,QAAN,CAAe3L,MAAf,EAAuBsG,SAAS,CAACsF,UAAV,CAAqBP,KAA5C,EAAmD/K,KAAnD;AACA,cAAEyL,CAAF;;AACA,gBAAIA,CAAC,IAAID,gBAAT,EAA2B;AACvB;AACH;AACJ;AACJ,SAjIiB,CAmIlB;AACA;AACA;;;AACOU,QAAAA,cAAc,CACjB1G,SADiB,EAEjBiD,gBAFiB,EAGjB0D,mBAHiB,EAIjB5F,EAJiB,EAIL;AACZ3F,QAAAA,KALiB,EAMjBG,MANiB,EAOjBrB,MAPiB,EAQjB0M,QARiB,EASjBjL,GATiB,EAUjBgE,IAViB,EAWe;AAChC,eAAK0F,eAAL,CAAqBnL,MAArB,EAA6ByF,IAA7B;;AAEA,cAAIkH,KAAK,GAAG,CAAZ;AACA,gBAAMhJ,aAAa,GAAGlC,GAAG,CAACmB,iBAAJ,CAAsBM,OAAtB,CAA8BW,IAApD;;AACA,eAAK,MAAMvD,KAAX,IAAoB,KAAKmJ,uBAAzB,EAAkD;AAC9C,kBAAMuC,UAAU,GAAGvK,GAAG,CAACiE,aAAJ,CAAkB/B,aAAa,CAACc,CAAhC,EAAmCd,aAAa,CAACyG,CAAjD,EAAoD,SAApD,CAAnB;AACA4B,YAAAA,UAAU,CAACT,IAAX,GAAkB,qBAAlB,CAF8C,CAG9C;;AACAS,YAAAA,UAAU,CAACnG,eAAX,CAA4B,YAAWgB,EAAG,EAA1C,EAA6Cd,MAAM,CAACC,KAApD,EAA2DC,OAAO,CAACC,KAAnE,EAA0E,IAAImC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAA1E;AACA2D,YAAAA,UAAU,CAACC,eAAX,CAA4B,cAAapF,EAAG,EAA5C,EAA+Cd,MAAM,CAACC,KAAtD,EAA6DC,OAAO,CAACiG,OAArE;AACAF,YAAAA,UAAU,CAAC3F,QAAX,CAAoBC,SAAS,CAACC,SAAV,CAAoB4F,IAAxC,EAA8C,eAA9C,EACKR,QADL,CACc3L,MADd,EACsBsG,SAAS,CAACsF,UAAV,CAAqBpF,MAArB,GAA8BF,SAAS,CAACsF,UAAV,CAAqBQ,IAAnD,GAA0D9F,SAAS,CAACsF,UAAV,CAAqBS,aADrG,EAEKC,eAFL,CAEqBhM,KAFrB,EAN8C,CAU9C;AACA;;AACA,cAAEqM,KAAF;AACA,kBAAMC,OAAO,GAAGD,KAAK,KAAK,KAAKlD,uBAAL,CAA6BxC,MAAvC,GACVwF,mBADU,GAEVxG,OAAO,CAACC,KAFd;AAIAT,YAAAA,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAP;AACAoE,YAAAA,IAAI,CAAC8F,IAAL,GAAY,wBAAZ;AACA9F,YAAAA,IAAI,CAACoH,WAAL,CAAiBH,QAAjB;AACAjH,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAAC+G,IAAvC;AACArH,YAAAA,IAAI,CAACwG,eAAL,CAAqBlD,gBAArB,EAAuChD,MAAM,CAAC+G,IAA9C,EAAoDF,OAApD;AACAnH,YAAAA,IAAI,CAACW,UAAL,CAAiB,YAAWS,EAAG,EAA/B,EAAkC,kBAAlC;AACA,kBAAMuE,KAAK,GAAG3F,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoB8E,KAAlC,EAAyC,aAAzC,CAAd;AACAD,YAAAA,KAAK,CAACO,QAAN,CACI3L,MADJ,EAEIsG,SAAS,CAACsF,UAAV,CAAqBP,KAFzB,EAGI/K,KAHJ;AAKH;;AACD,iBAAOmF,IAAP;AACH;;AAEMsH,QAAAA,2BAA2B,GAAY;AAC1C,iBAAO,KAAKtD,uBAAL,CAA6BxC,MAA7B,GAAsC,CAA7C;AACH;;AAzLiB,O;;2CAoMTxH,yB,GAAN,MAAMA,yBAAN,CAAyE;AAAA;AAAA,eA6jB3DuN,eA7jB2D,GA6jBzC,IAAIxN,eAAJ,EA7jByC;AAAA,eA8jB3DyN,SA9jB2D,GA8jB/C,IAAI1E,QAAJ,EA9jB+C;AAAA,eA+jB3D2E,WA/jB2D,GA+jB7C,IAAI7E,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CA/jB6C;AAAA,eAgkB3D8E,0BAhkB2D,GAgkB9B,IAAIxF,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,CAhkB8B;AAAA;;AAG5E3C,QAAAA,cAAc,GAAW;AACrB,iBAAOvF,yBAAyB,CAAC2N,WAAjC;AACH;;AACDlI,QAAAA,cAAc,GAAW;AACrB,iBAAOzF,yBAAyB,CAAC4N,WAAjC;AACH;;AACDC,QAAAA,YAAY,CACRtN,MADQ,EAERuN,eAFQ,EAGRlI,aAHQ,EAGiD;AACzD;AACAA,UAAAA,aAAa,CAACmI,wBAAd,GAAyCD,eAAe,CAACpK,aAAhB,IAClC,CAACoK,eAAe,CAACzJ,eADiB,IAElC,CAAC,CAAC9D,MAAM,CAACiE,KAFyB,IAGlC,CAAC,CAACjE,MAAM,CAACiE,KAAP,CAAawJ,SAHmB,IAIlCzN,MAAM,CAACiE,KAAP,CAAawJ,SAAb,CAAuBtK,aAJ9B;AAMAkC,UAAAA,aAAa,CAACqI,8BAAd,GAA+CH,eAAe,CAACpK,aAAhB,IACxCoK,eAAe,CAACzJ,eADwB,IAExC,CAAC,CAAC9D,MAAM,CAACiE,KAF+B,IAGxC,CAAC,CAACjE,MAAM,CAACiE,KAAP,CAAawJ,SAHyB,IAIxCzN,MAAM,CAACiE,KAAP,CAAawJ,SAAb,CAAuBtK,aAJ9B,CARyD,CAczD;;AACAkC,UAAAA,aAAa,CAACsI,2BAAd,GAA4CtI,aAAa,CAACwD,gBAAd,IACrC7I,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAACqF,UADE,IAErC7N,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAACsF,SAF1C,CAfyD,CAmBzD;;AACAzI,UAAAA,aAAa,CAAC0I,UAAd,GAA2B1I,aAAa,CAACuD,QAAd,CAAuBoF,IAAvB,CAA4B5K,OAA5B,IACpB,CAACiC,aAAa,CAACkE,qBADK,CACiB;AADjB,aAEpB,CAACgE,eAAe,CAACvL,KAFG,CAEG;AAFH,aAGpB,CAACuL,eAAe,CAACpL,QAHxB,CApByD,CAyBzD;;AACAkD,UAAAA,aAAa,CAAC4I,uBAAd,GACMV,eAAe,CAAC7K,QAAhB,IAA4B2C,aAAa,CAAC0I,UADhD;AAGA,YAAE1I,aAAa,CAAC6D,eAAhB;AACH;;AACDgF,QAAAA,YAAY,CACRzM,GADQ,EAER2D,UAFQ,EAGRC,aAHQ,EAIR8I,MAJQ,EAKRnO,MALQ,EAMR2F,WANQ,EAORC,YAPQ,EAOoB;AAC5B,gBAAMwI,aAAa,GAAG9H,SAAS,CAAC8H,aAAhC;AACA,gBAAMC,iBAAiB,GAAG/H,SAAS,CAAC+H,iBAApC;AACA,gBAAMxH,EAAE,GAAGsH,MAAM,CAACrF,cAAlB;AACA,gBAAMF,QAAQ,GAAGvD,aAAa,CAACuD,QAA/B;AAEA,gBAAM1H,KAAK,GAAGmE,aAAa,CAAC8D,kBAAd,GACRhI,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWqE,WAAW,GAAGN,aAAa,CAAC+D,YAAvC,CAAT,EAA+D,CAA/D,CADQ,GAERzD,WAFN;AAGA,gBAAMtE,MAAM,GAAGgE,aAAa,CAAC8D,kBAAd,GACThI,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWsE,YAAY,GAAGP,aAAa,CAAC+D,YAAxC,CAAT,EAAgE,CAAhE,CADS,GAETxD,YAFN,CAT4B,CAa5B;;AACA,cAAIP,aAAa,CAAC0I,UAAlB,EAA8B;AAC1B;AACA;AACA;AACA,gBAAI1I,aAAa,CAACgE,SAAlB,EAA6B;AACzB5H,cAAAA,GAAG,CAAC2E,UAAJ,CAAgB,eAAcS,EAAG,EAAjC,EAAoCyB,WAAW,CAACgG,KAAhD,EAAuDjJ,aAAa,CAACiE,cAArE,EAAqFpI,KAArF,EAA4FG,MAA5F,EAAoG,CAApG,EAAuG,CAAvG,EAA0G,CAA1G,EACIuH,QAAQ,CAACoF,IAAT,CAAcO,WADlB,EAC+BH,aAAa,CAACI,gBAD7C,EAC+DH,iBAAiB,CAACI,UADjF;AAEH,aAHD,MAGO;AACHhN,cAAAA,GAAG,CAAC2E,UAAJ,CAAgB,eAAcS,EAAG,EAAjC,EAAoCyB,WAAW,CAACgG,KAAhD,EAAuD9K,MAAM,CAACE,KAA9D,EAAqExC,KAArE,EAA4EG,MAA5E,EAAoF,CAApF,EAAuF,CAAvF,EAA0F,CAA1F,EACIuH,QAAQ,CAACoF,IAAT,CAAcO,WADlB,EAC+BH,aAAa,CAACI,gBAD7C,EAC+DH,iBAAiB,CAACI,UADjF;AAEH;;AACDhN,YAAAA,GAAG,CAAC2E,UAAJ,CAAgB,mBAAkBS,EAAG,EAArC,EAAwCyB,WAAW,CAACgG,KAApD,EAA2D9K,MAAM,CAACe,aAAlE,EAAiFrD,KAAjF,EAAwFG,MAAxF,EAAgG,CAAhG,EAAmG,CAAnG,EAAsG,CAAtG,EACIuH,QAAQ,CAACoF,IAAT,CAAcO,WADlB,EAC+BH,aAAa,CAACM,wBAD7C,EACuEL,iBAAiB,CAACI,UADzF;AAEH,WA3B2B,CA6B5B;;;AACAhN,UAAAA,GAAG,CAACoE,eAAJ,CACK,YAAWgB,EAAG,EADnB,EAEIzB,UAAU,CAAC/B,eAFf,EAGI+B,UAAU,CAACzB,aAAX,CAAyBc,CAH7B,EAIIW,UAAU,CAACzB,aAAX,CAAyByG,CAJ7B;AAMA3I,UAAAA,GAAG,CAACwK,eAAJ,CACK,cAAapF,EAAG,EADrB,EAEIrD,MAAM,CAACe,aAFX,EAGIa,UAAU,CAACzB,aAAX,CAAyBc,CAH7B,EAIIW,UAAU,CAACzB,aAAX,CAAyByG,CAJ7B,EApC4B,CA2C5B;;AACA,cAAI/E,aAAa,CAAC4I,uBAAlB,EAA2C;AACvC,kBAAMtB,KAAK,GAAGvH,UAAU,CAACsD,4BAAzB;;AACA,iBAAK,IAAIqD,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKY,KAAtB,EAA6B,EAAEZ,CAA/B,EAAkC;AAC9BtK,cAAAA,GAAG,CAACoE,eAAJ,CACK,gBAAekG,CAAE,EADtB,EAEI3G,UAAU,CAAC/B,eAFf,EAGI+B,UAAU,CAACzB,aAAX,CAAyBc,CAH7B,EAIIW,UAAU,CAACzB,aAAX,CAAyByG,CAJ7B;AAMA3I,cAAAA,GAAG,CAACwK,eAAJ,CACK,kBAAiBF,CAAE,EADxB,EAEIvI,MAAM,CAACe,aAFX,EAGIa,UAAU,CAACzB,aAAX,CAAyBc,CAH7B,EAIIW,UAAU,CAACzB,aAAX,CAAyByG,CAJ7B;AAMH;AACJ;AACJ;;AACDuE,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAKuE;AACxE;AACAnN,UAAAA,GAAG,CAACoN,OAAJ,CAAY,YAAZ,EAA0BzJ,UAAU,CAACZ,QAArC;AAEA,gBAAMqC,EAAE,GAAG7G,MAAM,CAACmO,MAAP,CAAcrF,cAAzB;AAEA,gBAAM7E,KAAK,GAAGjE,MAAM,CAACiE,KAArB;AACA,gBAAMwJ,SAAS,GAAGxJ,KAAK,CAACwJ,SAAxB;AAEA,YAAEpI,aAAa,CAAC6D,eAAhB;AACA3D,UAAAA,MAAM,CAACF,aAAa,CAAC6D,eAAd,IAAiC,CAAlC,CAAN,CAVwE,CAYxE;;AACA,eAAK8D,eAAL,CAAqBlD,UAArB,CAAgC7F,KAAhC,EAAuCjE,MAAM,CAAC+J,OAA9C,EAbwE,CAexE;;AACA,cAAI1E,aAAa,CAACmI,wBAAlB,EAA4C;AACxCjI,YAAAA,MAAM,CAAC,CAAC,CAACkI,SAAH,CAAN;;AACA,iBAAKqB,yBAAL,CAA+BrN,GAA/B,EAAoC2D,UAApC,EAAgDyB,EAAhD,EAAoD4G,SAApD,EAA+DzN,MAA/D;AACH,WAnBuE,CAqBxE;;;AACA,cAAIqF,aAAa,CAAC4I,uBAAlB,EAA2C;AACvC;AACA;AACA,iBAAKjB,eAAL,CAAqBnB,wBAArB,CACIpK,GADJ,EACSzB,MADT,EACiBoF,UAAU,CAACsD,4BAD5B;AAEH;;AAED,eAAKqG,4BAAL,CAAkCtN,GAAlC,EAAuC4D,aAAvC,EAAsDwB,EAAtD,EAA0D4G,SAA1D,EAAqEzN,MAAM,CAACiE,KAA5E;;AAEA,cAAIoB,aAAa,CAAC6D,eAAd,GAAgC,CAAhC,IAAqC7D,aAAa,CAAC8D,kBAAvD,EAA2E;AACvEyF,YAAAA,OAAO,CAAC9I,SAAR,GAAoBT,aAAa,CAAC8D,kBAAd,GACb,mBAAkBtC,EAAG,EADR,GAEb,aAAYA,EAAG,EAFtB;AAGA+H,YAAAA,OAAO,CAAC7F,gBAAR,GAA2B1D,aAAa,CAAC8D,kBAAd,GACpB,oBAAmBtC,EAAG,EADF,GAEpB,cAAaA,EAAG,EAFvB;AAGH,WAPD,MAOO;AACH+H,YAAAA,OAAO,CAAC9I,SAAR,GAAoBT,aAAa,CAACS,SAAlC;AACA8I,YAAAA,OAAO,CAAC7F,gBAAR,GAA2B1D,aAAa,CAAC0D,gBAAzC;AACH;;AAED,gBAAMtD,IAAI,GAAG,KAAKuJ,yBAAL,CACTvN,GADS,EACJ2D,UADI,EACQC,aADR,EACuBwB,EADvB,EAC2B7G,MAD3B,EAETqF,aAAa,CAACnE,KAFL,EAEYmE,aAAa,CAAChE,MAF1B,EAEkCoM,SAFlC,EAGTmB,OAAO,CAAC9I,SAHC,EAGU8I,OAAO,CAAC7F,gBAHlB,EAIT,CAAC1D,aAAa,CAAC0I,UAJN,EAKT1I,aAAa,CAACkE,qBAAd,GAAsCtD,OAAO,CAACC,KAA9C,GAAsDD,OAAO,CAACiG,OALrD,CAAb;;AAOA,cAAI,CAAC7G,aAAa,CAACkE,qBAAnB,EAA0C;AACtCqF,YAAAA,OAAO,CAAC7F,gBAAR,GAA2B,EAA3B;AACH;;AAED,cAAI1D,aAAa,CAAC6D,eAAd,KAAkC,CAAlC,IAAuC7D,aAAa,CAAC8D,kBAAzD,EAA6E;AACzE,mBAAOhE,mBAAmB,CAAC1D,GAAD,EAAM2D,UAAN,EAAkBC,aAAlB,EAAiCuJ,OAAO,CAAC9I,SAAzC,CAA1B;AACH,WAFD,MAEO;AACH,mBAAOL,IAAP;AACH;AACJ;;AACOqJ,QAAAA,yBAAyB,CAC7BrN,GAD6B,EAE7B2D,UAF6B,EAG7ByB,EAH6B,EAI7BvG,KAJ6B,EAK7BN,MAL6B,EAMzB;AACJ,gBAAMuG,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,gBAAMqF,UAAU,GAAGtF,SAAS,CAACsF,UAA7B,CAFI,CAGJ;AACA;AACA;;AACA,gBAAMqD,UAAU,GAAGxN,GAAG,CAACmB,iBAAJ,CAAsBM,OAAtB,CAA8BW,IAAjD;AACA,gBAAM3C,KAAK,GAAG+N,UAAU,CAACxK,CAAzB;AACA,gBAAMpD,MAAM,GAAG4N,UAAU,CAAC7E,CAA1B;AAEA,gBAAMsC,QAAQ,GAAG,KAAKO,SAAtB;AACAP,UAAAA,QAAQ,CAAC1L,IAAT,GAAgB0L,QAAQ,CAACzL,GAAT,GAAe,CAA/B;AACAyL,UAAAA,QAAQ,CAACxL,KAAT,GAAiBA,KAAjB;AACAwL,UAAAA,QAAQ,CAACrL,MAAT,GAAkBA,MAAlB,CAbI,CAeJ;AACA;AACA;;AACA,gBAAMoE,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAb;AACAoE,UAAAA,IAAI,CAAC8F,IAAL,GAAY,mBAAZ;AACA9F,UAAAA,IAAI,CAACI,eAAL,CAAsB,YAAWgB,EAAG,EAApC,EAAuCd,MAAM,CAACC,KAA9C,EAAqDC,OAAO,CAACC,KAA7D,EAAoE,IAAImC,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAApE;AACA5C,UAAAA,IAAI,CAACwG,eAAL,CAAsB,cAAapF,EAAG,EAAtC,EAAyCd,MAAM,CAACC,KAAhD,EAAuDC,OAAO,CAACiG,OAA/D;AACA,gBAAMrL,QAAQ,GAAGY,GAAG,CAACmB,iBAAJ,CAAsBsM,YAAtB,GAAqC5O,KAAK,CAACO,QAA3C,GAAsD,CAAvE,CAtBI,CAwBJ;;AACA,eAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,KAAKI,QAA9B,EAAwC,EAAEJ,KAA1C,EAAiD;AAC7CJ,YAAAA,uBAAuB,CAACC,KAAD,EAAQY,KAAR,EAAeG,MAAf,EAAuBZ,KAAvB,EAA8B,KAAKwM,SAAnC,EAA8C7H,UAAU,CAACzE,gBAAzD,CAAvB;AACA,kBAAMyK,KAAK,GAAG3F,IAAI,CAACY,QAAL,CAAcE,SAAS,CAAC4F,IAAxB,EAA8B,eAA9B,CAAd;;AACA,gBAAI,CAAC/G,UAAU,CAAC5C,QAAhB,EAA0B;AAAE;AACxB4I,cAAAA,KAAK,CAACyB,WAAN,CAAkB,KAAKI,SAAvB;AACH;;AACD7B,YAAAA,KAAK,CACAO,QADL,CACc3L,MADd,EACsB4L,UAAU,CAACpF,MAAX,GAAoBoF,UAAU,CAACQ,IAA/B,GAAsCR,UAAU,CAACS,aADvE,EAEKC,eAFL,CAEqBhM,KAFrB,EAE4BG,KAF5B;AAGH;AACJ;;AACOsO,QAAAA,4BAA4B,CAChCtN,GADgC,EAEhC4D,aAFgC,EAGhCwB,EAHgC,EAIhC4G,SAJgC,EAKhCxJ,KALgC,EAM5B;AACJ,gBAAMkL,sBAAsB,GAAG/H,QAAQ,CAACgI,QAAT,CAAkBD,sBAAjD;;AACA,cAAI,CAACA,sBAAL,EAA6B;AACzB;AACH;;AACD,gBAAMd,iBAAiB,GAAG/H,SAAS,CAAC+H,iBAApC;AACA,gBAAMgB,MAAM,GAAGF,sBAAsB,CAACG,SAAvB,EAAf;AACA,gBAAMC,aAAa,GAAG,CAAtB;AACA,cAAIC,OAAO,GAAG,CAAd;;AACA,eAAK,MAAMC,KAAX,IAAoBJ,MAApB,EAA4B;AACxB,gBAAI,CAACI,KAAK,CAACC,UAAX,EAAuB;AACnB;AACH;;AACD,kBAAMC,IAAI,GAAGF,KAAK,CAACG,UAAN,EAAb;AACA,kBAAM1O,KAAK,GAAGC,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWqO,IAAI,CAAClL,CAAhB,CAAT,EAA6B,CAA7B,CAAd;AACA,kBAAMpD,MAAM,GAAGF,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWqO,IAAI,CAACvF,CAAhB,CAAT,EAA6B,CAA7B,CAAf;;AAEA,gBAAIqF,KAAK,CAACI,SAAN,KAAoB7L,QAAQ,CAACC,KAAT,CAAe6L,SAAf,CAAyBC,MAAjD,EAAyD;AACrD,kBAAI,CAAC1K,aAAa,CAACsI,2BAAnB,EAAgD;AAC5C;AACH;;AACD,oBAAMQ,MAA6B,GAAGsB,KAAK,CAACO,qBAAN,CAA6B7B,MAAnE;AACA,oBAAMrI,SAAS,GAAI,gBAAe0J,OAAQ,EAA1C;AACA,oBAAMzG,gBAAgB,GAAI,gBAAeyG,OAAQ,EAAjD,CANqD,CAOrD;;AACA/N,cAAAA,GAAG,CAACwO,eAAJ,CAAoBnK,SAApB,EACIT,aAAa,CAACiE,cADlB,EACkCpI,KADlC,EACyCG,MADzC,EACiD8M,MADjD;AAEA1M,cAAAA,GAAG,CAACwK,eAAJ,CAAoBlD,gBAApB,EACI1G,GAAG,CAACmB,MAAJ,CAAWe,aADf,EAC8BrD,KAD9B,EACqCG,MADrC,EAC6CgN,iBAAiB,CAACI,UAD/D,EAVqD,CAarD;;AACA,oBAAMyB,SAAS,GAAGzO,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAlB;AACA6O,cAAAA,SAAS,CAAC3E,IAAV,GAAkB,wBAAuBiE,OAAQ,EAAjD;;AACA,mBAAKW,yBAAL,CAA+BD,SAA/B,EAA0C7K,aAA1C,EAAyDwB,EAAzD,EAA6D4I,KAAK,CAACzP,MAAnE,EACI8F,SADJ,EACeiD,gBADf,EACiC0E,SADjC,EAC4CxJ,KAD5C;AAEH,aAlBD,MAkBO,IAAI8D,MAAJ,EAAY;AACf,mBAAK,IAAIqI,OAAO,GAAG,CAAnB,EAAsBA,OAAO,GAAGX,KAAK,CAACY,iBAAN,CAAwBpJ,MAAxD,EAAgEmJ,OAAO,EAAvE,EAA2E;AACvEX,gBAAAA,KAAK,CAACa,eAAN,CAAsBF,OAAtB;AACA,sBAAMjC,MAA6B,GAAGsB,KAAK,CAACY,iBAAN,CAAwBD,OAAxB,EAAiCjC,MAAvE;AACA,sBAAMrI,SAAS,GAAI,cAAa0J,OAAQ,GAAEY,OAAQ,EAAlD;AACA,sBAAMrH,gBAAgB,GAAI,cAAayG,OAAQ,GAAEY,OAAQ,EAAzD,CAJuE,CAKvE;;AACA3O,gBAAAA,GAAG,CAACwO,eAAJ,CAAoBnK,SAApB,EACIT,aAAa,CAACiE,cADlB,EACkCpI,KADlC,EACyCG,MADzC,EACiD8M,MADjD;AAEA1M,gBAAAA,GAAG,CAACwK,eAAJ,CAAoBlD,gBAApB,EACI1G,GAAG,CAACmB,MAAJ,CAAWe,aADf,EAC8BrD,KAD9B,EACqCG,MADrC,EAC6CgN,iBAAiB,CAACI,UAD/D,EARuE,CAWvE;;AACA,sBAAMyB,SAAS,GAAGzO,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAlB;AACA6O,gBAAAA,SAAS,CAAC3E,IAAV,GAAkB,YAAWiE,OAAQ,GAAEY,OAAQ,EAA/C;;AACA,qBAAKD,yBAAL,CAA+BD,SAA/B,EAA0C7K,aAA1C,EAAyDwB,EAAzD,EAA6D4I,KAAK,CAACzP,MAAnE,EACI8F,SADJ,EACeiD,gBADf,EACiC0E,SADjC,EAC4CxJ,KAD5C;AAEH;;AACDwL,cAAAA,KAAK,CAACC,UAAN,GAAmB,KAAnB;AACH;;AACD,cAAEF,OAAF;;AACA,gBAAIA,OAAO,KAAKD,aAAhB,EAA+B;AAC3B;AACH;AACJ;AACJ;;AACOY,QAAAA,yBAAyB,CAC7B1K,IAD6B,EAE7BJ,aAF6B,EAG7BwB,EAH6B,EAI7B7G,MAJ6B,EAK7B8F,SAL6B,EAM7BiD,gBAN6B,EAO7B0E,SAP6B,EAQ7BxJ,KAAkC,GAAG,IARR,EASzB;AACJ,gBAAMsC,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,gBAAMqF,UAAU,GAAGtF,SAAS,CAACsF,UAA7B,CAFI,CAGJ;;AACA,gBAAM2E,YAAY,GAAGlL,aAAa,CAAC0I,UAAd,GAA2B9H,OAAO,CAACiG,OAAnC,GAA6CjG,OAAO,CAACC,KAA1E,CAJI,CAMJ;;AACA,cAAInG,qBAAqB,CAACC,MAAD,CAAzB,EAAmC;AAC/B,iBAAKmN,0BAAL,CAAgC1I,CAAhC,GAAoCzE,MAAM,CAACwQ,UAAP,CAAkB/L,CAAtD;AACA,iBAAK0I,0BAAL,CAAgC/C,CAAhC,GAAoCpK,MAAM,CAACwQ,UAAP,CAAkBpG,CAAtD;AACA,iBAAK+C,0BAAL,CAAgC9C,CAAhC,GAAoCrK,MAAM,CAACwQ,UAAP,CAAkBnG,CAAtD;AACA,kBAAMmG,UAAU,GAAGlK,SAAS,CAACmK,QAAV,CAAmB,KAAKtD,0BAAxB,CAAnB;AACA,iBAAKD,WAAL,CAAiBzI,CAAjB,GAAqB+L,UAAU,CAAC/L,CAAhC;AACA,iBAAKyI,WAAL,CAAiB9C,CAAjB,GAAqBoG,UAAU,CAACpG,CAAhC;AACA,iBAAK8C,WAAL,CAAiB7C,CAAjB,GAAqBmG,UAAU,CAACnG,CAAhC;AACA,iBAAK6C,WAAL,CAAiB3M,CAAjB,GAAqBiQ,UAAU,CAACjQ,CAAhC;AACAkF,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CuK,YAA9C,EAA4D,KAAKrD,WAAjE;AACH,WAVD,MAUO;AACHzH,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAAC+G,IAAvC,EAA6CyD,YAA7C;AACH,WAnBG,CAqBJ;;;AACA,cAAIvQ,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aAApC,EAAmD;AAC/CkB,YAAAA,IAAI,CAACwG,eAAL,CACIlD,gBADJ,EAEIhD,MAAM,CAACC,KAFX,EAGIC,OAAO,CAACiG,OAHZ,EAIIlM,MAAM,CAAC0Q,UAJX,EAKI1Q,MAAM,CAAC2Q,YALX,EAMI3Q,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aANpC;AAQH,WATD,MASO;AACHkB,YAAAA,IAAI,CAACwG,eAAL,CAAqBlD,gBAArB,EAAuChD,MAAM,CAAC+G,IAA9C,EAAoD7G,OAAO,CAACiG,OAA5D;AACH,WAjCG,CAmCJ;;;AACA,cAAI7G,aAAa,CAACmI,wBAAlB,EAA4C;AACxC/H,YAAAA,IAAI,CAACW,UAAL,CAAiB,YAAWS,EAAG,EAA/B,EAAkC,cAAlC;AACH,WAtCG,CAwCJ;AAEA;;;AACApB,UAAAA,IAAI,CAACY,QAAL,CAAcE,SAAS,CAAC4F,IAAxB,EAA8B,aAA9B,EAA6C;AAA7C,WACKR,QADL,CACc3L,MADd,EAEQ4L,UAAU,CAACpF,MAAX,GAAoBoF,UAAU,CAACQ,IAA/B,GAAsCR,UAAU,CAACgF,gBAFzD,EAGQnD,SAAS,IAAIoD,SAHrB,EAIQ5M,KAAK,GAAGA,KAAH,GAAW4M,SAJxB;AAKH;;AACO7B,QAAAA,yBAAyB,CAC7BvN,GAD6B,EAE7B2D,UAF6B,EAG7BC,aAH6B,EAI7BwB,EAJ6B,EAK7B7G,MAL6B,EAM7BkB,KAN6B,EAO7BG,MAP6B,EAQ7BoM,SAR6B,EAS7B3H,SAT6B,EAU7BiD,gBAV6B,EAW7B+H,WAAoB,GAAG,KAXM,EAY7BrE,mBAAgC,GAAGxG,OAAO,CAACiG,OAZd,EAaG;AAChC,gBAAM3F,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,gBAAMqF,UAAU,GAAGtF,SAAS,CAACsF,UAA7B,CAFgC,CAGhC;AACA;AACA;AACA;;AACA,gBAAM4E,UAAU,GAAGxQ,MAAM,CAACwQ,UAA1B,CAPgC,CAOM;;AACtC,eAAKtD,WAAL,CAAiBzI,CAAjB,GAAqB+L,UAAU,CAAC/L,CAAhC;AACA,eAAKyI,WAAL,CAAiB9C,CAAjB,GAAqBoG,UAAU,CAACpG,CAAhC;AACA,eAAK8C,WAAL,CAAiB7C,CAAjB,GAAqBmG,UAAU,CAACnG,CAAhC;AACA,eAAK6C,WAAL,CAAiB3M,CAAjB,GAAqBiQ,UAAU,CAACjQ,CAAhC,CAXgC,CAahC;;AACA,gBAAMmM,QAAQ,GAAG1M,MAAM,CAAC0M,QAAxB,CAdgC,CAcE;;AAClC,eAAKO,SAAL,CAAejM,IAAf,GAAsBG,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACjI,CAAT,GAAavD,KAAxB,CAAtB;AACA,eAAK+L,SAAL,CAAehM,GAAf,GAAqBE,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACtC,CAAT,GAAa/I,MAAxB,CAArB,CAhBgC,CAiBhC;AACA;;AACA,eAAK4L,SAAL,CAAe/L,KAAf,GAAuBC,IAAI,CAACI,GAAL,CAASJ,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACxL,KAAT,GAAiBA,KAA5B,CAAT,EAA6C,CAA7C,CAAvB;AACA,eAAK+L,SAAL,CAAe5L,MAAf,GAAwBF,IAAI,CAACI,GAAL,CAASJ,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACrL,MAAT,GAAkBA,MAA7B,CAAT,EAA+C,CAA/C,CAAxB,CApBgC,CAsBhC;;AACA,gBAAM0M,UAAU,GAAG,CAAC+C,WAAD,IAAgBzL,aAAa,CAAC0I,UAAjD;AACAxI,UAAAA,MAAM,CAAC,CAACwI,UAAD,IAAe1I,aAAa,CAAC4I,uBAA9B,CAAN,CAxBgC,CA0BhC;AACA;AACA;;AACA,gBAAMxI,IAAI,GAAGJ,aAAa,CAAC4I,uBAAd,GACP,KAAK+C,6BAAL,CAAmCvP,GAAnC,EAAwC2D,UAAxC,EAAoDC,aAApD,EACEwB,EADF,EACM7G,MADN,EACc+N,UADd,EAC0B7M,KAD1B,EACiCG,MADjC,EACyCoM,SADzC,EAEE3H,SAFF,EAEaiD,gBAFb,EAE+B0D,mBAF/B,CADO,GAIP,KAAKwE,iCAAL,CAAuCxP,GAAvC,EAA4C4D,aAA5C,EACEwB,EADF,EACM7G,MADN,EACckB,KADd,EACqBG,MADrB,EAC6BoM,SAD7B,EAEE3H,SAFF,EAEaiD,gBAFb,EAE+B0D,mBAF/B,CAJN,CA7BgC,CAqChC;;AACA,cAAIpH,aAAa,CAACqI,8BAAlB,EAAkD;AAC9C,iBAAKwD,qBAAL,CAA2BlR,MAA3B,EAAmCyN,SAAnC,EAA8ChI,IAA9C;AACH,WAxC+B,CA0ChC;AACA;AACA;AACA;;;AAEA,gBAAM0L,UAAU,GAAGvF,UAAU,CAACP,KAAX,IACdrL,MAAM,CAACoR,gBAAP,GACKxF,UAAU,CAACyF,QADhB,GAEKzF,UAAU,CAACO,IAHF,CAAnB;AAKA1G,UAAAA,IAAI,CACCY,QADL,CACcE,SAAS,CAAC8E,KADxB,EAEKM,QAFL,CAEc3L,MAFd,EAEsBmR,UAFtB,EAEkC1D,SAAS,IAAIoD,SAF/C;AAIA,iBAAOpL,IAAP;AACH;;AACOuL,QAAAA,6BAA6B,CACjCvP,GADiC,EAEjC2D,UAFiC,EAGjCC,aAHiC,EAIjCwB,EAJiC,EAKjC7G,MALiC,EAMjC+N,UANiC,EAOjC7M,KAPiC,EAQjCG,MARiC,EASjCoM,SATiC,EAUjC3H,SAViC,EAWjCiD,gBAXiC,EAYjC0D,mBAZiC,EAaD;AAChClH,UAAAA,MAAM,CAACF,aAAa,CAAC4I,uBAAf,CAAN,CADgC,CAEhC;AACA;AACA;;AACA,cAAIxI,IAAJ;;AACA,cAAIsI,UAAJ,EAAgB;AACZ,kBAAMuD,gBAAgB,GAAI,eAAczK,EAAG,EAA3C;AACA,kBAAM0K,oBAAoB,GAAI,mBAAkB1K,EAAG,EAAnD;AACA,kBAAM0H,WAAW,GAAGlJ,aAAa,CAACuD,QAAd,CAAuBoF,IAAvB,CAA4BO,WAAhD;AAEA,kBAAMiD,MAAM,GAAG/P,GAAG,CAACgQ,wBAAJ,CAA6BvQ,KAA7B,EAAoCG,MAApC,EAA4CkN,WAA5C,EAAyD,CAAzD,EAA4D,SAA5D,CAAf;AACAiD,YAAAA,MAAM,CAACjG,IAAP,GAAc,iBAAd,CANY,CAQZ;;AACA,iBAAKmG,0BAAL,CAAgCF,MAAhC,EAAwCnM,aAAxC,EAAuDwB,EAAvD,EAA2D7G,MAA3D,EACIsR,gBADJ,EACsBC,oBADtB,EAC4CtL,OAAO,CAACiG,OADpD,EAC6DuB,SAD7D;;AAGA+D,YAAAA,MAAM,CAACG,mBAAP,CAA2BL,gBAA3B,EAA6CxL,SAA7C;AAEAL,YAAAA,IAAI,GAAG+L,MAAP;AACH,WAfD,MAeO;AACH/L,YAAAA,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAP;AACAoE,YAAAA,IAAI,CAAC8F,IAAL,GAAY,aAAZ;;AAEA,iBAAKmG,0BAAL,CAAgCjM,IAAhC,EAAsCJ,aAAtC,EAAqDwB,EAArD,EAAyD7G,MAAzD,EACI8F,SADJ,EACeiD,gBADf,EACiC0D,mBADjC,EACsDgB,SADtD;AAEH;;AACDlI,UAAAA,MAAM,CAACE,IAAI,KAAKoL,SAAV,CAAN,CA5BgC,CA8BhC;;AACA,eAAK7D,eAAL,CAAqBT,cAArB,CACI9G,IADJ,EAEIzF,MAFJ,EAGIoF,UAAU,CAACsD,4BAHf;AAMA,iBAAOjD,IAAP;AACH;;AACOwL,QAAAA,iCAAiC,CACrCxP,GADqC,EAErC4D,aAFqC,EAGrCwB,EAHqC,EAIrC7G,MAJqC,EAKrCkB,KALqC,EAMrCG,MANqC,EAOrCoM,SAPqC,EAQrC3H,SARqC,EASrCiD,gBATqC,EAUrC0D,mBAVqC,EAWL;AAChClH,UAAAA,MAAM,CAAC,CAACF,aAAa,CAAC4I,uBAAhB,CAAN,CADgC,CAGhC;;AACA,cAAIxI,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAX;AACAoE,UAAAA,IAAI,CAAC8F,IAAL,GAAY,aAAZ;AAEA,gBAAMqG,YAAY,GAAG,KAAK5E,eAAL,CAAqBD,2BAArB,KACf9G,OAAO,CAACC,KADO,GAEfuG,mBAFN;;AAIA,eAAKiF,0BAAL,CAAgCjM,IAAhC,EAAsCJ,aAAtC,EACIwB,EADJ,EACQ7G,MADR,EACgB8F,SADhB,EAC2BiD,gBAD3B,EAC6C6I,YAD7C,EAC2DnE,SAD3D,EAXgC,CAchC;;;AACAhI,UAAAA,IAAI,GAAG,KAAKuH,eAAL,CACFR,cADE,CACa1G,SADb,EACwBiD,gBADxB,EAC0C0D,mBAD1C,EAEC5F,EAFD,EAEK3F,KAFL,EAEYG,MAFZ,EAEoBrB,MAFpB,EAE4B,KAAKiN,SAFjC,EAE4CxL,GAF5C,EAEiDgE,IAFjD,CAAP;AAIA,iBAAOA,IAAP;AACH;;AACOiM,QAAAA,0BAA0B,CAC9BjM,IAD8B,EAE9BJ,aAF8B,EAG9BwB,EAH8B,EAI9B7G,MAJ8B,EAK9B8F,SAL8B,EAM9BiD,gBAN8B,EAO9B0D,mBAP8B,EAQ9BgB,SAR8B,EAS9BxJ,KAAkC,GAAG,IATP,EAU1B;AACJ,gBAAMsC,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,gBAAMqF,UAAU,GAAGtF,SAAS,CAACsF,UAA7B,CAFI,CAGJ;;AACAnG,UAAAA,IAAI,CAACoH,WAAL,CAAiB,KAAKI,SAAtB;AAEA,gBAAMsD,YAAY,GAAGlL,aAAa,CAAC0I,UAAd,GAA2B9H,OAAO,CAACiG,OAAnC,GAA6CjG,OAAO,CAACC,KAA1E,CANI,CAQJ;;AACA,cAAInG,qBAAqB,CAACC,MAAD,CAAzB,EAAmC;AAC/ByF,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CuK,YAA9C,EAA4D,KAAKrD,WAAjE;AACH,WAFD,MAEO;AACHzH,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAAC+G,IAAvC,EAA6CyD,YAA7C;AACH,WAbG,CAeJ;;;AACA,cAAIzI,KAAJ,EAAW;AACP,gBAAIhC,SAAS,KAAKT,aAAa,CAACS,SAA5B,IACAiD,gBAAgB,KAAK1D,aAAa,CAAC0D,gBADvC,EACyD;AACrDlB,cAAAA,IAAI,CAAC,4DAAD,CAAJ;AACH;AACJ;;AAED,cAAI7H,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aAApC,EAAmD;AAC/CkB,YAAAA,IAAI,CAACwG,eAAL,CACIlD,gBADJ,EAEIhD,MAAM,CAACC,KAFX,EAGIyG,mBAHJ,EAIIzM,MAAM,CAAC0Q,UAJX,EAKI1Q,MAAM,CAAC2Q,YALX,EAMI3Q,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aANpC;AAQH,WATD,MASO;AACHkB,YAAAA,IAAI,CAACwG,eAAL,CAAqBlD,gBAArB,EAAuChD,MAAM,CAAC+G,IAA9C,EAAoDL,mBAApD;AACH,WAlCG,CAoCJ;;;AACA,cAAIpH,aAAa,CAACmI,wBAAlB,EAA4C;AACxC/H,YAAAA,IAAI,CAACW,UAAL,CAAiB,YAAWS,EAAG,EAA/B,EAAkC,cAAlC;AACH,WAvCG,CAyCJ;AAEA;;;AACApB,UAAAA,IAAI,CAACY,QAAL,CAAcE,SAAS,CAAC4F,IAAxB,EAA8B;AAA9B,WACKR,QADL,CACc3L,MADd,EAEQ4L,UAAU,CAACpF,MAAX,GAAoBoF,UAAU,CAACQ,IAFvC,EAGQqB,SAAS,IAAIoD,SAHrB,EAIQ5M,KAAK,GAAGA,KAAH,GAAW4M,SAJxB;AAKH;;AACOK,QAAAA,qBAAqB,CACzBlR,MADyB,EAEzByN,SAFyB,EAGzBhI,IAHyB,EAI3B;AACE,gBAAMc,SAAS,GAAGD,SAAS,CAACC,SAA5B;AACA,gBAAMqF,UAAU,GAAGtF,SAAS,CAACsF,UAA7B;AACAnG,UAAAA,IAAI,CAACY,QAAL,CAAcE,SAAS,CAAC8E,KAAxB,EAA+B,eAA/B,EACKM,QADL,CAEQ3L,MAFR,EAGQ4L,UAAU,CAACS,aAAX,GAA2BT,UAAU,CAACiG,aAAtC,GAAsDjG,UAAU,CAACP,KAHzE,EAIQoC,SAAS,IAAIoD,SAJrB;AAMH;;AA5jB2E,O;;AAAnEpR,MAAAA,yB,CACF2N,W,GAAc,G;AADZ3N,MAAAA,yB,CAEF4N,W,GAAc,G;;yCA+kBZ3N,uB,GAAN,MAAMA,uBAAN,CAAuE;AAAA;AAgV1E;AAhV0E,eAiVzDoS,2BAjVyD,GAiV3B,IAAIzJ,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAjV2B;AAAA,eAkVzD0J,YAlVyD,GAkV1C,IAAInK,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlV0C;AAAA,eAmVzDoK,aAnVyD,GAmVzC,IAAIpK,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAnVyC;AAAA,eAoVzDqK,YApVyD,GAoV3B,EApV2B;AAAA,eAqVzDC,aArVyD,GAqV1B,EArV0B;AAAA,eAsVzDC,cAtVyD,GAsVzB,EAtVyB;AAwV1E;AAxV0E,eAyVzDC,sBAzVyD,GAyVN,EAzVM;AAAA,eA0VzDC,wBA1VyD,GA0VJ,EA1VI;AAAA,eA2VlEC,iBA3VkE,GA2V3B;AAAE/G,YAAAA,IAAI,EAAE,EAAR;AAAYrK,YAAAA,KAAK,EAAE,CAAnB;AAAsBG,YAAAA,MAAM,EAAE;AAA9B,WA3V2B;AAAA,eA4VlEkR,kBA5VkE,GA4V1B;AAAEhH,YAAAA,IAAI,EAAE,EAAR;AAAYrK,YAAAA,KAAK,EAAE,CAAnB;AAAsBG,YAAAA,MAAM,EAAE;AAA9B,WA5V0B;AAAA;;AAC1E2D,QAAAA,cAAc,GAAW;AACrB,iBAAO,CAAP;AACH;;AACDE,QAAAA,cAAc,GAAW;AACrB,iBAAO,GAAP;AACH;;AACDoI,QAAAA,YAAY,CACRtN,MADQ,EAERuN,eAFQ,EAGRlI,aAHQ,EAG+C;AACvD,gBAAM;AAAEmN,YAAAA;AAAF,cAAYnN,aAAa,CAACuD,QAAhC;AACA,gBAAM6J,gBAAgB,GAClBD,KAAK,CAACzO,IAAN,KAAe;AAAA;AAAA,sCAAU2O,gBAAzB,IAA6C,CAAC,CAACF,KAAK,CAACG,oBAArD,IACAH,KAAK,CAACzO,IAAN,KAAe;AAAA;AAAA,sCAAU6O,YAAzB,IAAyC,CAAC,CAACJ,KAAK,CAACK,oBAFrD;AAIAxN,UAAAA,aAAa,CAACyN,WAAd,GAA4BN,KAAK,CAACpP,OAAN,IAAiBqP,gBAA7C;;AAEA,cAAIpN,aAAa,CAACyN,WAAlB,EAA+B;AAC3B,cAAEzN,aAAa,CAAC6D,eAAhB;AACH;AACJ;;AACDgF,QAAAA,YAAY,CACRzM,GADQ,EAER2D,UAFQ,EAGRC,aAHQ,EAIR8I,MAJQ,EAI6B;AACrC,cAAI,CAAC9I,aAAa,CAACyN,WAAnB,EAAgC;AAC5B;AACH;;AAED,gBAAM;AAAE5R,YAAAA,KAAF;AAASG,YAAAA,MAAT;AAAiBuH,YAAAA,QAAQ,EAAE;AAAE4J,cAAAA;AAAF;AAA3B,cAAyCnN,aAA/C;AACA,gBAAMwB,EAAE,GAAGsH,MAAM,CAACrF,cAAlB;AACA,gBAAMiK,MAAM,GAAG1N,aAAa,CAACiE,cAA7B;;AAEA,cAAIkJ,KAAK,CAACzO,IAAN,KAAe;AAAA;AAAA,sCAAU2O,gBAA7B,EAA+C;AAC3C,gBAAIM,UAAU,GAAG3N,aAAa,CAACnE,KAA/B;AACA,gBAAI+R,WAAW,GAAG5N,aAAa,CAAChE,MAAhC;;AACA,iBAAK,IAAI0K,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKyG,KAAK,CAACU,UAAN,GAAmB,CAAzC,EAA4C,EAAEnH,CAA9C,EAAiD;AAC7CiH,cAAAA,UAAU,GAAG7R,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW0R,UAAU,GAAG,CAAxB,CAAT,EAAqC,CAArC,CAAb;AACAC,cAAAA,WAAW,GAAG9R,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW2R,WAAW,GAAG,CAAzB,CAAT,EAAsC,CAAtC,CAAd;AACAxR,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,WAAUgB,EAAG,IAAGkF,CAAE,EAAvC,EAA0CgH,MAA1C,EAAkDC,UAAlD,EAA8DC,WAA9D;AACH;AACJ,WARD,MAQO,IAAIT,KAAK,CAACzO,IAAN,KAAe;AAAA;AAAA,sCAAU6O,YAA7B,EAA2C;AAC9C,kBAAMM,UAAU,GAAGV,KAAK,CAACU,UAAzB;;AACA,iBAAK,IAAInH,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAKmH,UAAU,GAAG,CAAnC,EAAsC,EAAEnH,CAAxC,EAA2C;AACvC;AACA,kBAAIA,CAAC,GAAGmH,UAAR,EAAoB;AAChB,sBAAM/L,KAAK,GAAGhG,IAAI,CAACgS,GAAL,CAAS,GAAT,EAAcpH,CAAC,GAAG,CAAlB,CAAd;AACA,qBAAKsG,wBAAL,CAA8BtG,CAA9B,IAAmC,KAAKqH,aAAL,CAC/B3R,GAD+B,EAE9B,kBAAiBoF,EAAG,GAAEkF,CAAE,EAFM,EAG/B7E,QAAQ,CAAChG,KAAD,EAAQiG,KAAR,CAHuB,EAI/BD,QAAQ,CAAC7F,MAAD,EAAS8F,KAAT,CAJuB,EAK/B4L,MAL+B,CAAnC;AAMH,eAVsC,CAWvC;;;AACA,kBAAIhH,CAAC,GAAGmH,UAAU,GAAG,CAArB,EAAwB;AACpB,sBAAM/L,KAAK,GAAGhG,IAAI,CAACgS,GAAL,CAAS,GAAT,EAAcD,UAAU,GAAGnH,CAAb,GAAiB,CAA/B,CAAd;AACA,qBAAKqG,sBAAL,CAA4BrG,CAA5B,IAAiC,KAAKqH,aAAL,CAC7B3R,GAD6B,EAE5B,gBAAeoF,EAAG,GAAEkF,CAAE,EAFM,EAG7B7E,QAAQ,CAAChG,KAAD,EAAQiG,KAAR,CAHqB,EAI7BD,QAAQ,CAAC7F,MAAD,EAAS8F,KAAT,CAJqB,EAK7B4L,MAL6B,CAAjC;AAMH;AACJ;;AACD,iBAAKR,kBAAL,GAA0B,KAAKa,aAAL,CAAmB3R,GAAnB,EAAyB,gBAAeoF,EAAG,EAA3C,EAA8C3F,KAA9C,EAAqDG,MAArD,EAA6D0R,MAA7D,CAA1B;AACA,iBAAKT,iBAAL,GAAyB,KAAKc,aAAL,CAAmB3R,GAAnB,EAAyB,iBAAgBoF,EAAG,EAA5C,EACrBK,QAAQ,CAAChG,KAAD,EAAQ,GAAR,CADa,EACCgG,QAAQ,CAAC7F,MAAD,EAAS,GAAT,CADT,EACwB0R,MADxB,CAAzB;AAEH;AACJ;;AACOK,QAAAA,aAAa,CACjB3R,GADiB,EAEjB8J,IAFiB,EAEHrK,KAFG,EAEYG,MAFZ,EAE4B0R,MAF5B,EAE+D;AAChF,gBAAMM,IAAI,GAAG;AAAE9H,YAAAA,IAAF;AAAQrK,YAAAA,KAAR;AAAeG,YAAAA;AAAf,WAAb;AACAI,UAAAA,GAAG,CAACoE,eAAJ,CAAoBwN,IAAI,CAAC9H,IAAzB,EAA+BwH,MAA/B,EAAuCM,IAAI,CAACnS,KAA5C,EAAmDmS,IAAI,CAAChS,MAAxD;AACA,iBAAOgS,IAAP;AACH;;AAED1E,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAMD0E,cANC,EAO8C;AAC/C,cAAI,CAACjO,aAAa,CAACyN,WAAnB,EAAgC;AAC5B,mBAAOQ,cAAP;AACH;;AAED,YAAEjO,aAAa,CAAC6D,eAAhB;AACA3D,UAAAA,MAAM,CAACF,aAAa,CAAC6D,eAAd,IAAiC,CAAlC,CAAN;AAEA,gBAAMsJ,KAAK,GAAGnN,aAAa,CAACuD,QAAd,CAAuB4J,KAArC;AACA,gBAAM3L,EAAE,GAAG7G,MAAM,CAACmO,MAAP,CAAcrF,cAAzB;;AAEA,kBAAQ0J,KAAK,CAACzO,IAAd;AACI,iBAAK;AAAA;AAAA,wCAAU2O,gBAAf;AAAiC;AAC7B,sBAAMa,QAAQ,GAAGf,KAAK,CAACG,oBAAvB;AACApN,gBAAAA,MAAM,CAAC,CAAC,CAACgO,QAAH,CAAN;AACA,uBAAO,KAAKC,+BAAL,CACH/R,GADG,EACE2D,UADF,EAEHC,aAFG,EAGHA,aAAa,CAACuD,QAHX,EAIH2K,QAJG,EAKH1M,EALG,EAMHxB,aAAa,CAACnE,KANX,EAOHmE,aAAa,CAAChE,MAPX,EAQHuN,OAAO,CAAC9I,SARL,CAAP;AASH;;AACD,iBAAK;AAAA;AAAA,wCAAU8M,YAAf;AAA6B;AACzB,sBAAMW,QAAQ,GAAGf,KAAK,CAACK,oBAAvB;AACAtN,gBAAAA,MAAM,CAAC,CAAC,CAACgO,QAAH,CAAN;AACA,uBAAO,KAAKE,2BAAL,CACHhS,GADG,EACE2D,UADF,EAEHC,aAFG,EAGHA,aAAa,CAACuD,QAHX,EAIH2K,QAJG,EAKH1M,EALG,EAMHxB,aAAa,CAACnE,KANX,EAOHmE,aAAa,CAAChE,MAPX,EAQHuN,OAAO,CAAC9I,SARL,CAAP;AASH;;AACD;AACI,qBAAOwN,cAAP;AA5BR;AA8BH;;AACOE,QAAAA,+BAA+B,CACnC/R,GADmC,EAEnC2D,UAFmC,EAGnCC,aAHmC,EAInCuD,QAJmC,EAKnC8K,aALmC,EAMnC7M,EANmC,EAOnC3F,KAPmC,EAQnCG,MARmC,EASnCsS,YATmC,EAUH;AAChC,gBAAMpN,SAAS,GAAGD,SAAS,CAACC,SAA5B,CADgC,CAEhC;AACA;AACA;AAEA;;AACA,gBAAM2M,UAAU,GAAGtK,QAAQ,CAAC4J,KAAT,CAAeU,UAAlC;AACA,gBAAMU,SAAS,GAAGV,UAAU,GAAG,CAA/B;AACA,eAAKjB,YAAL,CAAkBhL,MAAlB,GAA2B2M,SAA3B;AACA,eAAK1B,aAAL,CAAmBjL,MAAnB,GAA4B2M,SAA5B;AACA,eAAK3B,YAAL,CAAkB,CAAlB,IAAuB9Q,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,CAAnB,CAAT,EAAgC,CAAhC,CAAvB;AACA,eAAKgR,aAAL,CAAmB,CAAnB,IAAwB/Q,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWD,MAAM,GAAG,CAApB,CAAT,EAAiC,CAAjC,CAAxB;;AACA,eAAK,IAAI0K,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAK6H,SAAtB,EAAiC,EAAE7H,CAAnC,EAAsC;AAClC,iBAAKkG,YAAL,CAAkBlG,CAAlB,IAAuB5K,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW,KAAK2Q,YAAL,CAAkBlG,CAAC,GAAG,CAAtB,IAA2B,CAAtC,CAAT,EAAmD,CAAnD,CAAvB;AACA,iBAAKmG,aAAL,CAAmBnG,CAAnB,IAAwB5K,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW,KAAK4Q,aAAL,CAAmBnG,CAAC,GAAG,CAAvB,IAA4B,CAAvC,CAAT,EAAoD,CAApD,CAAxB;AACH,WAhB+B,CAkBhC;;;AACA,eAAKoG,cAAL,CAAoBlL,MAApB,GAA6B2M,SAA7B;;AACA,eAAK,IAAI7H,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAK6H,SAAtB,EAAiC,EAAE7H,CAAnC,EAAsC;AAClC,iBAAKoG,cAAL,CAAoBpG,CAApB,IAA0B,WAAUlF,EAAG,IAAGkF,CAAE,EAA5C;AACH,WAtB+B,CAwBhC;;;AACA,eAAKgG,YAAL,CAAkBtN,CAAlB,GAAsBW,UAAU,CAACvC,cAAX,GAA4B,CAA5B,GAAgC,CAAtD;AACA,eAAKkP,YAAL,CAAkB3H,CAAlB,GAAsB,CAAtB,CA1BgC,CA0BP;;AACzB,eAAK2H,YAAL,CAAkB1H,CAAlB,GAAsBzB,QAAQ,CAAC4J,KAAT,CAAeqB,SAArC;AACA,eAAK9B,YAAL,CAAkBxR,CAAlB,GAAsBqI,QAAQ,CAAC4J,KAAT,CAAesB,eAAf,GAAiC,CAAjC,GAAqC,CAA3D,CA5BgC,CA8BhC;;AACA,gBAAMC,aAAa,GAAGtS,GAAG,CAACiE,aAAJ,CAAkB,KAAKuM,YAAL,CAAkB,CAAlB,CAAlB,EAAwC,KAAKC,aAAL,CAAmB,CAAnB,CAAxC,EAA+D,oBAA/D,CAAtB;AACA6B,UAAAA,aAAa,CAAClO,eAAd,CACI,KAAKsM,cAAL,CAAoB,CAApB,CADJ,EAEIpM,MAAM,CAACC,KAFX,EAGIC,OAAO,CAACC,KAHZ,EAII,KAAK4L,2BAJT;AAMAiC,UAAAA,aAAa,CAAC3N,UAAd,CAAyBuN,YAAzB,EAAuC,cAAvC;AACAI,UAAAA,aAAa,CAAClF,OAAd,CAAsB,aAAtB,EAAqC,KAAKkD,YAA1C;AACAgC,UAAAA,aAAa,CACR1N,QADL,CACcE,SAAS,CAACC,MADxB,EAEKC,iBAFL,CAEuBiN,aAFvB,EAEsC,CAFtC,EAxCgC,CA4ChC;;AACA,eAAK,IAAI3H,CAAC,GAAG,CAAb,EAAgBA,CAAC,KAAK6H,SAAtB,EAAiC,EAAE7H,CAAnC,EAAsC;AAClC,kBAAMiI,QAAQ,GAAGvS,GAAG,CAACiE,aAAJ,CAAkB,KAAKuM,YAAL,CAAkBlG,CAAlB,CAAlB,EAAwC,KAAKmG,aAAL,CAAmBnG,CAAnB,CAAxC,EAA+D,qBAA/D,CAAjB;AACAiI,YAAAA,QAAQ,CAACnO,eAAT,CAAyB,KAAKsM,cAAL,CAAoBpG,CAApB,CAAzB,EAAiDhG,MAAM,CAACC,KAAxD,EAA+DC,OAAO,CAACC,KAAvE,EAA8E,KAAK4L,2BAAnF;AACAkC,YAAAA,QAAQ,CAAC5N,UAAT,CAAoB,KAAK+L,cAAL,CAAoBpG,CAAC,GAAG,CAAxB,CAApB,EAAgD,cAAhD;AACA,iBAAKiG,aAAL,CAAmBvN,CAAnB,GAAuB,KAAKwN,YAAL,CAAkBlG,CAAC,GAAG,CAAtB,CAAvB;AACA,iBAAKiG,aAAL,CAAmB5H,CAAnB,GAAuB,KAAK8H,aAAL,CAAmBnG,CAAC,GAAG,CAAvB,CAAvB;AACAiI,YAAAA,QAAQ,CAACnF,OAAT,CAAiB,cAAjB,EAAiC,KAAKmD,aAAtC;AACAgC,YAAAA,QAAQ,CACH3N,QADL,CACcE,SAAS,CAACC,MADxB,EAEKC,iBAFL,CAEuBiN,aAFvB,EAEsC,CAFtC;AAGH,WAvD+B,CAyDhC;;;AACA,eAAK,IAAI3H,CAAC,GAAGmH,UAAb,EAAyBnH,CAAC,KAAK,CAA/B,GAAmC;AAC/B,kBAAMkI,MAAM,GAAGxS,GAAG,CAACiE,aAAJ,CAAkB,KAAKuM,YAAL,CAAkBlG,CAAlB,CAAlB,EAAwC,KAAKmG,aAAL,CAAmBnG,CAAnB,CAAxC,EAA+D,mBAA/D,CAAf;AACAkI,YAAAA,MAAM,CAACpO,eAAP,CAAuB,KAAKsM,cAAL,CAAoBpG,CAApB,CAAvB,EAA+ChG,MAAM,CAACC,KAAtD,EAA6DC,OAAO,CAACC,KAArE,EAA4E,KAAK4L,2BAAjF;AACAmC,YAAAA,MAAM,CAAC7N,UAAP,CAAkB,KAAK+L,cAAL,CAAoBpG,CAAC,GAAG,CAAxB,CAAlB,EAA8C,cAA9C;AACA,iBAAKiG,aAAL,CAAmBvN,CAAnB,GAAuB,KAAKwN,YAAL,CAAkBlG,CAAC,GAAG,CAAtB,CAAvB;AACA,iBAAKiG,aAAL,CAAmB5H,CAAnB,GAAuB,KAAK8H,aAAL,CAAmBnG,CAAC,GAAG,CAAvB,CAAvB;AACAkI,YAAAA,MAAM,CAACpF,OAAP,CAAe,cAAf,EAA+B,KAAKmD,aAApC;AACAiC,YAAAA,MAAM,CACD5N,QADL,CACcE,SAAS,CAACC,MADxB,EAEKC,iBAFL,CAEuBiN,aAFvB,EAEsC,CAFtC;AAGH,WApE+B,CAsEhC;;;AACA,eAAK3B,YAAL,CAAkBxR,CAAlB,GAAsBqI,QAAQ,CAAC4J,KAAT,CAAe0B,SAArC;AACA,gBAAMC,WAAW,GAAG1S,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,kBAAjC,CAApB;AACA8S,UAAAA,WAAW,CAACtO,eAAZ,CAA4B8N,YAA5B,EAA0C5N,MAAM,CAAC+G,IAAjD,EAAuD7G,OAAO,CAACC,KAA/D;AACAiO,UAAAA,WAAW,CAAC/N,UAAZ,CAAuB,KAAK+L,cAAL,CAAoB,CAApB,CAAvB,EAA+C,cAA/C;AACAgC,UAAAA,WAAW,CAACtF,OAAZ,CAAoB,aAApB,EAAmC,KAAKkD,YAAxC;AACAoC,UAAAA,WAAW,CACN9N,QADL,CACcE,SAAS,CAAC8E,KADxB,EAEK5E,iBAFL,CAEuBiN,aAFvB,EAEsC,CAFtC;;AAIA,cAAIrO,aAAa,CAAC6D,eAAd,KAAkC,CAAtC,EAAyC;AACrC,mBAAO/D,mBAAmB,CAAC1D,GAAD,EAAM2D,UAAN,EAAkBC,aAAlB,EAAiCsO,YAAjC,CAA1B;AACH,WAFD,MAEO;AACH,mBAAOQ,WAAP;AACH;AACJ;;AACOC,QAAAA,QAAQ,CACZ3S,GADY,EAEZP,KAFY,EAGZG,MAHY,EAIZgT,MAJY,EAKZvO,SALY,EAMZyN,QANY,EAOZe,SAPY,EAQZC,MAAkB,GAAGxO,MAAM,CAACC,KARhB,EASZwK,UAAqB,GAAGrK,2BATZ,EAUZqO,SAA8B,GAAGlO,SAAS,CAACC,SAAV,CAAoBC,MAVzC,EAUmF;AAC/F,gBAAMf,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiCgT,MAAjC,CAAb;AACA5O,UAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCyO,MAAhC,EAAwCtO,OAAO,CAACC,KAAhD,EAAuDsK,UAAvD;AACA/K,UAAAA,IAAI,CAACY,QAAL,CAAcmO,SAAd,EACK/N,iBADL,CACuB8M,QADvB,EACiCe,SADjC;AAEA,iBAAO7O,IAAP;AACH;;AACOgO,QAAAA,2BAA2B,CAC/BhS,GAD+B,EAE/B2D,UAF+B,EAG/BC,aAH+B,EAI/BuD,QAJ+B,EAK/B8K,aAL+B,EAM/B7M,EAN+B,EAO/B3F,KAP+B,EAQ/BG,MAR+B,EAS/BsS,YAT+B,EAUC;AAChC;AACA,eAAK5B,YAAL,CAAkBtN,CAAlB,GAAsBW,UAAU,CAACvC,cAAX,GAA4B,CAA5B,GAAgC,CAAtD;AACA,eAAKkP,YAAL,CAAkBtN,CAAlB,GAAsB,CAAtB,CAHgC,CAGP;;AACzB,eAAKsN,YAAL,CAAkB1H,CAAlB,GAAsBzB,QAAQ,CAAC4J,KAAT,CAAeqB,SAArC;AACA,eAAK9B,YAAL,CAAkBxR,CAAlB,GAAsBqI,QAAQ,CAAC4J,KAAT,CAAe0B,SAArC;AACA,gBAAMO,aAAa,GAAG,KAAKnC,iBAA3B,CANgC,CAQhC;;AACA,cAAIoC,cAAc,GAAG,KAAKN,QAAL,CACjB3S,GADiB,EAEjBgT,aAAa,CAACvT,KAFG,EAGjBuT,aAAa,CAACpT,MAHG,EAIjB,2BAJiB,EAKjBoT,aAAa,CAAClJ,IALG,EAMjBmI,aANiB,EAOjB,CAPiB,CAArB;;AASAgB,UAAAA,cAAc,CAACtO,UAAf,CAA0BuN,YAA1B,EAAwC,aAAxC;AACAe,UAAAA,cAAc,CAAC7F,OAAf,CAAuB,aAAvB,EAAsC,KAAKkD,YAA3C;AAEA,gBAAM4C,eAAe,GAAG,KAAKtC,wBAA7B,CArBgC,CAsBhC;;AACA,eAAK,IAAItG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG4I,eAAe,CAAC1N,MAApC,EAA4C,EAAE8E,CAA9C,EAAiD;AAC7C,kBAAM6I,QAAQ,GAAGD,eAAe,CAAC5I,CAAD,CAAhC;AACA,kBAAM8I,UAAU,GAAG9I,CAAC,KAAK,CAAN,GAAU0I,aAAV,GAA0BE,eAAe,CAAC5I,CAAC,GAAG,CAAL,CAA5D;AACA,kBAAM+I,cAAc,GAAGD,UAAU,CAACtJ,IAAlC;AACA,iBAAKyG,aAAL,CAAmBvN,CAAnB,GAAuB,IAAIoQ,UAAU,CAAC3T,KAAtC;AACA,iBAAK8Q,aAAL,CAAmB5H,CAAnB,GAAuB,IAAIyK,UAAU,CAACxT,MAAtC;AACAqT,YAAAA,cAAc,GAAG,KAAKN,QAAL,CACb3S,GADa,EAEbmT,QAAQ,CAAC1T,KAFI,EAGb0T,QAAQ,CAACvT,MAHI,EAIb,4BAJa,EAKbuT,QAAQ,CAACrJ,IALI,EAMbmI,aANa,EAOb,CAPa,CAAjB;AASAgB,YAAAA,cAAc,CAACtO,UAAf,CAA0B0O,cAA1B,EAA0C,aAA1C;AACAJ,YAAAA,cAAc,CAAC7F,OAAf,CAAuB,aAAvB,EAAsC,KAAKmD,aAA3C;AACH;;AACD,gBAAM+C,SAAS,GAAGJ,eAAe,CAAC1N,MAAhB,GAAyB,CAA3C;AACA,gBAAM+N,aAAa,GAAG,KAAK5C,sBAA3B,CA1CgC,CA2ChC;;AACA,eAAK,IAAIrG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGiJ,aAAa,CAAC/N,MAAlC,EAA0C8E,CAAC,EAA3C,EAA+C;AAC3C,kBAAM6I,QAAQ,GAAGI,aAAa,CAACjJ,CAAD,CAA9B;AACA,kBAAMkJ,SAAS,GAAGlJ,CAAC,KAAK,CAAN,GAAU4I,eAAe,CAACI,SAAD,CAAzB,GAAuCC,aAAa,CAACjJ,CAAC,GAAG,CAAL,CAAtE;AACA,kBAAMmJ,aAAa,GAAGD,SAAS,CAAC1J,IAAhC;AACA,iBAAKyG,aAAL,CAAmBvN,CAAnB,GAAuB,IAAIwQ,SAAS,CAAC/T,KAArC;AACA,iBAAK8Q,aAAL,CAAmB5H,CAAnB,GAAuB,IAAI6K,SAAS,CAAC5T,MAArC;AACAqT,YAAAA,cAAc,GAAG,KAAKN,QAAL,CACb3S,GADa,EAEbmT,QAAQ,CAAC1T,KAFI,EAGb0T,QAAQ,CAACvT,MAHI,EAIb,0BAJa,EAKbuT,QAAQ,CAACrJ,IALI,EAMbmI,aANa,EAOb,CAPa,CAAjB;AASAgB,YAAAA,cAAc,CAACtO,UAAf,CAA0B8O,aAA1B,EAAyC,aAAzC;AACAR,YAAAA,cAAc,CAACtO,UAAf,CAA0BuO,eAAe,CAACI,SAAS,GAAG,CAAZ,GAAgBhJ,CAAjB,CAAf,CAAmCR,IAA7D,EAAmE,mBAAnE;AACAmJ,YAAAA,cAAc,CAAC7F,OAAf,CAAuB,aAAvB,EAAsC,KAAKmD,aAA3C;AACH,WA9D+B,CAgEhC;;;AACA,gBAAMmC,WAAW,GAAG,KAAKC,QAAL,CAChB3S,GADgB,EAEhBP,KAFgB,EAGhBG,MAHgB,EAIhB,yBAJgB,EAKhBsS,YALgB,EAMhBD,aANgB,EAOhB,CAPgB,EAQhB3N,MAAM,CAAC+G,IARS,CAApB;;AAUAqH,UAAAA,WAAW,CAAC/N,UAAZ,CAAuB4O,aAAa,CAACA,aAAa,CAAC/N,MAAd,GAAuB,CAAxB,CAAb,CAAwCsE,IAA/D,EAAqE,cAArE;AACA4I,UAAAA,WAAW,CAACtF,OAAZ,CAAoB,aAApB,EAAmC,KAAKkD,YAAxC;;AACA,cAAI1M,aAAa,CAAC6D,eAAd,KAAkC,CAAtC,EAAyC;AACrC,mBAAO/D,mBAAmB,CAAC1D,GAAD,EAAM2D,UAAN,EAAkBC,aAAlB,EAAiCsO,YAAjC,CAA1B;AACH,WAFD,MAEO;AACH,mBAAOQ,WAAP;AACH;AACJ;;AA9UyE,O;;+CAoWjExU,6B,GAAN,MAAMA,6BAAN,CAA6E;AAAA;AAAA,eAoH/DwV,oBApH+D,GAoHxC,IAAIzN,IAAJ,CAAS,CAAT,EAAY,CAAZ,CApHwC;AAAA;;AAChF1C,QAAAA,cAAc,GAAW;AACrB,iBAAO,CAAP;AACH;;AACDE,QAAAA,cAAc,GAAW;AACrB,iBAAO,GAAP;AACH;;AACDoI,QAAAA,YAAY,CACRtN,MADQ,EAERoF,UAFQ,EAGRC,aAHQ,EAGqD;AAC7D,gBAAMuD,QAAQ,GAAGvD,aAAa,CAACuD,QAA/B;AAEAvD,UAAAA,aAAa,CAAC+P,kBAAd,GACMxM,QAAQ,CAACyM,YAAT,CAAsBjS,OAAtB,IACC,CAAC,CAACwF,QAAQ,CAACyM,YAAT,CAAsB9B,QADzB,IAEC,CAAC,CAAC3K,QAAQ,CAACyM,YAAT,CAAsBC,eAH/B;AAKAjQ,UAAAA,aAAa,CAACkQ,iBAAd,GACMlQ,aAAa,CAACgE,SAAd,CAAwB;AAAxB,aACChE,aAAa,CAAC+P,kBAFrB,CAR6D,CAUpB;;AAEzC,cAAI/P,aAAa,CAACkQ,iBAAlB,EAAqC;AACjC,cAAElQ,aAAa,CAAC6D,eAAhB;AACH;AACJ;;AACDgF,QAAAA,YAAY,CACRzM,GADQ,EAER2D,UAFQ,EAGRC,aAHQ,EAGqD;AAC7D,cAAIA,aAAa,CAAC+P,kBAAlB,EAAsC;AAClC7P,YAAAA,MAAM,CAAC,CAAC,CAACF,aAAa,CAACuD,QAAd,CAAuByM,YAAvB,CAAoC9B,QAAvC,CAAN;AACAlO,YAAAA,aAAa,CAACuD,QAAd,CAAuByM,YAAvB,CAAoC9B,QAApC,CAA6CiC,WAA7C,CACI,iBADJ,EAEInQ,aAAa,CAACuD,QAAd,CAAuByM,YAAvB,CAAoCC,eAFxC;AAGH;AACJ;;AACD3G,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAMD0E,cANC,EAO8C;AAC/C,cAAI,CAACjO,aAAa,CAACkQ,iBAAnB,EAAsC;AAClC,mBAAOjC,cAAP;AACH;;AAED,YAAEjO,aAAa,CAAC6D,eAAhB;AACA3D,UAAAA,MAAM,CAACF,aAAa,CAAC6D,eAAd,IAAiC,CAAlC,CAAN;;AACA,cAAI7D,aAAa,CAAC6D,eAAd,KAAkC,CAAtC,EAAyC;AACrC,mBAAO,KAAKuM,sBAAL,CAA4BhU,GAA5B,EAAiC2D,UAAjC,EAA6CC,aAA7C,EACHA,aAAa,CAACnE,KADX,EACkBmE,aAAa,CAAChE,MADhC,EAEHuN,OAAO,CAAC9I,SAFL,EAEgBT,aAAa,CAACS,SAF9B,CAAP;AAGH,WAJD,MAIO;AACH,kBAAMe,EAAE,GAAGxB,aAAa,CAACyD,cAAzB;AACA,kBAAM4M,cAAc,GAAGrQ,aAAa,CAAC8D,kBAAd,GAChB,gBADgB,GAEhB,UAFP;AAIA,kBAAMwM,YAAY,GAAGjP,uBAAuB,CAACkI,OAAO,CAAC9I,SAAT,EAAoB4P,cAApB,EAAoC7O,EAApC,CAA5C;AACA,kBAAM8M,YAAY,GAAG/E,OAAO,CAAC9I,SAA7B;AACA8I,YAAAA,OAAO,CAAC9I,SAAR,GAAoB6P,YAApB;AAEA,mBAAO,KAAKF,sBAAL,CAA4BhU,GAA5B,EAAiC2D,UAAjC,EAA6CC,aAA7C,EACHA,aAAa,CAACnE,KADX,EACkBmE,aAAa,CAAChE,MADhC,EAEHsS,YAFG,EAEWgC,YAFX,CAAP;AAGH;AACJ;;AACOF,QAAAA,sBAAsB,CAC1BhU,GAD0B,EAE1B2D,UAF0B,EAG1BC,aAH0B,EAI1BnE,KAJ0B,EAK1BG,MAL0B,EAM1BsS,YAN0B,EAO1B7N,SAP0B,EAQM;AAChC,cAAIL,IAAJ;AACA,gBAAMmD,QAAQ,GAAGvD,aAAa,CAACuD,QAA/B;;AACA,cAAIvD,aAAa,CAAC+P,kBAAlB,EAAsC;AAClC7P,YAAAA,MAAM,CAAC,CAAC,CAACqD,QAAQ,CAACyM,YAAT,CAAsB9B,QAAzB,CAAN;AACAhO,YAAAA,MAAM,CAAC,CAAC,CAACqD,QAAQ,CAACyM,YAAT,CAAsBC,eAAzB,CAAN;AAEA,kBAAMM,MAAM,GAAGhN,QAAQ,CAACyM,YAAT,CAAsBC,eAArC;AACA,iBAAKH,oBAAL,CAA0B1Q,CAA1B,GAA8BmR,MAAM,CAAC1U,KAArC;AACA,iBAAKiU,oBAAL,CAA0B/K,CAA1B,GAA8BwL,MAAM,CAACvU,MAArC;AAEA,kBAAMwU,WAAW,GAAGD,MAAM,CAAC1U,KAAP,KAAiB0U,MAAM,CAACvU,MAA5C;;AACA,gBAAIwU,WAAJ,EAAiB;AACbpQ,cAAAA,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,sBAAjC,CAAP;AACH,aAFD,MAEO;AACHoE,cAAAA,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,sBAAjC,CAAP;AACH;;AACDoE,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CC,OAAO,CAACC,KAAtD,EAA6DC,2BAA7D;AACAV,YAAAA,IAAI,CAACW,UAAL,CAAgBuN,YAAhB,EAA8B,eAA9B;AACAlO,YAAAA,IAAI,CAACqQ,OAAL,CAAa,gBAAb,EAA+B,KAAKX,oBAApC;AACA1P,YAAAA,IAAI,CAACsQ,QAAL,CAAc,YAAd,EAA4BnN,QAAQ,CAACyM,YAAT,CAAsBW,UAAlD;AACAvQ,YAAAA,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoBC,MAAlC,EACKC,iBADL,CACuBmC,QAAQ,CAACyM,YAAT,CAAsB9B,QAD7C,EACuDsC,WAAW,GAAG,CAAH,GAAO,CADzE;AAEH,WApBD,MAoBO;AACHpQ,YAAAA,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,iBAAjC,CAAP;AACAoE,YAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CC,OAAO,CAACC,KAAtD,EAA6DC,2BAA7D;AACAV,YAAAA,IAAI,CAACW,UAAL,CAAgBuN,YAAhB,EAA8B,cAA9B;;AACA,gBAAI/K,QAAQ,CAACqN,WAAT,CAAqB1C,QAAzB,EAAmC;AAC/B9N,cAAAA,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoBC,MAAlC,EACKC,iBADL,CACuBmC,QAAQ,CAACqN,WAAT,CAAqB1C,QAD5C,EACsD,CADtD;AAEH,aAHD,MAGO;AACHhO,cAAAA,MAAM,CAAC,CAAC,CAACF,aAAa,CAACG,sBAAjB,CAAN;AACAC,cAAAA,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoBC,MAAlC,EACKC,iBADL,CACuBpB,aAAa,CAACG,sBADrC,EAC6D,CAD7D;AAEH;AACJ;;AACD,iBAAOC,IAAP;AACH;;AAnH+E,O;;wCA2HvE7F,sB,GAAN,MAAMA,sBAAN,CAAsE;AAAA;AA4FzE;AA5FyE,eA6FxDsW,WA7FwD,GA6F1C,IAAItO,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CA7F0C;AAAA;;AACzE5C,QAAAA,cAAc,GAAW;AACrB,iBAAO,CAAP;AACH;;AACDE,QAAAA,cAAc,GAAW;AACrB,iBAAO,GAAP;AACH;;AACDoI,QAAAA,YAAY,CACRtN,MADQ,EAERoF,UAFQ,EAGRC,aAHQ,EAG8C;AACtDA,UAAAA,aAAa,CAAC8Q,UAAd,GACM9Q,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4BhT,OAA5B,IACC,CAAC,CAACiC,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4B7C,QAFrC;;AAGA,cAAIlO,aAAa,CAAC8Q,UAAlB,EAA8B;AAC1B,cAAE9Q,aAAa,CAAC6D,eAAhB;AACH;AACJ;;AACDyF,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAMD0E,cANC,EAO8C;AAC/C,cAAI,CAACjO,aAAa,CAAC8Q,UAAnB,EAA+B;AAC3B,mBAAO7C,cAAP;AACH;;AACD,YAAEjO,aAAa,CAAC6D,eAAhB;AACA3D,UAAAA,MAAM,CAACF,aAAa,CAAC6D,eAAd,IAAiC,CAAlC,CAAN;AAEA,gBAAMrC,EAAE,GAAGxB,aAAa,CAACyD,cAAzB;AACA,gBAAM4M,cAAc,GAAGrQ,aAAa,CAAC8D,kBAAd,GAChB,gBADgB,GAEhB,UAFP;AAGA,gBAAMwM,YAAY,GAAGjP,uBAAuB,CAACkI,OAAO,CAAC9I,SAAT,EAAoB4P,cAApB,EAAoC7O,EAApC,CAA5C;AAEAtB,UAAAA,MAAM,CAAC,CAAC,CAACF,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4B7C,QAA/B,CAAN;;AACA,cAAIlO,aAAa,CAAC6D,eAAd,KAAkC,CAAtC,EAAyC;AACrC,gBAAI7D,aAAa,CAAC8D,kBAAlB,EAAsC;AAClC,mBAAKkN,YAAL,CAAkB5U,GAAlB,EAAuB2D,UAAvB,EACIC,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4B7C,QADhC,EAEIlO,aAAa,CAACnE,KAFlB,EAGImE,aAAa,CAAChE,MAHlB,EAIIuN,OAAO,CAAC9I,SAJZ,EAKI6P,YALJ;;AAMA,qBAAOxQ,mBAAmB,CAAC1D,GAAD,EAAM2D,UAAN,EAAkBC,aAAlB,EAAiCsQ,YAAjC,CAA1B;AACH,aARD,MAQO;AACHpQ,cAAAA,MAAM,CAACF,aAAa,CAACnE,KAAd,KAAwBmE,aAAa,CAACM,WAAvC,CAAN;AACAJ,cAAAA,MAAM,CAACF,aAAa,CAAChE,MAAd,KAAyBgE,aAAa,CAACO,YAAxC,CAAN;AACA,qBAAO,KAAKyQ,YAAL,CAAkB5U,GAAlB,EAAuB2D,UAAvB,EACHC,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4B7C,QADzB,EAEHlO,aAAa,CAACnE,KAFX,EAGHmE,aAAa,CAAChE,MAHX,EAIHuN,OAAO,CAAC9I,SAJL,EAKHT,aAAa,CAACS,SALX,CAAP;AAMH;AACJ,WAnBD,MAmBO;AACH,kBAAMwQ,cAAc,GAAG1H,OAAO,CAAC9I,SAA/B;AACA8I,YAAAA,OAAO,CAAC9I,SAAR,GAAoB6P,YAApB;;AACA,kBAAMY,QAAQ,GAAG,KAAKF,YAAL,CAAkB5U,GAAlB,EAAuB2D,UAAvB,EACbC,aAAa,CAACuD,QAAd,CAAuBwN,IAAvB,CAA4B7C,QADf,EAEblO,aAAa,CAACnE,KAFD,EAGbmE,aAAa,CAAChE,MAHD,EAIbiV,cAJa,EAKbX,YALa,CAAjB;;AAMA,mBAAOY,QAAP;AACH;AACJ;;AACOF,QAAAA,YAAY,CAChB5U,GADgB,EAEhB2D,UAFgB,EAGhBoR,YAHgB,EAIhBtV,KAJgB,EAKhBG,MALgB,EAMhBsU,YANgB,EAOhB7P,SAPgB,EAQgB;AAChC,eAAKoQ,WAAL,CAAiBzR,CAAjB,GAAqBvD,KAArB;AACA,eAAKgV,WAAL,CAAiB9L,CAAjB,GAAqB/I,MAArB;AACA,eAAK6U,WAAL,CAAiB7L,CAAjB,GAAqB,IAAInJ,KAAzB;AACA,eAAKgV,WAAL,CAAiB3V,CAAjB,GAAqB,IAAIc,MAAzB;AAEA,gBAAMoE,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAb;AACAoE,UAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CC,OAAO,CAACC,KAAtD,EAA6DC,2BAA7D;AACAV,UAAAA,IAAI,CAACW,UAAL,CAAgBuP,YAAhB,EAA8B,eAA9B;AACAlQ,UAAAA,IAAI,CAACoJ,OAAL,CAAa,SAAb,EAAwB,KAAKqH,WAA7B;AACAzQ,UAAAA,IAAI,CAACY,QAAL,CAAcC,SAAS,CAACC,SAAV,CAAoBC,MAAlC,EACKC,iBADL,CACuB+P,YADvB,EACqC,CADrC;AAEA,iBAAO/Q,IAAP;AACH;;AA3FwE,O;;uCAoGhE5F,qB,GAAN,MAAMA,qBAAN,CAAqE;AAAA;AAgGxE;AAhGwE,eAiGvD4W,UAjGuD,GAiG1C,IAAI7O,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAjG0C;AAAA,eAkGvD8O,WAlGuD,GAkGzC,IAAI9O,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,CAlGyC;AAAA;;AACxE5C,QAAAA,cAAc,GAAW;AACrB,iBAAO,CAAP;AACH;;AACDE,QAAAA,cAAc,GAAW;AACrB,iBAAO,GAAP;AACH;;AACDoI,QAAAA,YAAY,CACRtN,MADQ,EAERoF,UAFQ,EAGRC,aAHQ,EAG6C;AACrD;AACAA,UAAAA,aAAa,CAACsR,SAAd,GAA0BtR,aAAa,CAACuD,QAAd,CAAuBgO,GAAvB,CAA2BxT,OAA3B,IACnB,CAAC,CAACiC,aAAa,CAACuD,QAAd,CAAuBgO,GAAvB,CAA2BrD,QADV,IAEnBlO,aAAa,CAAC8D,kBAFK,IAGnB9D,aAAa,CAAC+D,YAAd,GAA6B,GAHpC;;AAKA,cAAI/D,aAAa,CAACsR,SAAlB,EAA6B;AACzB,cAAEtR,aAAa,CAAC6D,eAAhB;AACH;AACJ;;AACDyF,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAMD0E,cANC,EAO8C;AAC/C,cAAI,CAACjO,aAAa,CAACsR,SAAnB,EAA8B;AAC1B,mBAAOrD,cAAP;AACH;;AACD,YAAEjO,aAAa,CAAC6D,eAAhB;AAEA,gBAAMoN,cAAc,GAAG1H,OAAO,CAAC9I,SAA/B;AACA,gBAAM+Q,eAAe,GACfxR,aAAa,CAAC6D,eAAd,KAAkC,CAAlC,GACI7D,aAAa,CAACS,SADlB,GAEIY,uBAAuB,CAACkI,OAAO,CAAC9I,SAAT,EAAoB,SAApB,EAA+BT,aAAa,CAACyD,cAA7C,CAHjC;AAIA8F,UAAAA,OAAO,CAAC9I,SAAR,GAAoB+Q,eAApB;AAEAtR,UAAAA,MAAM,CAAC,CAAC,CAACF,aAAa,CAACuD,QAAd,CAAuBgO,GAAvB,CAA2BrD,QAA9B,CAAN;AACA,iBAAO,KAAKuD,WAAL,CAAiBrV,GAAjB,EAAsB2D,UAAtB,EAAkCC,aAAlC,EACHA,aAAa,CAACuD,QADX,EAEHvD,aAAa,CAACuD,QAAd,CAAuBgO,GAAvB,CAA2BrD,QAFxB,EAGHlO,aAAa,CAACyD,cAHX,EAIHzD,aAAa,CAACnE,KAJX,EAKHmE,aAAa,CAAChE,MALX,EAMHiV,cANG,EAOHjR,aAAa,CAACM,WAPX,EAQHN,aAAa,CAACO,YARX,EASHiR,eATG,CAAP;AAUH;;AACOC,QAAAA,WAAW,CACfrV,GADe,EAEf2D,UAFe,EAGfC,aAHe,EAIfuD,QAJe,EAKfmO,WALe,EAMflQ,EANe,EAOf3F,KAPe,EAQfG,MARe,EASfiV,cATe,EAUf3Q,WAVe,EAWfC,YAXe,EAYfiR,eAZe,EAaiB;AAChC,eAAKH,WAAL,CAAiBjS,CAAjB,GAAqBvD,KAArB;AACA,eAAKwV,WAAL,CAAiBtM,CAAjB,GAAqB/I,MAArB;AACA,eAAKqV,WAAL,CAAiBrM,CAAjB,GAAqB1E,WAArB;AACA,eAAK+Q,WAAL,CAAiBnW,CAAjB,GAAqBqF,YAArB;AACA,eAAK6Q,UAAL,CAAgBhS,CAAhB,GAAoB4C,KAAK,CAAC,MAAMuB,QAAQ,CAACgO,GAAT,CAAaI,SAApB,EAA+B,IAA/B,EAAqC,IAArC,CAAzB;AAEA,gBAAMC,aAAa,GAAG,SAAtB;AAEA,gBAAMC,YAAY,GAAGxQ,uBAAuB,CAACmQ,eAAD,EAAkBI,aAAlB,EAAiCpQ,EAAjC,CAA5C;AAEA,gBAAMsQ,QAAQ,GAAG1V,GAAG,CAACiE,aAAJ,CAAkBC,WAAlB,EAA+BC,YAA/B,EAA6C,aAA7C,CAAjB;AACAuR,UAAAA,QAAQ,CAACtR,eAAT,CAAyBqR,YAAzB,EAAuCnR,MAAM,CAACC,KAA9C,EAAqDC,OAAO,CAACC,KAA7D,EAAoEC,2BAApE;AACAgR,UAAAA,QAAQ,CAAC/Q,UAAT,CAAoBkQ,cAApB,EAAoC,iBAApC;AACAa,UAAAA,QAAQ,CAACtI,OAAT,CAAiB,YAAjB,EAA+B,KAAK6H,WAApC;AACAS,UAAAA,QAAQ,CACH9Q,QADL,CACcC,SAAS,CAACC,SAAV,CAAoBC,MADlC,EAEKC,iBAFL,CAEuBsQ,WAFvB,EAEoC,CAFpC;AAIA,gBAAMK,QAAQ,GAAG3V,GAAG,CAACiE,aAAJ,CAAkBC,WAAlB,EAA+BC,YAA/B,EAA6C,aAA7C,CAAjB;AACAwR,UAAAA,QAAQ,CAACvR,eAAT,CAAyBgR,eAAzB,EAA0C9Q,MAAM,CAACC,KAAjD,EAAwDC,OAAO,CAACC,KAAhE,EAAuEC,2BAAvE;AACAiR,UAAAA,QAAQ,CAAChR,UAAT,CAAoB8Q,YAApB,EAAkC,iBAAlC;AACAE,UAAAA,QAAQ,CAACvI,OAAT,CAAiB,YAAjB,EAA+B,KAAK6H,WAApC;AACAU,UAAAA,QAAQ,CAACvI,OAAT,CAAiB,WAAjB,EAA8B,KAAK4H,UAAnC;AACAW,UAAAA,QAAQ,CACH/Q,QADL,CACcC,SAAS,CAACC,SAAV,CAAoBC,MADlC,EAEKC,iBAFL,CAEuBsQ,WAFvB,EAEoC,CAFpC;AAIA,iBAAOK,QAAP;AACH;;AA/FuE,O;;sCAqG/DtX,oB,GAAN,MAAMA,oBAAN,CAAoE;AACvEkF,QAAAA,cAAc,GAAW;AACrB,iBAAO,CAAP;AACH;;AACDE,QAAAA,cAAc,GAAW;AACrB,iBAAO,IAAP;AACH;;AACDyJ,QAAAA,KAAK,CACDlN,GADC,EAED2D,UAFC,EAGDC,aAHC,EAIDrF,MAJC,EAKD4O,OALC,EAMD0E,cANC,EAO8C;AAC/C/N,UAAAA,MAAM,CAAC,CAAC,CAAC+N,cAAH,CAAN;AAEA,cAAI+D,KAAK,GAAG/Q,SAAS,CAACsF,UAAV,CAAqB0L,EAAjC;;AACA,cAAIjS,aAAa,CAAC4D,cAAlB,EAAkC;AAC9BoO,YAAAA,KAAK,IAAI/Q,SAAS,CAACsF,UAAV,CAAqB2L,QAA9B;AACAjE,YAAAA,cAAc,CAACkE,cAAf,GAAgC,IAAhC;AACH;;AACDlE,UAAAA,cAAc,CACTjN,QADL,CACcC,SAAS,CAACC,SAAV,CAAoB8E,KADlC,EACyC,SADzC,EACoD,SADpD,EAEKM,QAFL,CAEc3L,MAFd,EAEsBqX,KAFtB;AAIA,iBAAO/D,cAAP;AACH;;AA3BsE,O;;AA8B3E,UAAIhN,SAAJ,EAAe;AAAA,SAEL;AAAEC,UAAAA,SAAF;AAAaqF,UAAAA;AAAb,SAFK,GAEuBtF,SAFvB;;AAIX,cAAMmR,sBAAN,CAAkE;AAAA;AAAA,iBAC7CC,cAD6C,GACJtQ,QAAQ,CAACuQ,QAAT,CAAkBC,IAAlB,CAAuBC,aADnB;AAAA,iBAE7CC,YAF6C,GAE9B,IAAIrY,yBAAJ,EAF8B;AAAA,iBAG7CsY,UAH6C,GAGhC,IAAIrY,uBAAJ,EAHgC;AAAA,iBAI7CsY,gBAJ6C,GAI1B,IAAIrY,6BAAJ,EAJ0B;AAAA,iBAK7CsY,SAL6C,GAKjC,IAAIrY,sBAAJ,EALiC;AAAA,iBAM7CsY,QAN6C,GAMlC,IAAIrY,qBAAJ,EANkC;AAAA,iBAO7CsY,OAP6C,GAOnC,IAAIrY,oBAAJ,EAPmC;AAQ9D;AAR8D,iBAS7CoN,WAT6C,GAS/B,IAAI7E,KAAJ,CAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,CAT+B;AAAA,iBAU7C4E,SAV6C,GAUjC,IAAI1E,QAAJ,EAViC;AAAA,iBAW7C6P,QAX6C,GAWlC,IAAI9Y,eAAJ,EAXkC;AAAA,iBAY7C+Y,cAZ6C,GAY5B,IAAI9Y,aAAJ,EAZ4B;AAa9D;AAb8D,iBAc7C+Y,uBAd6C,GAcnB,IAAI9Q,QAAJ,EAdmB;AAgB9D;AAhB8D,iBAiBtD+Q,YAjBsD,GAiBvC,KAjBuC;AAiBhC;AAjBgC,iBAkBtDC,aAlBsD,GAkBL,EAlBK;AAAA;;AAoBtDC,UAAAA,qBAAqB,CACzBzY,MADyB,EAEzBqF,aAFyB,EAEK;AAC9B,kBAAMqT,YAAqB,GACrB1Y,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAACqF,UAAnC,IACC7N,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAACmQ,OAF1C;;AAIA,gBAAID,YAAJ,EAAkB;AACd,oBAAME,cAAc,GAAGtS,SAAS,CAACuS,yBAAV,EAAvB;;AACA,kBAAID,cAAJ,EAAoB;AAChBvT,gBAAAA,aAAa,CAACuD,QAAd,GAAyBgQ,cAAzB;AACH,eAFD,MAEO;AACHvT,gBAAAA,aAAa,CAACuD,QAAd,GAAyBD,eAAzB;AACH;AACJ,aAPD,MAOO;AACH,kBAAI3I,MAAM,CAAC8Y,gBAAX,EAA6B;AACzBzT,gBAAAA,aAAa,CAACuD,QAAd,GAAyB5I,MAAM,CAAC8Y,gBAAhC;AACH,eAFD,MAEO;AACHzT,gBAAAA,aAAa,CAACuD,QAAd,GAAyBD,eAAzB;AACH;AACJ;AACJ;;AAEOoQ,UAAAA,sBAAsB,CAAC1T,aAAD,EAAqC;AAC/D,kBAAMT,YAAY,GAAG,KAAK4T,aAA1B;AACA5T,YAAAA,YAAY,CAACqC,MAAb,GAAsB,CAAtB;AAEA,kBAAM2B,QAAQ,GAAGvD,aAAa,CAACuD,QAA/B;;AACA,gBAAIA,QAAQ,CAACoQ,OAAb,EAAsB;AAClB,mBAAK,MAAMvT,IAAX,IAAmBmD,QAAQ,CAACoQ,OAA5B,EAAqC;AACjCpU,gBAAAA,YAAY,CAAC4F,IAAb,CAAkB/E,IAAlB;AACH;;AACDF,cAAAA,MAAM,CAACX,YAAY,CAACqC,MAAb,KAAwB2B,QAAQ,CAACoQ,OAAT,CAAiB/R,MAA1C,CAAN;AACH;;AAEDrC,YAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAKsN,YAAvB;;AAEA,gBAAIlP,QAAQ,CAAC4J,KAAT,CAAepP,OAAnB,EAA4B;AACxBwB,cAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAKuN,UAAvB;AACH;;AAEDnT,YAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAKwN,gBAAvB;;AAEA,gBAAIpP,QAAQ,CAACwN,IAAT,CAAchT,OAAlB,EAA2B;AACvBwB,cAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAKyN,SAAvB;AACH;;AAED,gBAAIrP,QAAQ,CAACgO,GAAT,CAAaxT,OAAjB,EAA0B;AACtBwB,cAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAK0N,QAAvB;AACH;;AACDtT,YAAAA,YAAY,CAAC4F,IAAb,CAAkB,KAAK2N,OAAvB;AACH;;AAEOc,UAAAA,0BAA0B,CAC9BxX,GAD8B,EAE9BzB,MAF8B,EAG9BuN,eAH8B,EAI9BlI,aAJ8B,EAKhC;AACE,kBAAM8I,MAAM,GAAGnO,MAAM,CAACmO,MAAtB;AACA,kBAAMtF,gBAAyB,GAAG7I,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAAC0Q,IAAnC,IAA2C,CAAC,CAAC/K,MAAM,CAACgL,SAAtF;AACA,kBAAMC,UAAU,GAAGvQ,gBAAgB,IAAI7I,MAAM,CAAC4N,WAAP,KAAuBpF,WAAW,CAACsF,SAA1E,CAHF,CAKE;;AACAzI,YAAAA,aAAa,CAACwD,gBAAd,GAAiCA,gBAAjC;AACAxD,YAAAA,aAAa,CAACyD,cAAd,GAA+BqF,MAAM,CAACrF,cAAtC,CAPF,CASE;;AACAzD,YAAAA,aAAa,CAACS,SAAd,GAA0BqI,MAAM,CAACrI,SAAjC;AACAT,YAAAA,aAAa,CAAC0D,gBAAd,GAAiCoF,MAAM,CAACpF,gBAAxC,CAXF,CAaE;;AACA1D,YAAAA,aAAa,CAAC2D,kBAAd,GAAmC,CAAChJ,MAAM,CAACqZ,UAAP,GAAqB9R,MAAM,CAAC+R,IAAP,CAAYC,OAAlC,MAAgD,CAAnF;AACAlU,YAAAA,aAAa,CAAC4D,cAAd,GAA+BxH,GAAG,CAAC+X,QAAJ,IAAgBJ,UAA/C;AACA/T,YAAAA,aAAa,CAAC6D,eAAd,GAAgC,CAAhC,CAhBF,CAkBE;;AACA7D,YAAAA,aAAa,CAAC+D,YAAd,GAA6B/D,aAAa,CAACuD,QAAd,CAAuBQ,YAApD;AACA/D,YAAAA,aAAa,CAAC8D,kBAAd,GAAmC9D,aAAa,CAACuD,QAAd,CAAuBO,kBAAvB,IAC5B9D,aAAa,CAAC+D,YAAd,KAA+B,GADtC;AAGA/D,YAAAA,aAAa,CAACM,WAAd,GAA4BxE,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW6M,MAAM,CAACjN,KAAlB,CAAT,EAAmC,CAAnC,CAA5B;AACAmE,YAAAA,aAAa,CAACO,YAAd,GAA6BzE,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW6M,MAAM,CAAC9M,MAAlB,CAAT,EAAoC,CAApC,CAA7B;AAEAgE,YAAAA,aAAa,CAACnE,KAAd,GAAsBmE,aAAa,CAAC8D,kBAAd,GAChBhI,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW+D,aAAa,CAACM,WAAd,GAA4BN,aAAa,CAAC+D,YAArD,CAAT,EAA6E,CAA7E,CADgB,GAEhB/D,aAAa,CAACM,WAFpB;AAGAN,YAAAA,aAAa,CAAChE,MAAd,GAAuBgE,aAAa,CAAC8D,kBAAd,GACjBhI,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAW+D,aAAa,CAACO,YAAd,GAA6BP,aAAa,CAAC+D,YAAtD,CAAT,EAA8E,CAA9E,CADiB,GAEjB/D,aAAa,CAACO,YAFpB,CA7BF,CAiCE;;AACAP,YAAAA,aAAa,CAACgE,SAAd,GAA0BhE,aAAa,CAAC2D,kBAAd,IACnBuE,eAAe,CAAC1K,cADvB;AAEAwC,YAAAA,aAAa,CAACiE,cAAd,GAA+BjE,aAAa,CAACgE,SAAd,GACzBhH,GAAG,CAACmB,MAAJ,CAAWiW,OADc,GACJpX,GAAG,CAACmB,MAAJ,CAAWE,KADtC,CApCF,CAuCE;;AACA2B,YAAAA,aAAa,CAACG,sBAAd,GAAuC,KAAK8S,uBAA5C,CAxCF,CA0CE;;AACAjT,YAAAA,aAAa,CAACkE,qBAAd,GAAsC,KAAtC;AACH;;AAEOmQ,UAAAA,mBAAmB,CACvBjY,GADuB,EAEvBzB,MAFuB,EAGvBuN,eAHuB,EAIvBlI,aAJuB,EAKnB;AACJ,iBAAKoT,qBAAL,CAA2BzY,MAA3B,EAAmCqF,aAAnC;;AAEA,iBAAK0T,sBAAL,CAA4B1T,aAA5B;;AAEAV,YAAAA,qCAAqC,CAAC,KAAK6T,aAAN,CAArC;;AAEA,iBAAKS,0BAAL,CAAgCxX,GAAhC,EAAqCzB,MAArC,EAA6CuN,eAA7C,EAA8DlI,aAA9D;;AAEA,iBAAK,MAAMsU,OAAX,IAAsB,KAAKnB,aAA3B,EAA0C;AACtC,kBAAImB,OAAO,CAACrM,YAAZ,EAA0B;AACtBqM,gBAAAA,OAAO,CAACrM,YAAR,CAAqBtN,MAArB,EAA6BuN,eAA7B,EAA8ClI,aAA9C;AACH;AACJ;AACJ,WA/I6D,CAiJ9D;AACA;AACA;;;AACA6I,UAAAA,YAAY,CACRzM,GADQ,EAER0M,MAFQ,EAGRnO,MAHQ,EAIR2F,WAJQ,EAKRC,YALQ,EAMJ;AACJpE,YAAAA,oBAAoB,CAACC,GAAD,EAAM,KAAK2W,QAAX,CAApB;;AAEA,iBAAKsB,mBAAL,CAAyBjY,GAAzB,EAA8BzB,MAA9B,EAAsC,KAAKoY,QAA3C,EAAqD,KAAKC,cAA1D,EAHI,CAKJ;;;AACA,kBAAMxR,EAAE,GAAGsH,MAAM,CAACrF,cAAlB;AAEArH,YAAAA,GAAG,CAACwO,eAAJ,CAAoB,KAAKoI,cAAL,CAAoBvS,SAAxC,EACItC,MAAM,CAACE,KADX,EACkBiC,WADlB,EAC+BC,YAD/B,EAC6CuI,MAD7C,EAEI,KAAKkK,cAAL,CAAoBtP,gBAFxB;AAIA,kBAAM7H,KAAK,GAAG,KAAKmX,cAAL,CAAoBnX,KAAlC;AACA,kBAAMG,MAAM,GAAG,KAAKgX,cAAL,CAAoBhX,MAAnC;;AAEA,gBAAI,KAAKgX,cAAL,CAAoBlP,kBAAxB,EAA4C;AACxC1H,cAAAA,GAAG,CAACwK,eAAJ,CAAqB,oBAAmBpF,EAAG,EAA3C,EAA8CrD,MAAM,CAACe,aAArD,EAAoErD,KAApE,EAA2EG,MAA3E;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,mBAAkBgB,EAAG,EAA1C,EAA6C,KAAKwR,cAAL,CAAoB/O,cAAjE,EAAiFpI,KAAjF,EAAwFG,MAAxF;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,mBAAkBgB,EAAG,EAA1C,EAA6C,KAAKwR,cAAL,CAAoB/O,cAAjE,EAAiFpI,KAAjF,EAAwFG,MAAxF;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,mBAAkBgB,EAAG,EAA1C,EAA6CrD,MAAM,CAACE,KAApD,EAA2DxC,KAA3D,EAAkEG,MAAlE;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,mBAAkBgB,EAAG,EAA1C,EAA6CrD,MAAM,CAACE,KAApD,EAA2DxC,KAA3D,EAAkEG,MAAlE;AACH,aAND,MAMO;AACHI,cAAAA,GAAG,CAACwK,eAAJ,CAAqB,cAAapF,EAAG,EAArC,EAAwCrD,MAAM,CAACe,aAA/C,EAA8DrD,KAA9D,EAAqEG,MAArE;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,aAAYgB,EAAG,EAApC,EAAuC,KAAKwR,cAAL,CAAoB/O,cAA3D,EAA2EpI,KAA3E,EAAkFG,MAAlF;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,aAAYgB,EAAG,EAApC,EAAuC,KAAKwR,cAAL,CAAoB/O,cAA3D,EAA2EpI,KAA3E,EAAkFG,MAAlF;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,aAAYgB,EAAG,EAApC,EAAuCrD,MAAM,CAACE,KAA9C,EAAqDxC,KAArD,EAA4DG,MAA5D;AACAI,cAAAA,GAAG,CAACoE,eAAJ,CAAqB,aAAYgB,EAAG,EAApC,EAAuCrD,MAAM,CAACE,KAA9C,EAAqDxC,KAArD,EAA4DG,MAA5D;AACH;;AACDI,YAAAA,GAAG,CAACoE,eAAJ,CAAqB,YAAWgB,EAAG,EAAnC,EAAsCrD,MAAM,CAACE,KAA7C,EAAoDiC,WAApD,EAAiEC,YAAjE;AACAnE,YAAAA,GAAG,CAACoE,eAAJ,CAAqB,YAAWgB,EAAG,EAAnC,EAAsCrD,MAAM,CAACE,KAA7C,EAAoDiC,WAApD,EAAiEC,YAAjE;;AAEA,iBAAK,MAAM+T,OAAX,IAAsB,KAAKnB,aAA3B,EAA0C;AACtC,kBAAImB,OAAO,CAACzL,YAAZ,EAA0B;AACtByL,gBAAAA,OAAO,CAACzL,YAAR,CAAqBzM,GAArB,EAA0B,KAAK2W,QAA/B,EAAyC,KAAKC,cAA9C,EAA8DlK,MAA9D,EAAsEnO,MAAtE,EAA8E2F,WAA9E,EAA2FC,YAA3F;AACH;AACJ;AACJ;;AACD+I,UAAAA,KAAK,CAACiL,OAAD,EAAmCnY,GAAnC,EAAuE;AACxE;AACA,gBAAI,KAAKoY,cAAL,CAAoBpY,GAApB,CAAJ,EAA8B;AAC1B;AACH,aAJuE,CAMxE;AACA;;;AACA,iBAAK,MAAMzB,MAAX,IAAqB4Z,OAArB,EAA8B;AAC1B;AACA,kBAAI,CAAC5Z,MAAM,CAACiE,KAAR,IAAiB,CAACjE,MAAM,CAACmO,MAA7B,EAAqC;AACjC;AACH,eAJyB,CAK1B;;;AACA,mBAAKuL,mBAAL,CAAyBjY,GAAzB,EAA8BzB,MAA9B,EAAsC,KAAKoY,QAA3C,EAAqD,KAAKC,cAA1D,EAN0B,CAO1B;AACA;;;AAEA,mBAAKX,cAAL,CAAoBoC,IAApB,CAAyBrS,iBAAiB,CAACsS,mBAA3C,EAAgE/Z,MAAhE,EAV0B,CAY1B;;;AACA,kBAAI,KAAKqY,cAAL,CAAoBrP,kBAAxB,EAA4C;AACxC,qBAAKgR,qBAAL,CAA2BvY,GAA3B,EAAgCzB,MAAhC,EAAwCA,MAAM,CAACiE,KAA/C,EAAsD,KAAKuU,aAA3D;AACH,eAFD,MAEO;AACH,qBAAKyB,oBAAL,CAA0BxY,GAA1B,EAA+BzB,MAA/B;AACH;;AAED,mBAAK0X,cAAL,CAAoBoC,IAApB,CAAyBrS,iBAAiB,CAACyS,iBAA3C,EAA8Dla,MAA9D;AACH;AACJ,WA5N6D,CA6N9D;AACA;AACA;;;AACQia,UAAAA,oBAAoB,CACxBxY,GADwB,EAExBzB,MAFwB,EAGpB;AACJ,kBAAMkB,KAAK,GAAGC,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWtB,MAAM,CAACmO,MAAP,CAAcjN,KAAzB,CAAT,EAA0C,CAA1C,CAAd;AACA,kBAAMG,MAAM,GAAGF,IAAI,CAACI,GAAL,CAASJ,IAAI,CAACG,KAAL,CAAWtB,MAAM,CAACmO,MAAP,CAAc9M,MAAzB,CAAT,EAA2C,CAA3C,CAAf;AACA,kBAAMyE,SAAS,GAAG,KAAKuS,cAAL,CAAoBvS,SAAtC;AACA,kBAAMiD,gBAAgB,GAAG,KAAKsP,cAAL,CAAoBtP,gBAA7C;AAEA,kBAAM2D,QAAQ,GAAG1M,MAAM,CAAC0M,QAAxB,CANI,CAM+B;;AACnC,iBAAKO,SAAL,CAAejM,IAAf,GAAsBG,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACjI,CAAT,GAAavD,KAAxB,CAAtB;AACA,iBAAK+L,SAAL,CAAehM,GAAf,GAAqBE,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACtC,CAAT,GAAa/I,MAAxB,CAArB,CARI,CASJ;AACA;;AACA,iBAAK4L,SAAL,CAAe/L,KAAf,GAAuBC,IAAI,CAACI,GAAL,CAASJ,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACxL,KAAT,GAAiBA,KAA5B,CAAT,EAA6C,CAA7C,CAAvB;AACA,iBAAK+L,SAAL,CAAe5L,MAAf,GAAwBF,IAAI,CAACI,GAAL,CAASJ,IAAI,CAAC4P,KAAL,CAAWrE,QAAQ,CAACrL,MAAT,GAAkBA,MAA7B,CAAT,EAA+C,CAA/C,CAAxB;AAEA,kBAAMmP,UAAU,GAAGxQ,MAAM,CAACwQ,UAA1B,CAdI,CAcmC;;AACvC,iBAAKtD,WAAL,CAAiBzI,CAAjB,GAAqB+L,UAAU,CAAC/L,CAAhC;AACA,iBAAKyI,WAAL,CAAiB9C,CAAjB,GAAqBoG,UAAU,CAACpG,CAAhC;AACA,iBAAK8C,WAAL,CAAiB7C,CAAjB,GAAqBmG,UAAU,CAACnG,CAAhC;AACA,iBAAK6C,WAAL,CAAiB3M,CAAjB,GAAqBiQ,UAAU,CAACjQ,CAAhC;AAEA,kBAAMkF,IAAI,GAAGhE,GAAG,CAACiE,aAAJ,CAAkBxE,KAAlB,EAAyBG,MAAzB,EAAiC,SAAjC,CAAb,CApBI,CAsBJ;;AACA,gBAAItB,qBAAqB,CAACC,MAAD,CAAzB,EAAmC;AAC/ByF,cAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAACC,KAAvC,EAA8CC,OAAO,CAACC,KAAtD,EAA6D,KAAKgH,WAAlE;AACH,aAFD,MAEO;AACHzH,cAAAA,IAAI,CAACI,eAAL,CAAqBC,SAArB,EAAgCC,MAAM,CAAC+G,IAAvC,EAA6C7G,OAAO,CAACC,KAArD;AACH,aA3BG,CA6BJ;;;AACA,gBAAIlG,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aAApC,EAAmD;AAC/CkB,cAAAA,IAAI,CAACwG,eAAL,CACIlD,gBADJ,EAEIhD,MAAM,CAACC,KAFX,EAGIC,OAAO,CAACiG,OAHZ,EAIIlM,MAAM,CAAC0Q,UAJX,EAKI1Q,MAAM,CAAC2Q,YALX,EAMI3Q,MAAM,CAACC,SAAP,GAAmBC,YAAY,CAACqE,aANpC;AAQH,aATD,MASO;AACHkB,cAAAA,IAAI,CAACwG,eAAL,CAAqBlD,gBAArB,EAAuChD,MAAM,CAAC+G,IAA9C,EAAoD7G,OAAO,CAACiG,OAA5D;AACH;;AAEDzG,YAAAA,IAAI,CAACoH,WAAL,CAAiB,KAAKI,SAAtB,EA3CI,CA6CJ;;AACAxH,YAAAA,IAAI,CAACY,QAAL,CAAcE,SAAS,CAACC,MAAxB,EACKmF,QADL,CACc3L,MADd,EACsB4L,UAAU,CAACpF,MADjC,EA9CI,CAiDJ;;AACA,gBAAI6Q,KAAK,GAAGzL,UAAU,CAACP,KAAX,GAAmBO,UAAU,CAAC0L,EAA1C;;AACA,gBAAI,KAAKe,cAAL,CAAoBpP,cAAxB,EAAwC;AACpCoO,cAAAA,KAAK,IAAIzL,UAAU,CAAC2L,QAApB;AACA9R,cAAAA,IAAI,CAAC+R,cAAL,GAAsB,IAAtB;AACH;;AACD/R,YAAAA,IAAI,CAACY,QAAL,CAAcE,SAAS,CAAC8E,KAAxB,EACKM,QADL,CACc3L,MADd,EACsBqX,KADtB;AAEH;;AAEO2C,UAAAA,qBAAqB,CACzBvY,GADyB,EAEzBzB,MAFyB,EAGzBiE,KAHyB,EAIzBW,YAJyB,EAKrB;AACJK,YAAAA,qCAAqC,CAACL,YAAD,CAArC;AAEA,kBAAMgK,OAAwB,GAAG;AAC7B9I,cAAAA,SAAS,EAAE,EADkB;AAE7BiD,cAAAA,gBAAgB,EAAE;AAFW,aAAjC;AAKA,gBAAIwN,QAAsD,GAAG1F,SAA7D;;AAEA,iBAAK,MAAM8I,OAAX,IAAsB/U,YAAtB,EAAoC;AAChC,kBAAI+U,OAAO,CAAChL,KAAZ,EAAmB;AACf4H,gBAAAA,QAAQ,GAAGoD,OAAO,CAAChL,KAAR,CAAclN,GAAd,EAAmB,KAAK2W,QAAxB,EAAkC,KAAKC,cAAvC,EACPrY,MADO,EACC4O,OADD,EACU2H,QADV,CAAX;AAEH;AACJ;;AAEDhR,YAAAA,MAAM,CAAC,KAAK8S,cAAL,CAAoBnP,eAApB,KAAwC,CAAzC,CAAN;AACH;;AAEO2Q,UAAAA,cAAc,CAACpY,GAAD,EAAuC;AACzD,gBAAI,KAAK8W,YAAT,EAAuB;AACnB,qBAAO,CAAP;AACH;;AAED/W,YAAAA,oBAAoB,CAACC,GAAD,EAAM,KAAK2W,QAAX,CAApB,CALyD,CAOzD;;AACA,iBAAKE,uBAAL,CAA6B6B,KAA7B,GAAsC,wCAAtC;;AACA,iBAAK7B,uBAAL,CAA6B8B,UAA7B,CAAwC;AAAEC,cAAAA,UAAU,EAAE;AAAd,aAAxC;;AAEA,gBAAI,KAAK/B,uBAAL,CAA6BgC,WAAjC,EAA8C;AAC1C,mBAAK/B,YAAL,GAAoB,IAApB;AACH;;AAED,mBAAO,KAAKA,YAAL,GAAoB,CAApB,GAAwB,CAA/B;AACH;;AAvU6D;;AA0UlEjS,QAAAA,SAAS,CAACiU,iBAAV,CAA4B,SAA5B,EAAuC,IAAI9C,sBAAJ,EAAvC;AAEH,O,CAAC","sourcesContent":["/*\n Copyright (c) 2021-2024 Xiamen Yaji Software Co., Ltd.\n\n https://www.cocos.com/\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights to\n use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n of the Software, and to permit persons to whom the Software is furnished to do so,\n subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n*/\n\nimport {\n    assert, cclegacy, clamp, geometry, gfx, Layers, Material, pipeline,\n    PipelineEventProcessor, PipelineEventType, ReflectionProbeManager, renderer,\n    rendering, sys, Vec2, Vec3, Vec4, warn,\n} from 'cc';\n\nimport { DEBUG, EDITOR } from 'cc/env';\n\nimport {\n    BloomType,\n    makePipelineSettings,\n    PipelineSettings,\n} from './builtin-pipeline-types';\n\nconst { AABB, Sphere, intersect } = geometry;\nconst { ClearFlagBit, Color, Format, FormatFeatureBit, LoadOp, StoreOp, TextureType, Viewport } = gfx;\nconst { scene } = renderer;\nconst { CameraUsage, CSMLevel, LightType } = scene;\n\nfunction forwardNeedClearColor(camera: renderer.scene.Camera): boolean {\n    return !!(camera.clearFlag & (ClearFlagBit.COLOR | (ClearFlagBit.STENCIL << 1)));\n}\n\nfunction getCsmMainLightViewport(\n    light: renderer.scene.DirectionalLight,\n    w: number,\n    h: number,\n    level: number,\n    vp: gfx.Viewport,\n    screenSpaceSignY: number,\n): void {\n    if (light.shadowFixedArea || light.csmLevel === CSMLevel.LEVEL_1) {\n        vp.left = 0;\n        vp.top = 0;\n        vp.width = Math.trunc(w);\n        vp.height = Math.trunc(h);\n    } else {\n        vp.left = Math.trunc(level % 2 * 0.5 * w);\n        if (screenSpaceSignY > 0) {\n            vp.top = Math.trunc((1 - Math.floor(level / 2)) * 0.5 * h);\n        } else {\n            vp.top = Math.trunc(Math.floor(level / 2) * 0.5 * h);\n        }\n        vp.width = Math.trunc(0.5 * w);\n        vp.height = Math.trunc(0.5 * h);\n    }\n    vp.left = Math.max(0, vp.left);\n    vp.top = Math.max(0, vp.top);\n    vp.width = Math.max(1, vp.width);\n    vp.height = Math.max(1, vp.height);\n}\n\nexport class PipelineConfigs {\n    isWeb = false;\n    isWebGL1 = false;\n    isWebGPU = false;\n    isMobile = false;\n    isHDR = false;\n    useFloatOutput = false;\n    toneMappingType = 0; // 0: ACES, 1: None\n    shadowEnabled = false;\n    shadowMapFormat = Format.R32F;\n    shadowMapSize = new Vec2(1, 1);\n    usePlanarShadow = false;\n    screenSpaceSignY = 1;\n    supportDepthSample = false;\n    mobileMaxSpotLightShadowMaps = 1;\n\n    platform = new Vec4(0, 0, 0, 0);\n}\n\nfunction setupPipelineConfigs(\n    ppl: rendering.BasicPipeline,\n    configs: PipelineConfigs,\n): void {\n    const sampleFeature = FormatFeatureBit.SAMPLED_TEXTURE | FormatFeatureBit.LINEAR_FILTER;\n    const device = ppl.device;\n    // Platform\n    configs.isWeb = !sys.isNative;\n    configs.isWebGL1 = device.gfxAPI === gfx.API.WEBGL;\n    configs.isWebGPU = device.gfxAPI === gfx.API.WEBGPU;\n    configs.isMobile = sys.isMobile;\n\n    // Rendering\n    configs.isHDR = ppl.pipelineSceneData.isHDR; // Has tone mapping\n    configs.useFloatOutput = ppl.getMacroBool('CC_USE_FLOAT_OUTPUT');\n    configs.toneMappingType = ppl.pipelineSceneData.postSettings.toneMappingType;\n    // Shadow\n    const shadowInfo = ppl.pipelineSceneData.shadows;\n    configs.shadowEnabled = shadowInfo.enabled;\n    configs.shadowMapFormat = pipeline.supportsR32FloatTexture(ppl.device) ? Format.R32F : Format.RGBA8;\n    configs.shadowMapSize.set(shadowInfo.size);\n    configs.usePlanarShadow = shadowInfo.enabled && shadowInfo.type === renderer.scene.ShadowType.Planar;\n    // Device\n    configs.screenSpaceSignY = ppl.device.capabilities.screenSpaceSignY;\n    configs.supportDepthSample = (ppl.device.getFormatFeatures(Format.DEPTH_STENCIL) & sampleFeature) === sampleFeature;\n    // Constants\n    const screenSpaceSignY = device.capabilities.screenSpaceSignY;\n    configs.platform.x = configs.isMobile ? 1.0 : 0.0;\n    configs.platform.w = (screenSpaceSignY * 0.5 + 0.5) << 1 | (device.capabilities.clipSpaceSignY * 0.5 + 0.5);\n}\n\nexport interface PipelineSettings2 extends PipelineSettings {\n    _passes?: rendering.PipelinePassBuilder[];\n}\n\nconst defaultSettings = makePipelineSettings();\n\nexport class CameraConfigs {\n    settings: PipelineSettings = defaultSettings;\n    // Window\n    isMainGameWindow = false;\n    renderWindowId = 0;\n    // Camera\n    colorName = '';\n    depthStencilName = '';\n    // Pipeline\n    enableFullPipeline = false;\n    enableProfiler = false;\n    remainingPasses = 0;\n    // Shading Scale\n    enableShadingScale = false;\n    shadingScale = 1.0;\n    nativeWidth = 1;\n    nativeHeight = 1;\n    width = 1; // Scaled width\n    height = 1; // Scaled height\n    // Radiance\n    enableHDR = false;\n    radianceFormat = gfx.Format.RGBA8;\n    // Tone Mapping\n    copyAndTonemapMaterial: Material | null = null;\n    // Depth\n    /** @en mutable */\n    enableStoreSceneDepth = false;\n}\n\nconst sClearColorTransparentBlack = new Color(0, 0, 0, 0);\n\nfunction sortPipelinePassBuildersByConfigOrder(passBuilders: rendering.PipelinePassBuilder[]): void {\n    passBuilders.sort((a, b) => {\n        return a.getConfigOrder() - b.getConfigOrder();\n    });\n}\n\nfunction sortPipelinePassBuildersByRenderOrder(passBuilders: rendering.PipelinePassBuilder[]): void {\n    passBuilders.sort((a, b) => {\n        return a.getRenderOrder() - b.getRenderOrder();\n    });\n}\n\nfunction addCopyToScreenPass(\n    ppl: rendering.BasicPipeline,\n    pplConfigs: Readonly<PipelineConfigs>,\n    cameraConfigs: CameraConfigs,\n    input: string,\n): rendering.BasicRenderPassBuilder {\n    assert(!!cameraConfigs.copyAndTonemapMaterial);\n    const pass = ppl.addRenderPass(\n        cameraConfigs.nativeWidth,\n        cameraConfigs.nativeHeight,\n        'cc-tone-mapping');\n    pass.addRenderTarget(\n        cameraConfigs.colorName,\n        LoadOp.CLEAR, StoreOp.STORE,\n        sClearColorTransparentBlack);\n    pass.addTexture(input, 'inputTexture');\n    pass.addQueue(rendering.QueueHint.OPAQUE)\n        .addFullscreenQuad(cameraConfigs.copyAndTonemapMaterial, 1);\n    return pass;\n}\n\nexport function getPingPongRenderTarget(prevName: string, prefix: string, id: number): string {\n    if (prevName.startsWith(prefix)) {\n        return `${prefix}${1 - Number(prevName.charAt(prefix.length))}_${id}`;\n    } else {\n        return `${prefix}0_${id}`;\n    }\n}\n\nexport interface PipelineContext {\n    colorName: string;\n    depthStencilName: string;\n}\n\nclass ForwardLighting {\n    // Active lights\n    private readonly lights: renderer.scene.Light[] = [];\n    // Active spot lights with shadows (Mutually exclusive with `lights`)\n    private readonly shadowEnabledSpotLights: renderer.scene.SpotLight[] = [];\n\n    // Internal cached resources\n    private readonly _sphere = Sphere.create(0, 0, 0, 1);\n    private readonly _boundingBox = new AABB();\n    private readonly _rangedDirLightBoundingBox = new AABB(0.0, 0.0, 0.0, 0.5, 0.5, 0.5);\n\n    // ----------------------------------------------------------------\n    // Interface\n    // ----------------------------------------------------------------\n    public cullLights(scene: renderer.RenderScene, frustum: geometry.Frustum, cameraPos?: Vec3): void {\n        // TODO(zhouzhenglong): Make light culling native\n        this.lights.length = 0;\n        this.shadowEnabledSpotLights.length = 0;\n        // spot lights\n        for (const light of scene.spotLights) {\n            if (light.baked) {\n                continue;\n            }\n            Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\n            if (intersect.sphereFrustum(this._sphere, frustum)) {\n                if (light.shadowEnabled) {\n                    this.shadowEnabledSpotLights.push(light);\n                } else {\n                    this.lights.push(light);\n                }\n            }\n        }\n        // sphere lights\n        for (const light of scene.sphereLights) {\n            if (light.baked) {\n                continue;\n            }\n            Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\n            if (intersect.sphereFrustum(this._sphere, frustum)) {\n                this.lights.push(light);\n            }\n        }\n        // point lights\n        for (const light of scene.pointLights) {\n            if (light.baked) {\n                continue;\n            }\n            Sphere.set(this._sphere, light.position.x, light.position.y, light.position.z, light.range);\n            if (intersect.sphereFrustum(this._sphere, frustum)) {\n                this.lights.push(light);\n            }\n        }\n        // ranged dir lights\n        for (const light of scene.rangedDirLights) {\n            AABB.transform(this._boundingBox, this._rangedDirLightBoundingBox, light.node!.getWorldMatrix());\n            if (intersect.aabbFrustum(this._boundingBox, frustum)) {\n                this.lights.push(light);\n            }\n        }\n\n        if (cameraPos) {\n            this.shadowEnabledSpotLights.sort(\n                (lhs, rhs) => Vec3.squaredDistance(cameraPos, lhs.position) - Vec3.squaredDistance(cameraPos, rhs.position),\n            );\n        }\n    }\n    private _addLightQueues(camera: renderer.scene.Camera, pass: rendering.BasicRenderPassBuilder): void {\n        for (const light of this.lights) {\n            const queue = pass.addQueue(rendering.QueueHint.BLEND, 'forward-add');\n            switch (light.type) {\n                case LightType.SPHERE:\n                    queue.name = 'sphere-light';\n                    break;\n                case LightType.SPOT:\n                    queue.name = 'spot-light';\n                    break;\n                case LightType.POINT:\n                    queue.name = 'point-light';\n                    break;\n                case LightType.RANGED_DIRECTIONAL:\n                    queue.name = 'ranged-directional-light';\n                    break;\n                default:\n                    queue.name = 'unknown-light';\n            }\n            queue.addScene(\n                camera,\n                rendering.SceneFlags.BLEND,\n                light,\n            );\n        }\n    }\n    public addSpotlightShadowPasses(\n        ppl: rendering.BasicPipeline,\n        camera: renderer.scene.Camera,\n        maxNumShadowMaps: number,\n    ): void {\n        let i = 0;\n        for (const light of this.shadowEnabledSpotLights) {\n            const shadowMapSize = ppl.pipelineSceneData.shadows.size;\n            const shadowPass = ppl.addRenderPass(shadowMapSize.x, shadowMapSize.y, 'default');\n            shadowPass.name = `SpotLightShadowPass${i}`;\n            shadowPass.addRenderTarget(`SpotShadowMap${i}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\n            shadowPass.addDepthStencil(`SpotShadowDepth${i}`, LoadOp.CLEAR, StoreOp.DISCARD);\n            shadowPass.addQueue(rendering.QueueHint.NONE, 'shadow-caster')\n                .addScene(camera, rendering.SceneFlags.OPAQUE | rendering.SceneFlags.MASK | rendering.SceneFlags.SHADOW_CASTER)\n                .useLightFrustum(light);\n            ++i;\n            if (i >= maxNumShadowMaps) {\n                break;\n            }\n        }\n    }\n    public addLightQueues(pass: rendering.BasicRenderPassBuilder,\n        camera: renderer.scene.Camera, maxNumShadowMaps: number): void {\n        this._addLightQueues(camera, pass);\n        let i = 0;\n        for (const light of this.shadowEnabledSpotLights) {\n            // Add spot-light pass\n            // Save last RenderPass to the `pass` variable\n            // TODO(zhouzhenglong): Fix per queue addTexture\n            pass.addTexture(`SpotShadowMap${i}`, 'cc_spotShadowMap');\n            const queue = pass.addQueue(rendering.QueueHint.BLEND, 'forward-add');\n            queue.addScene(camera, rendering.SceneFlags.BLEND, light);\n            ++i;\n            if (i >= maxNumShadowMaps) {\n                break;\n            }\n        }\n    }\n\n    // Notice: ForwardLighting cannot handle a lot of lights.\n    // If there are too many lights, the performance will be very poor.\n    // If many lights are needed, please implement a forward+ or deferred rendering pipeline.\n    public addLightPasses(\n        colorName: string,\n        depthStencilName: string,\n        depthStencilStoreOp: gfx.StoreOp,\n        id: number, // window id\n        width: number,\n        height: number,\n        camera: renderer.scene.Camera,\n        viewport: gfx.Viewport,\n        ppl: rendering.BasicPipeline,\n        pass: rendering.BasicRenderPassBuilder,\n    ): rendering.BasicRenderPassBuilder {\n        this._addLightQueues(camera, pass);\n\n        let count = 0;\n        const shadowMapSize = ppl.pipelineSceneData.shadows.size;\n        for (const light of this.shadowEnabledSpotLights) {\n            const shadowPass = ppl.addRenderPass(shadowMapSize.x, shadowMapSize.y, 'default');\n            shadowPass.name = 'SpotlightShadowPass';\n            // Reuse csm shadow map\n            shadowPass.addRenderTarget(`ShadowMap${id}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\n            shadowPass.addDepthStencil(`ShadowDepth${id}`, LoadOp.CLEAR, StoreOp.DISCARD);\n            shadowPass.addQueue(rendering.QueueHint.NONE, 'shadow-caster')\n                .addScene(camera, rendering.SceneFlags.OPAQUE | rendering.SceneFlags.MASK | rendering.SceneFlags.SHADOW_CASTER)\n                .useLightFrustum(light);\n\n            // Add spot-light pass\n            // Save last RenderPass to the `pass` variable\n            ++count;\n            const storeOp = count === this.shadowEnabledSpotLights.length\n                ? depthStencilStoreOp\n                : StoreOp.STORE;\n\n            pass = ppl.addRenderPass(width, height, 'default');\n            pass.name = 'SpotlightWithShadowMap';\n            pass.setViewport(viewport);\n            pass.addRenderTarget(colorName, LoadOp.LOAD);\n            pass.addDepthStencil(depthStencilName, LoadOp.LOAD, storeOp);\n            pass.addTexture(`ShadowMap${id}`, 'cc_spotShadowMap');\n            const queue = pass.addQueue(rendering.QueueHint.BLEND, 'forward-add');\n            queue.addScene(\n                camera,\n                rendering.SceneFlags.BLEND,\n                light,\n            );\n        }\n        return pass;\n    }\n\n    public isMultipleLightPassesNeeded(): boolean {\n        return this.shadowEnabledSpotLights.length > 0;\n    }\n}\n\nexport interface ForwardPassConfigs {\n    enableMainLightShadowMap: boolean;\n    enableMainLightPlanarShadowMap: boolean;\n    enablePlanarReflectionProbe: boolean;\n    enableMSAA: boolean;\n    enableSingleForwardPass: boolean;\n}\n\nexport class BuiltinForwardPassBuilder implements rendering.PipelinePassBuilder {\n    static ConfigOrder = 100;\n    static RenderOrder = 100;\n    getConfigOrder(): number {\n        return BuiltinForwardPassBuilder.ConfigOrder;\n    }\n    getRenderOrder(): number {\n        return BuiltinForwardPassBuilder.RenderOrder;\n    }\n    configCamera(\n        camera: Readonly<renderer.scene.Camera>,\n        pipelineConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ForwardPassConfigs): void {\n        // Shadow\n        cameraConfigs.enableMainLightShadowMap = pipelineConfigs.shadowEnabled\n            && !pipelineConfigs.usePlanarShadow\n            && !!camera.scene\n            && !!camera.scene.mainLight\n            && camera.scene.mainLight.shadowEnabled;\n\n        cameraConfigs.enableMainLightPlanarShadowMap = pipelineConfigs.shadowEnabled\n            && pipelineConfigs.usePlanarShadow\n            && !!camera.scene\n            && !!camera.scene.mainLight\n            && camera.scene.mainLight.shadowEnabled;\n\n        // Reflection Probe\n        cameraConfigs.enablePlanarReflectionProbe = cameraConfigs.isMainGameWindow\n            || camera.cameraUsage === CameraUsage.SCENE_VIEW\n            || camera.cameraUsage === CameraUsage.GAME_VIEW;\n\n        // MSAA\n        cameraConfigs.enableMSAA = cameraConfigs.settings.msaa.enabled\n            && !cameraConfigs.enableStoreSceneDepth // Cannot store MS depth, resolve depth is also not cross-platform\n            && !pipelineConfigs.isWeb // TODO(zhouzhenglong): remove this constraint\n            && !pipelineConfigs.isWebGL1;\n\n        // Forward rendering (Depend on MSAA and TBR)\n        cameraConfigs.enableSingleForwardPass\n            = pipelineConfigs.isMobile || cameraConfigs.enableMSAA;\n\n        ++cameraConfigs.remainingPasses;\n    }\n    windowResize(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        window: renderer.RenderWindow,\n        camera: renderer.scene.Camera,\n        nativeWidth: number,\n        nativeHeight: number): void {\n        const ResourceFlags = rendering.ResourceFlags;\n        const ResourceResidency = rendering.ResourceResidency;\n        const id = window.renderWindowId;\n        const settings = cameraConfigs.settings;\n\n        const width = cameraConfigs.enableShadingScale\n            ? Math.max(Math.floor(nativeWidth * cameraConfigs.shadingScale), 1)\n            : nativeWidth;\n        const height = cameraConfigs.enableShadingScale\n            ? Math.max(Math.floor(nativeHeight * cameraConfigs.shadingScale), 1)\n            : nativeHeight;\n\n        // MsaaRadiance\n        if (cameraConfigs.enableMSAA) {\n            // Notice: We never store multisample results.\n            // These samples are always resolved and discarded at the end of the render pass.\n            // So the ResourceResidency should be MEMORYLESS.\n            if (cameraConfigs.enableHDR) {\n                ppl.addTexture(`MsaaRadiance${id}`, TextureType.TEX2D, cameraConfigs.radianceFormat, width, height, 1, 1, 1,\n                    settings.msaa.sampleCount, ResourceFlags.COLOR_ATTACHMENT, ResourceResidency.MEMORYLESS);\n            } else {\n                ppl.addTexture(`MsaaRadiance${id}`, TextureType.TEX2D, Format.RGBA8, width, height, 1, 1, 1,\n                    settings.msaa.sampleCount, ResourceFlags.COLOR_ATTACHMENT, ResourceResidency.MEMORYLESS);\n            }\n            ppl.addTexture(`MsaaDepthStencil${id}`, TextureType.TEX2D, Format.DEPTH_STENCIL, width, height, 1, 1, 1,\n                settings.msaa.sampleCount, ResourceFlags.DEPTH_STENCIL_ATTACHMENT, ResourceResidency.MEMORYLESS);\n        }\n\n        // Mainlight ShadowMap\n        ppl.addRenderTarget(\n            `ShadowMap${id}`,\n            pplConfigs.shadowMapFormat,\n            pplConfigs.shadowMapSize.x,\n            pplConfigs.shadowMapSize.y,\n        );\n        ppl.addDepthStencil(\n            `ShadowDepth${id}`,\n            Format.DEPTH_STENCIL,\n            pplConfigs.shadowMapSize.x,\n            pplConfigs.shadowMapSize.y,\n        );\n\n        // Spot-light shadow maps\n        if (cameraConfigs.enableSingleForwardPass) {\n            const count = pplConfigs.mobileMaxSpotLightShadowMaps;\n            for (let i = 0; i !== count; ++i) {\n                ppl.addRenderTarget(\n                    `SpotShadowMap${i}`,\n                    pplConfigs.shadowMapFormat,\n                    pplConfigs.shadowMapSize.x,\n                    pplConfigs.shadowMapSize.y,\n                );\n                ppl.addDepthStencil(\n                    `SpotShadowDepth${i}`,\n                    Format.DEPTH_STENCIL,\n                    pplConfigs.shadowMapSize.x,\n                    pplConfigs.shadowMapSize.y,\n                );\n            }\n        }\n    }\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ForwardPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext): rendering.BasicRenderPassBuilder | undefined {\n        // Add global constants\n        ppl.setVec4('g_platform', pplConfigs.platform);\n\n        const id = camera.window.renderWindowId;\n\n        const scene = camera.scene!;\n        const mainLight = scene.mainLight;\n\n        --cameraConfigs.remainingPasses;\n        assert(cameraConfigs.remainingPasses >= 0);\n\n        // Forward Lighting (Light Culling)\n        this.forwardLighting.cullLights(scene, camera.frustum);\n\n        // Main Directional light CSM Shadow Map\n        if (cameraConfigs.enableMainLightShadowMap) {\n            assert(!!mainLight);\n            this._addCascadedShadowMapPass(ppl, pplConfigs, id, mainLight, camera);\n        }\n\n        // Spot light shadow maps (Mobile or MSAA)\n        if (cameraConfigs.enableSingleForwardPass) {\n            // Currently, only support 1 spot light with shadow map on mobile platform.\n            // TODO(zhouzhenglong): Relex this limitation.\n            this.forwardLighting.addSpotlightShadowPasses(\n                ppl, camera, pplConfigs.mobileMaxSpotLightShadowMaps);\n        }\n\n        this._tryAddReflectionProbePasses(ppl, cameraConfigs, id, mainLight, camera.scene);\n\n        if (cameraConfigs.remainingPasses > 0 || cameraConfigs.enableShadingScale) {\n            context.colorName = cameraConfigs.enableShadingScale\n                ? `ScaledRadiance0_${id}`\n                : `Radiance0_${id}`;\n            context.depthStencilName = cameraConfigs.enableShadingScale\n                ? `ScaledSceneDepth_${id}`\n                : `SceneDepth_${id}`;\n        } else {\n            context.colorName = cameraConfigs.colorName;\n            context.depthStencilName = cameraConfigs.depthStencilName;\n        }\n\n        const pass = this._addForwardRadiancePasses(\n            ppl, pplConfigs, cameraConfigs, id, camera,\n            cameraConfigs.width, cameraConfigs.height, mainLight,\n            context.colorName, context.depthStencilName,\n            !cameraConfigs.enableMSAA,\n            cameraConfigs.enableStoreSceneDepth ? StoreOp.STORE : StoreOp.DISCARD);\n\n        if (!cameraConfigs.enableStoreSceneDepth) {\n            context.depthStencilName = '';\n        }\n\n        if (cameraConfigs.remainingPasses === 0 && cameraConfigs.enableShadingScale) {\n            return addCopyToScreenPass(ppl, pplConfigs, cameraConfigs, context.colorName);\n        } else {\n            return pass;\n        }\n    }\n    private _addCascadedShadowMapPass(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        id: number,\n        light: renderer.scene.DirectionalLight,\n        camera: renderer.scene.Camera,\n    ): void {\n        const QueueHint = rendering.QueueHint;\n        const SceneFlags = rendering.SceneFlags;\n        // ----------------------------------------------------------------\n        // Dynamic states\n        // ----------------------------------------------------------------\n        const shadowSize = ppl.pipelineSceneData.shadows.size;\n        const width = shadowSize.x;\n        const height = shadowSize.y;\n\n        const viewport = this._viewport;\n        viewport.left = viewport.top = 0;\n        viewport.width = width;\n        viewport.height = height;\n\n        // ----------------------------------------------------------------\n        // CSM Shadow Map\n        // ----------------------------------------------------------------\n        const pass = ppl.addRenderPass(width, height, 'default');\n        pass.name = 'CascadedShadowMap';\n        pass.addRenderTarget(`ShadowMap${id}`, LoadOp.CLEAR, StoreOp.STORE, new Color(1, 1, 1, 1));\n        pass.addDepthStencil(`ShadowDepth${id}`, LoadOp.CLEAR, StoreOp.DISCARD);\n        const csmLevel = ppl.pipelineSceneData.csmSupported ? light.csmLevel : 1;\n\n        // Add shadow map viewports\n        for (let level = 0; level !== csmLevel; ++level) {\n            getCsmMainLightViewport(light, width, height, level, this._viewport, pplConfigs.screenSpaceSignY);\n            const queue = pass.addQueue(QueueHint.NONE, 'shadow-caster');\n            if (!pplConfigs.isWebGPU) { // Temporary workaround for WebGPU\n                queue.setViewport(this._viewport);\n            }\n            queue\n                .addScene(camera, SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.SHADOW_CASTER)\n                .useLightFrustum(light, level);\n        }\n    }\n    private _tryAddReflectionProbePasses(\n        ppl: rendering.BasicPipeline,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        mainLight: renderer.scene.DirectionalLight | null,\n        scene: renderer.RenderScene | null,\n    ): void {\n        const reflectionProbeManager = cclegacy.internal.reflectionProbeManager as ReflectionProbeManager | undefined;\n        if (!reflectionProbeManager) {\n            return;\n        }\n        const ResourceResidency = rendering.ResourceResidency;\n        const probes = reflectionProbeManager.getProbes();\n        const maxProbeCount = 4;\n        let probeID = 0;\n        for (const probe of probes) {\n            if (!probe.needRender) {\n                continue;\n            }\n            const area = probe.renderArea();\n            const width = Math.max(Math.floor(area.x), 1);\n            const height = Math.max(Math.floor(area.y), 1);\n\n            if (probe.probeType === renderer.scene.ProbeType.PLANAR) {\n                if (!cameraConfigs.enablePlanarReflectionProbe) {\n                    continue;\n                }\n                const window: renderer.RenderWindow = probe.realtimePlanarTexture!.window!;\n                const colorName = `PlanarProbeRT${probeID}`;\n                const depthStencilName = `PlanarProbeDS${probeID}`;\n                // ProbeResource\n                ppl.addRenderWindow(colorName,\n                    cameraConfigs.radianceFormat, width, height, window);\n                ppl.addDepthStencil(depthStencilName,\n                    gfx.Format.DEPTH_STENCIL, width, height, ResourceResidency.MEMORYLESS);\n\n                // Rendering\n                const probePass = ppl.addRenderPass(width, height, 'default');\n                probePass.name = `PlanarReflectionProbe${probeID}`;\n                this._buildReflectionProbePass(probePass, cameraConfigs, id, probe.camera,\n                    colorName, depthStencilName, mainLight, scene);\n            } else if (EDITOR) {\n                for (let faceIdx = 0; faceIdx < probe.bakedCubeTextures.length; faceIdx++) {\n                    probe.updateCameraDir(faceIdx);\n                    const window: renderer.RenderWindow = probe.bakedCubeTextures[faceIdx].window!;\n                    const colorName = `CubeProbeRT${probeID}${faceIdx}`;\n                    const depthStencilName = `CubeProbeDS${probeID}${faceIdx}`;\n                    // ProbeResource\n                    ppl.addRenderWindow(colorName,\n                        cameraConfigs.radianceFormat, width, height, window);\n                    ppl.addDepthStencil(depthStencilName,\n                        gfx.Format.DEPTH_STENCIL, width, height, ResourceResidency.MEMORYLESS);\n\n                    // Rendering\n                    const probePass = ppl.addRenderPass(width, height, 'default');\n                    probePass.name = `CubeProbe${probeID}${faceIdx}`;\n                    this._buildReflectionProbePass(probePass, cameraConfigs, id, probe.camera,\n                        colorName, depthStencilName, mainLight, scene);\n                }\n                probe.needRender = false;\n            }\n            ++probeID;\n            if (probeID === maxProbeCount) {\n                break;\n            }\n        }\n    }\n    private _buildReflectionProbePass(\n        pass: rendering.BasicRenderPassBuilder,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        camera: renderer.scene.Camera,\n        colorName: string,\n        depthStencilName: string,\n        mainLight: renderer.scene.DirectionalLight | null,\n        scene: renderer.RenderScene | null = null,\n    ): void {\n        const QueueHint = rendering.QueueHint;\n        const SceneFlags = rendering.SceneFlags;\n        // set viewport\n        const colorStoreOp = cameraConfigs.enableMSAA ? StoreOp.DISCARD : StoreOp.STORE;\n\n        // bind output render target\n        if (forwardNeedClearColor(camera)) {\n            this._reflectionProbeClearColor.x = camera.clearColor.x;\n            this._reflectionProbeClearColor.y = camera.clearColor.y;\n            this._reflectionProbeClearColor.z = camera.clearColor.z;\n            const clearColor = rendering.packRGBE(this._reflectionProbeClearColor);\n            this._clearColor.x = clearColor.x;\n            this._clearColor.y = clearColor.y;\n            this._clearColor.z = clearColor.z;\n            this._clearColor.w = clearColor.w;\n            pass.addRenderTarget(colorName, LoadOp.CLEAR, colorStoreOp, this._clearColor);\n        } else {\n            pass.addRenderTarget(colorName, LoadOp.LOAD, colorStoreOp);\n        }\n\n        // bind depth stencil buffer\n        if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\n            pass.addDepthStencil(\n                depthStencilName,\n                LoadOp.CLEAR,\n                StoreOp.DISCARD,\n                camera.clearDepth,\n                camera.clearStencil,\n                camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\n            );\n        } else {\n            pass.addDepthStencil(depthStencilName, LoadOp.LOAD, StoreOp.DISCARD);\n        }\n\n        // Set shadow map if enabled\n        if (cameraConfigs.enableMainLightShadowMap) {\n            pass.addTexture(`ShadowMap${id}`, 'cc_shadowMap');\n        }\n\n        // TODO(zhouzhenglong): Separate OPAQUE and MASK queue\n\n        // add opaque and mask queue\n        pass.addQueue(QueueHint.NONE, 'reflect-map') // Currently we put OPAQUE and MASK into one queue, so QueueHint is NONE\n            .addScene(camera,\n                SceneFlags.OPAQUE | SceneFlags.MASK | SceneFlags.REFLECTION_PROBE,\n                mainLight || undefined,\n                scene ? scene : undefined);\n    }\n    private _addForwardRadiancePasses(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        camera: renderer.scene.Camera,\n        width: number,\n        height: number,\n        mainLight: renderer.scene.DirectionalLight | null,\n        colorName: string,\n        depthStencilName: string,\n        disableMSAA: boolean = false,\n        depthStencilStoreOp: gfx.StoreOp = StoreOp.DISCARD,\n    ): rendering.BasicRenderPassBuilder {\n        const QueueHint = rendering.QueueHint;\n        const SceneFlags = rendering.SceneFlags;\n        // ----------------------------------------------------------------\n        // Dynamic states\n        // ----------------------------------------------------------------\n        // Prepare camera clear color\n        const clearColor = camera.clearColor; // Reduce C++/TS interop\n        this._clearColor.x = clearColor.x;\n        this._clearColor.y = clearColor.y;\n        this._clearColor.z = clearColor.z;\n        this._clearColor.w = clearColor.w;\n\n        // Prepare camera viewport\n        const viewport = camera.viewport; // Reduce C++/TS interop\n        this._viewport.left = Math.round(viewport.x * width);\n        this._viewport.top = Math.round(viewport.y * height);\n        // Here we must use camera.viewport.width instead of camera.viewport.z, which\n        // is undefined on native platform. The same as camera.viewport.height.\n        this._viewport.width = Math.max(Math.round(viewport.width * width), 1);\n        this._viewport.height = Math.max(Math.round(viewport.height * height), 1);\n\n        // MSAA\n        const enableMSAA = !disableMSAA && cameraConfigs.enableMSAA;\n        assert(!enableMSAA || cameraConfigs.enableSingleForwardPass);\n\n        // ----------------------------------------------------------------\n        // Forward Lighting (Main Directional Light)\n        // ----------------------------------------------------------------\n        const pass = cameraConfigs.enableSingleForwardPass\n            ? this._addForwardSingleRadiancePass(ppl, pplConfigs, cameraConfigs,\n                id, camera, enableMSAA, width, height, mainLight,\n                colorName, depthStencilName, depthStencilStoreOp)\n            : this._addForwardMultipleRadiancePasses(ppl, cameraConfigs,\n                id, camera, width, height, mainLight,\n                colorName, depthStencilName, depthStencilStoreOp);\n\n        // Planar Shadow\n        if (cameraConfigs.enableMainLightPlanarShadowMap) {\n            this._addPlanarShadowQueue(camera, mainLight, pass);\n        }\n\n        // ----------------------------------------------------------------\n        // Forward Lighting (Blend)\n        // ----------------------------------------------------------------\n        // Add transparent queue\n\n        const sceneFlags = SceneFlags.BLEND |\n            (camera.geometryRenderer\n                ? SceneFlags.GEOMETRY\n                : SceneFlags.NONE);\n\n        pass\n            .addQueue(QueueHint.BLEND)\n            .addScene(camera, sceneFlags, mainLight || undefined);\n\n        return pass;\n    }\n    private _addForwardSingleRadiancePass(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        camera: renderer.scene.Camera,\n        enableMSAA: boolean,\n        width: number,\n        height: number,\n        mainLight: renderer.scene.DirectionalLight | null,\n        colorName: string,\n        depthStencilName: string,\n        depthStencilStoreOp: gfx.StoreOp\n    ): rendering.BasicRenderPassBuilder {\n        assert(cameraConfigs.enableSingleForwardPass);\n        // ----------------------------------------------------------------\n        // Forward Lighting (Main Directional Light)\n        // ----------------------------------------------------------------\n        let pass: rendering.BasicRenderPassBuilder;\n        if (enableMSAA) {\n            const msaaRadianceName = `MsaaRadiance${id}`;\n            const msaaDepthStencilName = `MsaaDepthStencil${id}`;\n            const sampleCount = cameraConfigs.settings.msaa.sampleCount;\n\n            const msPass = ppl.addMultisampleRenderPass(width, height, sampleCount, 0, 'default');\n            msPass.name = 'MsaaForwardPass';\n\n            // MSAA always discards depth stencil\n            this._buildForwardMainLightPass(msPass, cameraConfigs, id, camera,\n                msaaRadianceName, msaaDepthStencilName, StoreOp.DISCARD, mainLight);\n\n            msPass.resolveRenderTarget(msaaRadianceName, colorName);\n\n            pass = msPass;\n        } else {\n            pass = ppl.addRenderPass(width, height, 'default');\n            pass.name = 'ForwardPass';\n\n            this._buildForwardMainLightPass(pass, cameraConfigs, id, camera,\n                colorName, depthStencilName, depthStencilStoreOp, mainLight);\n        }\n        assert(pass !== undefined);\n\n        // Forward Lighting (Additive Lights)\n        this.forwardLighting.addLightQueues(\n            pass,\n            camera,\n            pplConfigs.mobileMaxSpotLightShadowMaps,\n        );\n\n        return pass;\n    }\n    private _addForwardMultipleRadiancePasses(\n        ppl: rendering.BasicPipeline,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        camera: renderer.scene.Camera,\n        width: number,\n        height: number,\n        mainLight: renderer.scene.DirectionalLight | null,\n        colorName: string,\n        depthStencilName: string,\n        depthStencilStoreOp: gfx.StoreOp\n    ): rendering.BasicRenderPassBuilder {\n        assert(!cameraConfigs.enableSingleForwardPass);\n\n        // Forward Lighting (Main Directional Light)\n        let pass = ppl.addRenderPass(width, height, 'default');\n        pass.name = 'ForwardPass';\n\n        const firstStoreOp = this.forwardLighting.isMultipleLightPassesNeeded()\n            ? StoreOp.STORE\n            : depthStencilStoreOp;\n\n        this._buildForwardMainLightPass(pass, cameraConfigs,\n            id, camera, colorName, depthStencilName, firstStoreOp, mainLight);\n\n        // Forward Lighting (Additive Lights)\n        pass = this.forwardLighting\n            .addLightPasses(colorName, depthStencilName, depthStencilStoreOp,\n                id, width, height, camera, this._viewport, ppl, pass);\n\n        return pass;\n    }\n    private _buildForwardMainLightPass(\n        pass: rendering.BasicRenderPassBuilder,\n        cameraConfigs: Readonly<CameraConfigs & ForwardPassConfigs>,\n        id: number,\n        camera: renderer.scene.Camera,\n        colorName: string,\n        depthStencilName: string,\n        depthStencilStoreOp: gfx.StoreOp,\n        mainLight: renderer.scene.DirectionalLight | null,\n        scene: renderer.RenderScene | null = null,\n    ): void {\n        const QueueHint = rendering.QueueHint;\n        const SceneFlags = rendering.SceneFlags;\n        // set viewport\n        pass.setViewport(this._viewport);\n\n        const colorStoreOp = cameraConfigs.enableMSAA ? StoreOp.DISCARD : StoreOp.STORE;\n\n        // bind output render target\n        if (forwardNeedClearColor(camera)) {\n            pass.addRenderTarget(colorName, LoadOp.CLEAR, colorStoreOp, this._clearColor);\n        } else {\n            pass.addRenderTarget(colorName, LoadOp.LOAD, colorStoreOp);\n        }\n\n        // bind depth stencil buffer\n        if (DEBUG) {\n            if (colorName === cameraConfigs.colorName &&\n                depthStencilName !== cameraConfigs.depthStencilName) {\n                warn('Default framebuffer cannot use custom depth stencil buffer');\n            }\n        }\n\n        if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\n            pass.addDepthStencil(\n                depthStencilName,\n                LoadOp.CLEAR,\n                depthStencilStoreOp,\n                camera.clearDepth,\n                camera.clearStencil,\n                camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\n            );\n        } else {\n            pass.addDepthStencil(depthStencilName, LoadOp.LOAD, depthStencilStoreOp);\n        }\n\n        // Set shadow map if enabled\n        if (cameraConfigs.enableMainLightShadowMap) {\n            pass.addTexture(`ShadowMap${id}`, 'cc_shadowMap');\n        }\n\n        // TODO(zhouzhenglong): Separate OPAQUE and MASK queue\n\n        // add opaque and mask queue\n        pass.addQueue(QueueHint.NONE) // Currently we put OPAQUE and MASK into one queue, so QueueHint is NONE\n            .addScene(camera,\n                SceneFlags.OPAQUE | SceneFlags.MASK,\n                mainLight || undefined,\n                scene ? scene : undefined);\n    }\n    private _addPlanarShadowQueue(\n        camera: renderer.scene.Camera,\n        mainLight: renderer.scene.DirectionalLight | null,\n        pass: rendering.BasicRenderPassBuilder,\n    ) {\n        const QueueHint = rendering.QueueHint;\n        const SceneFlags = rendering.SceneFlags;\n        pass.addQueue(QueueHint.BLEND, 'planar-shadow')\n            .addScene(\n                camera,\n                SceneFlags.SHADOW_CASTER | SceneFlags.PLANAR_SHADOW | SceneFlags.BLEND,\n                mainLight || undefined,\n            );\n    }\n    private readonly forwardLighting = new ForwardLighting();\n    private readonly _viewport = new Viewport();\n    private readonly _clearColor = new Color(0, 0, 0, 1);\n    private readonly _reflectionProbeClearColor = new Vec3(0, 0, 0);\n}\n\nexport interface BloomPassConfigs {\n    enableBloom: boolean;\n}\n\nfunction downSize(size: number, scale: number): number {\n    return Math.max(Math.floor(size * scale), 1);\n}\n\ninterface RenderTextureDesc {\n    name: string;\n    width: number;\n    height: number;\n}\n\nexport class BuiltinBloomPassBuilder implements rendering.PipelinePassBuilder {\n    getConfigOrder(): number {\n        return 0;\n    }\n    getRenderOrder(): number {\n        return 200;\n    }\n    configCamera(\n        camera: Readonly<renderer.scene.Camera>,\n        pipelineConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & BloomPassConfigs): void {\n        const { bloom } = cameraConfigs.settings;\n        const hasValidMaterial = (\n            bloom.type === BloomType.KawaseDualFilter && !!bloom.kawaseFilterMaterial ||\n            bloom.type === BloomType.MipmapFilter && !!bloom.mipmapFilterMaterial\n        );\n        cameraConfigs.enableBloom = bloom.enabled && hasValidMaterial;\n\n        if (cameraConfigs.enableBloom) {\n            ++cameraConfigs.remainingPasses;\n        }\n    }\n    windowResize(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & BloomPassConfigs,\n        window: renderer.RenderWindow): void {\n        if (!cameraConfigs.enableBloom) {\n            return;\n        }\n\n        const { width, height, settings: { bloom } } = cameraConfigs;\n        const id = window.renderWindowId;\n        const format = cameraConfigs.radianceFormat;\n\n        if (bloom.type === BloomType.KawaseDualFilter) {\n            let bloomWidth = cameraConfigs.width;\n            let bloomHeight = cameraConfigs.height;\n            for (let i = 0; i !== bloom.iterations + 1; ++i) {\n                bloomWidth = Math.max(Math.floor(bloomWidth / 2), 1);\n                bloomHeight = Math.max(Math.floor(bloomHeight / 2), 1);\n                ppl.addRenderTarget(`BloomTex${id}_${i}`, format, bloomWidth, bloomHeight);\n            }\n        } else if (bloom.type === BloomType.MipmapFilter) {\n            const iterations = bloom.iterations;\n            for (let i = 0; i !== iterations + 1; ++i) {\n                // DownSample\n                if (i < iterations) {\n                    const scale = Math.pow(0.5, i + 2);\n                    this._bloomDownSampleTexDescs[i] = this.createTexture(\n                        ppl,\n                        `DownSampleColor${id}${i}`,\n                        downSize(width, scale),\n                        downSize(height, scale),\n                        format);\n                }\n                // UpSample\n                if (i < iterations - 1) {\n                    const scale = Math.pow(0.5, iterations - i - 1);\n                    this._bloomUpSampleTexDescs[i] = this.createTexture(\n                        ppl,\n                        `UpSampleColor${id}${i}`,\n                        downSize(width, scale),\n                        downSize(height, scale),\n                        format);\n                }\n            }\n            this._originalColorDesc = this.createTexture(ppl, `OriginalColor${id}`, width, height, format);\n            this._prefilterTexDesc = this.createTexture(ppl, `PrefilterColor${id}`,\n                downSize(width, 0.5), downSize(height, 0.5), format);\n        }\n    }\n    private createTexture(\n        ppl: rendering.BasicPipeline,\n        name: string, width: number, height: number, format: number): RenderTextureDesc {\n        const desc = { name, width, height };\n        ppl.addRenderTarget(desc.name, format, desc.width, desc.height);\n        return desc;\n    }\n\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & BloomPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext,\n        prevRenderPass?: rendering.BasicRenderPassBuilder)\n        : rendering.BasicRenderPassBuilder | undefined {\n        if (!cameraConfigs.enableBloom) {\n            return prevRenderPass;\n        }\n\n        --cameraConfigs.remainingPasses;\n        assert(cameraConfigs.remainingPasses >= 0);\n\n        const bloom = cameraConfigs.settings.bloom;\n        const id = camera.window.renderWindowId;\n\n        switch (bloom.type) {\n            case BloomType.KawaseDualFilter: {\n                const material = bloom.kawaseFilterMaterial;\n                assert(!!material);\n                return this._addKawaseDualFilterBloomPasses(\n                    ppl, pplConfigs,\n                    cameraConfigs,\n                    cameraConfigs.settings,\n                    material,\n                    id,\n                    cameraConfigs.width,\n                    cameraConfigs.height,\n                    context.colorName);\n            }\n            case BloomType.MipmapFilter: {\n                const material = bloom.mipmapFilterMaterial;\n                assert(!!material);\n                return this._addMipmapFilterBloomPasses(\n                    ppl, pplConfigs,\n                    cameraConfigs,\n                    cameraConfigs.settings,\n                    material,\n                    id,\n                    cameraConfigs.width,\n                    cameraConfigs.height,\n                    context.colorName);\n            }\n            default:\n                return prevRenderPass;\n        }\n    }\n    private _addKawaseDualFilterBloomPasses(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & Readonly<BloomPassConfigs>,\n        settings: PipelineSettings,\n        bloomMaterial: Material,\n        id: number,\n        width: number,\n        height: number,\n        radianceName: string,\n    ): rendering.BasicRenderPassBuilder {\n        const QueueHint = rendering.QueueHint;\n        // Based on Kawase Dual Filter Blur. Saves bandwidth on mobile devices.\n        // eslint-disable-next-line max-len\n        // https://community.arm.com/cfs-file/__key/communityserver-blogs-components-weblogfiles/00-00-00-20-66/siggraph2015_2D00_mmg_2D00_marius_2D00_slides.pdf\n\n        // Size: [prefilter(1/2), downsample(1/4), downsample(1/8), downsample(1/16), ...]\n        const iterations = settings.bloom.iterations;\n        const sizeCount = iterations + 1;\n        this._bloomWidths.length = sizeCount;\n        this._bloomHeights.length = sizeCount;\n        this._bloomWidths[0] = Math.max(Math.floor(width / 2), 1);\n        this._bloomHeights[0] = Math.max(Math.floor(height / 2), 1);\n        for (let i = 1; i !== sizeCount; ++i) {\n            this._bloomWidths[i] = Math.max(Math.floor(this._bloomWidths[i - 1] / 2), 1);\n            this._bloomHeights[i] = Math.max(Math.floor(this._bloomHeights[i - 1] / 2), 1);\n        }\n\n        // Bloom texture names\n        this._bloomTexNames.length = sizeCount;\n        for (let i = 0; i !== sizeCount; ++i) {\n            this._bloomTexNames[i] = `BloomTex${id}_${i}`;\n        }\n\n        // Setup bloom parameters\n        this._bloomParams.x = pplConfigs.useFloatOutput ? 1 : 0;\n        this._bloomParams.y = 0; // unused\n        this._bloomParams.z = settings.bloom.threshold;\n        this._bloomParams.w = settings.bloom.enableAlphaMask ? 1 : 0;\n\n        // Prefilter pass\n        const prefilterPass = ppl.addRenderPass(this._bloomWidths[0], this._bloomHeights[0], 'cc-bloom-prefilter');\n        prefilterPass.addRenderTarget(\n            this._bloomTexNames[0],\n            LoadOp.CLEAR,\n            StoreOp.STORE,\n            this._clearColorTransparentBlack,\n        );\n        prefilterPass.addTexture(radianceName, 'inputTexture');\n        prefilterPass.setVec4('bloomParams', this._bloomParams);\n        prefilterPass\n            .addQueue(QueueHint.OPAQUE)\n            .addFullscreenQuad(bloomMaterial, 0);\n\n        // Downsample passes\n        for (let i = 1; i !== sizeCount; ++i) {\n            const downPass = ppl.addRenderPass(this._bloomWidths[i], this._bloomHeights[i], 'cc-bloom-downsample');\n            downPass.addRenderTarget(this._bloomTexNames[i], LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\n            downPass.addTexture(this._bloomTexNames[i - 1], 'bloomTexture');\n            this._bloomTexSize.x = this._bloomWidths[i - 1];\n            this._bloomTexSize.y = this._bloomHeights[i - 1];\n            downPass.setVec4('bloomTexSize', this._bloomTexSize);\n            downPass\n                .addQueue(QueueHint.OPAQUE)\n                .addFullscreenQuad(bloomMaterial, 1);\n        }\n\n        // Upsample passes\n        for (let i = iterations; i-- > 0;) {\n            const upPass = ppl.addRenderPass(this._bloomWidths[i], this._bloomHeights[i], 'cc-bloom-upsample');\n            upPass.addRenderTarget(this._bloomTexNames[i], LoadOp.CLEAR, StoreOp.STORE, this._clearColorTransparentBlack);\n            upPass.addTexture(this._bloomTexNames[i + 1], 'bloomTexture');\n            this._bloomTexSize.x = this._bloomWidths[i + 1];\n            this._bloomTexSize.y = this._bloomHeights[i + 1];\n            upPass.setVec4('bloomTexSize', this._bloomTexSize);\n            upPass\n                .addQueue(QueueHint.OPAQUE)\n                .addFullscreenQuad(bloomMaterial, 2);\n        }\n\n        // Combine pass\n        this._bloomParams.w = settings.bloom.intensity;\n        const combinePass = ppl.addRenderPass(width, height, 'cc-bloom-combine');\n        combinePass.addRenderTarget(radianceName, LoadOp.LOAD, StoreOp.STORE);\n        combinePass.addTexture(this._bloomTexNames[0], 'bloomTexture');\n        combinePass.setVec4('bloomParams', this._bloomParams);\n        combinePass\n            .addQueue(QueueHint.BLEND)\n            .addFullscreenQuad(bloomMaterial, 3);\n\n        if (cameraConfigs.remainingPasses === 0) {\n            return addCopyToScreenPass(ppl, pplConfigs, cameraConfigs, radianceName);\n        } else {\n            return combinePass;\n        }\n    }\n    private _addPass(\n        ppl: rendering.BasicPipeline,\n        width: number,\n        height: number,\n        layout: string,\n        colorName: string,\n        material: Material,\n        passIndex: number,\n        loadOp: gfx.LoadOp = LoadOp.CLEAR,\n        clearColor: gfx.Color = sClearColorTransparentBlack,\n        queueHint: rendering.QueueHint = rendering.QueueHint.OPAQUE): rendering.BasicRenderPassBuilder {\n        const pass = ppl.addRenderPass(width, height, layout);\n        pass.addRenderTarget(colorName, loadOp, StoreOp.STORE, clearColor);\n        pass.addQueue(queueHint)\n            .addFullscreenQuad(material, passIndex);\n        return pass;\n    }\n    private _addMipmapFilterBloomPasses(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & Readonly<BloomPassConfigs>,\n        settings: PipelineSettings,\n        bloomMaterial: Material,\n        id: number,\n        width: number,\n        height: number,\n        radianceName: string,\n    ): rendering.BasicRenderPassBuilder {\n        // Setup bloom parameters\n        this._bloomParams.x = pplConfigs.useFloatOutput ? 1 : 0;\n        this._bloomParams.x = 0; // unused\n        this._bloomParams.z = settings.bloom.threshold;\n        this._bloomParams.w = settings.bloom.intensity;\n        const prefilterInfo = this._prefilterTexDesc;\n\n        // Prefilter pass\n        let currSamplePass = this._addPass(\n            ppl,\n            prefilterInfo.width,\n            prefilterInfo.height,\n            'cc-bloom-mipmap-prefilter',\n            prefilterInfo.name,\n            bloomMaterial,\n            0,\n        );\n        currSamplePass.addTexture(radianceName, 'mainTexture');\n        currSamplePass.setVec4('bloomParams', this._bloomParams);\n\n        const downSampleInfos = this._bloomDownSampleTexDescs;\n        // Downsample passes\n        for (let i = 0; i < downSampleInfos.length; ++i) {\n            const currInfo = downSampleInfos[i];\n            const samplerSrc = i === 0 ? prefilterInfo : downSampleInfos[i - 1];\n            const samplerSrcName = samplerSrc.name;\n            this._bloomTexSize.x = 1 / samplerSrc.width;\n            this._bloomTexSize.y = 1 / samplerSrc.height;\n            currSamplePass = this._addPass(\n                ppl,\n                currInfo.width,\n                currInfo.height,\n                'cc-bloom-mipmap-downsample',\n                currInfo.name,\n                bloomMaterial,\n                1,\n            );\n            currSamplePass.addTexture(samplerSrcName, 'mainTexture');\n            currSamplePass.setVec4('bloomParams', this._bloomTexSize);\n        }\n        const lastIndex = downSampleInfos.length - 1;\n        const upSampleInfos = this._bloomUpSampleTexDescs;\n        // Upsample passes\n        for (let i = 0; i < upSampleInfos.length; i++) {\n            const currInfo = upSampleInfos[i];\n            const sampleSrc = i === 0 ? downSampleInfos[lastIndex] : upSampleInfos[i - 1];\n            const sampleSrcName = sampleSrc.name;\n            this._bloomTexSize.x = 1 / sampleSrc.width;\n            this._bloomTexSize.y = 1 / sampleSrc.height;\n            currSamplePass = this._addPass(\n                ppl,\n                currInfo.width,\n                currInfo.height,\n                'cc-bloom-mipmap-upsample',\n                currInfo.name,\n                bloomMaterial,\n                2,\n            );\n            currSamplePass.addTexture(sampleSrcName, 'mainTexture');\n            currSamplePass.addTexture(downSampleInfos[lastIndex - 1 - i].name, 'downsampleTexture');\n            currSamplePass.setVec4('bloomParams', this._bloomTexSize);\n        }\n\n        // Combine pass\n        const combinePass = this._addPass(\n            ppl,\n            width,\n            height,\n            'cc-bloom-mipmap-combine',\n            radianceName,\n            bloomMaterial,\n            3,\n            LoadOp.LOAD,\n        );\n        combinePass.addTexture(upSampleInfos[upSampleInfos.length - 1].name, 'bloomTexture');\n        combinePass.setVec4('bloomParams', this._bloomParams);\n        if (cameraConfigs.remainingPasses === 0) {\n            return addCopyToScreenPass(ppl, pplConfigs, cameraConfigs, radianceName);\n        } else {\n            return combinePass;\n        }\n    }\n\n    // Bloom\n    private readonly _clearColorTransparentBlack = new Color(0, 0, 0, 0);\n    private readonly _bloomParams = new Vec4(0, 0, 0, 0);\n    private readonly _bloomTexSize = new Vec4(0, 0, 0, 0);\n    private readonly _bloomWidths: Array<number> = [];\n    private readonly _bloomHeights: Array<number> = [];\n    private readonly _bloomTexNames: Array<string> = [];\n\n    // Mipmap Bloom\n    private readonly _bloomUpSampleTexDescs: Array<RenderTextureDesc> = [];\n    private readonly _bloomDownSampleTexDescs: Array<RenderTextureDesc> = [];\n    private _prefilterTexDesc: RenderTextureDesc = { name: '', width: 0, height: 0 };\n    private _originalColorDesc: RenderTextureDesc = { name: '', width: 0, height: 0 };\n}\n\nexport interface ToneMappingPassConfigs {\n    enableToneMapping: boolean;\n    enableColorGrading: boolean;\n}\n\nexport class BuiltinToneMappingPassBuilder implements rendering.PipelinePassBuilder {\n    getConfigOrder(): number {\n        return 0;\n    }\n    getRenderOrder(): number {\n        return 300;\n    }\n    configCamera(\n        camera: Readonly<renderer.scene.Camera>,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ToneMappingPassConfigs): void {\n        const settings = cameraConfigs.settings;\n\n        cameraConfigs.enableColorGrading\n            = settings.colorGrading.enabled\n            && !!settings.colorGrading.material\n            && !!settings.colorGrading.colorGradingMap;\n\n        cameraConfigs.enableToneMapping\n            = cameraConfigs.enableHDR // From Half to RGBA8\n            || cameraConfigs.enableColorGrading; // Color grading\n\n        if (cameraConfigs.enableToneMapping) {\n            ++cameraConfigs.remainingPasses;\n        }\n    }\n    windowResize(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ToneMappingPassConfigs): void {\n        if (cameraConfigs.enableColorGrading) {\n            assert(!!cameraConfigs.settings.colorGrading.material);\n            cameraConfigs.settings.colorGrading.material.setProperty(\n                'colorGradingMap',\n                cameraConfigs.settings.colorGrading.colorGradingMap);\n        }\n    }\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ToneMappingPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext,\n        prevRenderPass?: rendering.BasicRenderPassBuilder)\n        : rendering.BasicRenderPassBuilder | undefined {\n        if (!cameraConfigs.enableToneMapping) {\n            return prevRenderPass;\n        }\n\n        --cameraConfigs.remainingPasses;\n        assert(cameraConfigs.remainingPasses >= 0);\n        if (cameraConfigs.remainingPasses === 0) {\n            return this._addCopyAndTonemapPass(ppl, pplConfigs, cameraConfigs,\n                cameraConfigs.width, cameraConfigs.height,\n                context.colorName, cameraConfigs.colorName);\n        } else {\n            const id = cameraConfigs.renderWindowId;\n            const ldrColorPrefix = cameraConfigs.enableShadingScale\n                ? `ScaledLdrColor`\n                : `LdrColor`;\n\n            const ldrColorName = getPingPongRenderTarget(context.colorName, ldrColorPrefix, id);\n            const radianceName = context.colorName;\n            context.colorName = ldrColorName;\n\n            return this._addCopyAndTonemapPass(ppl, pplConfigs, cameraConfigs,\n                cameraConfigs.width, cameraConfigs.height,\n                radianceName, ldrColorName);\n        }\n    }\n    private _addCopyAndTonemapPass(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & ToneMappingPassConfigs,\n        width: number,\n        height: number,\n        radianceName: string,\n        colorName: string,\n    ): rendering.BasicRenderPassBuilder {\n        let pass: rendering.BasicRenderPassBuilder;\n        const settings = cameraConfigs.settings;\n        if (cameraConfigs.enableColorGrading) {\n            assert(!!settings.colorGrading.material);\n            assert(!!settings.colorGrading.colorGradingMap);\n\n            const lutTex = settings.colorGrading.colorGradingMap;\n            this._colorGradingTexSize.x = lutTex.width;\n            this._colorGradingTexSize.y = lutTex.height;\n\n            const isSquareMap = lutTex.width === lutTex.height;\n            if (isSquareMap) {\n                pass = ppl.addRenderPass(width, height, 'cc-color-grading-8x8');\n            } else {\n                pass = ppl.addRenderPass(width, height, 'cc-color-grading-nx1');\n            }\n            pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, sClearColorTransparentBlack);\n            pass.addTexture(radianceName, 'sceneColorMap');\n            pass.setVec2('lutTextureSize', this._colorGradingTexSize);\n            pass.setFloat('contribute', settings.colorGrading.contribute);\n            pass.addQueue(rendering.QueueHint.OPAQUE)\n                .addFullscreenQuad(settings.colorGrading.material, isSquareMap ? 1 : 0);\n        } else {\n            pass = ppl.addRenderPass(width, height, 'cc-tone-mapping');\n            pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, sClearColorTransparentBlack);\n            pass.addTexture(radianceName, 'inputTexture');\n            if (settings.toneMapping.material) {\n                pass.addQueue(rendering.QueueHint.OPAQUE)\n                    .addFullscreenQuad(settings.toneMapping.material, 0);\n            } else {\n                assert(!!cameraConfigs.copyAndTonemapMaterial);\n                pass.addQueue(rendering.QueueHint.OPAQUE)\n                    .addFullscreenQuad(cameraConfigs.copyAndTonemapMaterial, 0);\n            }\n        }\n        return pass;\n    }\n    private readonly _colorGradingTexSize = new Vec2(0, 0);\n}\n\nexport interface FXAAPassConfigs {\n    enableFXAA: boolean;\n}\n\nexport class BuiltinFXAAPassBuilder implements rendering.PipelinePassBuilder {\n    getConfigOrder(): number {\n        return 0;\n    }\n    getRenderOrder(): number {\n        return 400;\n    }\n    configCamera(\n        camera: Readonly<renderer.scene.Camera>,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FXAAPassConfigs): void {\n        cameraConfigs.enableFXAA\n            = cameraConfigs.settings.fxaa.enabled\n            && !!cameraConfigs.settings.fxaa.material;\n        if (cameraConfigs.enableFXAA) {\n            ++cameraConfigs.remainingPasses;\n        }\n    }\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FXAAPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext,\n        prevRenderPass?: rendering.BasicRenderPassBuilder)\n        : rendering.BasicRenderPassBuilder | undefined {\n        if (!cameraConfigs.enableFXAA) {\n            return prevRenderPass;\n        }\n        --cameraConfigs.remainingPasses;\n        assert(cameraConfigs.remainingPasses >= 0);\n\n        const id = cameraConfigs.renderWindowId;\n        const ldrColorPrefix = cameraConfigs.enableShadingScale\n            ? `ScaledLdrColor`\n            : `LdrColor`;\n        const ldrColorName = getPingPongRenderTarget(context.colorName, ldrColorPrefix, id);\n\n        assert(!!cameraConfigs.settings.fxaa.material);\n        if (cameraConfigs.remainingPasses === 0) {\n            if (cameraConfigs.enableShadingScale) {\n                this._addFxaaPass(ppl, pplConfigs,\n                    cameraConfigs.settings.fxaa.material,\n                    cameraConfigs.width,\n                    cameraConfigs.height,\n                    context.colorName,\n                    ldrColorName);\n                return addCopyToScreenPass(ppl, pplConfigs, cameraConfigs, ldrColorName);\n            } else {\n                assert(cameraConfigs.width === cameraConfigs.nativeWidth);\n                assert(cameraConfigs.height === cameraConfigs.nativeHeight);\n                return this._addFxaaPass(ppl, pplConfigs,\n                    cameraConfigs.settings.fxaa.material,\n                    cameraConfigs.width,\n                    cameraConfigs.height,\n                    context.colorName,\n                    cameraConfigs.colorName);\n            }\n        } else {\n            const inputColorName = context.colorName;\n            context.colorName = ldrColorName;\n            const lastPass = this._addFxaaPass(ppl, pplConfigs,\n                cameraConfigs.settings.fxaa.material,\n                cameraConfigs.width,\n                cameraConfigs.height,\n                inputColorName,\n                ldrColorName);\n            return lastPass;\n        }\n    }\n    private _addFxaaPass(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        fxaaMaterial: Material,\n        width: number,\n        height: number,\n        ldrColorName: string,\n        colorName: string,\n    ): rendering.BasicRenderPassBuilder {\n        this._fxaaParams.x = width;\n        this._fxaaParams.y = height;\n        this._fxaaParams.z = 1 / width;\n        this._fxaaParams.w = 1 / height;\n\n        const pass = ppl.addRenderPass(width, height, 'cc-fxaa');\n        pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, sClearColorTransparentBlack);\n        pass.addTexture(ldrColorName, 'sceneColorMap');\n        pass.setVec4('texSize', this._fxaaParams);\n        pass.addQueue(rendering.QueueHint.OPAQUE)\n            .addFullscreenQuad(fxaaMaterial, 0);\n        return pass;\n    }\n    // FXAA\n    private readonly _fxaaParams = new Vec4(0, 0, 0, 0);\n}\n\nexport interface FSRPassConfigs {\n    enableFSR: boolean;\n}\n\nexport class BuiltinFsrPassBuilder implements rendering.PipelinePassBuilder {\n    getConfigOrder(): number {\n        return 0;\n    }\n    getRenderOrder(): number {\n        return 500;\n    }\n    configCamera(\n        camera: Readonly<renderer.scene.Camera>,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FSRPassConfigs): void {\n        // FSR (Depend on Shading scale)\n        cameraConfigs.enableFSR = cameraConfigs.settings.fsr.enabled\n            && !!cameraConfigs.settings.fsr.material\n            && cameraConfigs.enableShadingScale\n            && cameraConfigs.shadingScale < 1.0;\n\n        if (cameraConfigs.enableFSR) {\n            ++cameraConfigs.remainingPasses;\n        }\n    }\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FSRPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext,\n        prevRenderPass?: rendering.BasicRenderPassBuilder)\n        : rendering.BasicRenderPassBuilder | undefined {\n        if (!cameraConfigs.enableFSR) {\n            return prevRenderPass;\n        }\n        --cameraConfigs.remainingPasses;\n\n        const inputColorName = context.colorName;\n        const outputColorName\n            = cameraConfigs.remainingPasses === 0\n                ? cameraConfigs.colorName\n                : getPingPongRenderTarget(context.colorName, 'UiColor', cameraConfigs.renderWindowId);\n        context.colorName = outputColorName;\n\n        assert(!!cameraConfigs.settings.fsr.material);\n        return this._addFsrPass(ppl, pplConfigs, cameraConfigs,\n            cameraConfigs.settings,\n            cameraConfigs.settings.fsr.material,\n            cameraConfigs.renderWindowId,\n            cameraConfigs.width,\n            cameraConfigs.height,\n            inputColorName,\n            cameraConfigs.nativeWidth,\n            cameraConfigs.nativeHeight,\n            outputColorName);\n    }\n    private _addFsrPass(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FSRPassConfigs,\n        settings: PipelineSettings,\n        fsrMaterial: Material,\n        id: number,\n        width: number,\n        height: number,\n        inputColorName: string,\n        nativeWidth: number,\n        nativeHeight: number,\n        outputColorName: string,\n    ): rendering.BasicRenderPassBuilder {\n        this._fsrTexSize.x = width;\n        this._fsrTexSize.y = height;\n        this._fsrTexSize.z = nativeWidth;\n        this._fsrTexSize.w = nativeHeight;\n        this._fsrParams.x = clamp(1.0 - settings.fsr.sharpness, 0.02, 0.98);\n\n        const uiColorPrefix = 'UiColor';\n\n        const fsrColorName = getPingPongRenderTarget(outputColorName, uiColorPrefix, id);\n\n        const easuPass = ppl.addRenderPass(nativeWidth, nativeHeight, 'cc-fsr-easu');\n        easuPass.addRenderTarget(fsrColorName, LoadOp.CLEAR, StoreOp.STORE, sClearColorTransparentBlack);\n        easuPass.addTexture(inputColorName, 'outputResultMap');\n        easuPass.setVec4('fsrTexSize', this._fsrTexSize);\n        easuPass\n            .addQueue(rendering.QueueHint.OPAQUE)\n            .addFullscreenQuad(fsrMaterial, 0);\n\n        const rcasPass = ppl.addRenderPass(nativeWidth, nativeHeight, 'cc-fsr-rcas');\n        rcasPass.addRenderTarget(outputColorName, LoadOp.CLEAR, StoreOp.STORE, sClearColorTransparentBlack);\n        rcasPass.addTexture(fsrColorName, 'outputResultMap');\n        rcasPass.setVec4('fsrTexSize', this._fsrTexSize);\n        rcasPass.setVec4('fsrParams', this._fsrParams);\n        rcasPass\n            .addQueue(rendering.QueueHint.OPAQUE)\n            .addFullscreenQuad(fsrMaterial, 1);\n\n        return rcasPass;\n    }\n    // FSR\n    private readonly _fsrParams = new Vec4(0, 0, 0, 0);\n    private readonly _fsrTexSize = new Vec4(0, 0, 0, 0);\n}\n\nexport class BuiltinUiPassBuilder implements rendering.PipelinePassBuilder {\n    getConfigOrder(): number {\n        return 0;\n    }\n    getRenderOrder(): number {\n        return 1000;\n    }\n    setup(\n        ppl: rendering.BasicPipeline,\n        pplConfigs: Readonly<PipelineConfigs>,\n        cameraConfigs: CameraConfigs & FSRPassConfigs,\n        camera: renderer.scene.Camera,\n        context: PipelineContext,\n        prevRenderPass?: rendering.BasicRenderPassBuilder)\n        : rendering.BasicRenderPassBuilder | undefined {\n        assert(!!prevRenderPass);\n\n        let flags = rendering.SceneFlags.UI;\n        if (cameraConfigs.enableProfiler) {\n            flags |= rendering.SceneFlags.PROFILER;\n            prevRenderPass.showStatistics = true;\n        }\n        prevRenderPass\n            .addQueue(rendering.QueueHint.BLEND, 'default', 'default')\n            .addScene(camera, flags);\n\n        return prevRenderPass;\n    }\n}\n\nif (rendering) {\n\n    const { QueueHint, SceneFlags } = rendering;\n\n    class BuiltinPipelineBuilder implements rendering.PipelineBuilder {\n        private readonly _pipelineEvent: PipelineEventProcessor = cclegacy.director.root.pipelineEvent as PipelineEventProcessor;\n        private readonly _forwardPass = new BuiltinForwardPassBuilder();\n        private readonly _bloomPass = new BuiltinBloomPassBuilder();\n        private readonly _toneMappingPass = new BuiltinToneMappingPassBuilder();\n        private readonly _fxaaPass = new BuiltinFXAAPassBuilder();\n        private readonly _fsrPass = new BuiltinFsrPassBuilder();\n        private readonly _uiPass = new BuiltinUiPassBuilder();\n        // Internal cached resources\n        private readonly _clearColor = new Color(0, 0, 0, 1);\n        private readonly _viewport = new Viewport();\n        private readonly _configs = new PipelineConfigs();\n        private readonly _cameraConfigs = new CameraConfigs();\n        // Materials\n        private readonly _copyAndTonemapMaterial = new Material();\n\n        // Internal States\n        private _initialized = false; // TODO(zhouzhenglong): Make default effect asset loading earlier and remove this flag\n        private _passBuilders: rendering.PipelinePassBuilder[] = [];\n\n        private _setupPipelinePreview(\n            camera: renderer.scene.Camera,\n            cameraConfigs: CameraConfigs) {\n            const isEditorView: boolean\n                = camera.cameraUsage === CameraUsage.SCENE_VIEW\n                || camera.cameraUsage === CameraUsage.PREVIEW;\n\n            if (isEditorView) {\n                const editorSettings = rendering.getEditorPipelineSettings() as PipelineSettings | null;\n                if (editorSettings) {\n                    cameraConfigs.settings = editorSettings;\n                } else {\n                    cameraConfigs.settings = defaultSettings;\n                }\n            } else {\n                if (camera.pipelineSettings) {\n                    cameraConfigs.settings = camera.pipelineSettings as PipelineSettings;\n                } else {\n                    cameraConfigs.settings = defaultSettings;\n                }\n            }\n        }\n\n        private _preparePipelinePasses(cameraConfigs: CameraConfigs): void {\n            const passBuilders = this._passBuilders;\n            passBuilders.length = 0;\n\n            const settings = cameraConfigs.settings as PipelineSettings2;\n            if (settings._passes) {\n                for (const pass of settings._passes) {\n                    passBuilders.push(pass);\n                }\n                assert(passBuilders.length === settings._passes.length);\n            }\n\n            passBuilders.push(this._forwardPass);\n\n            if (settings.bloom.enabled) {\n                passBuilders.push(this._bloomPass);\n            }\n\n            passBuilders.push(this._toneMappingPass);\n\n            if (settings.fxaa.enabled) {\n                passBuilders.push(this._fxaaPass);\n            }\n\n            if (settings.fsr.enabled) {\n                passBuilders.push(this._fsrPass);\n            }\n            passBuilders.push(this._uiPass);\n        }\n\n        private _setupBuiltinCameraConfigs(\n            ppl: rendering.BasicPipeline,\n            camera: renderer.scene.Camera,\n            pipelineConfigs: PipelineConfigs,\n            cameraConfigs: CameraConfigs\n        ) {\n            const window = camera.window;\n            const isMainGameWindow: boolean = camera.cameraUsage === CameraUsage.GAME && !!window.swapchain;\n            const isGameView = isMainGameWindow || camera.cameraUsage === CameraUsage.GAME_VIEW;\n\n            // Window\n            cameraConfigs.isMainGameWindow = isMainGameWindow;\n            cameraConfigs.renderWindowId = window.renderWindowId;\n\n            // Camera\n            cameraConfigs.colorName = window.colorName;\n            cameraConfigs.depthStencilName = window.depthStencilName;\n\n            // Pipeline\n            cameraConfigs.enableFullPipeline = (camera.visibility & (Layers.Enum.DEFAULT)) !== 0;\n            cameraConfigs.enableProfiler = ppl.profiler && isGameView;\n            cameraConfigs.remainingPasses = 0;\n\n            // Shading scale\n            cameraConfigs.shadingScale = cameraConfigs.settings.shadingScale;\n            cameraConfigs.enableShadingScale = cameraConfigs.settings.enableShadingScale\n                && cameraConfigs.shadingScale !== 1.0;\n\n            cameraConfigs.nativeWidth = Math.max(Math.floor(window.width), 1);\n            cameraConfigs.nativeHeight = Math.max(Math.floor(window.height), 1);\n\n            cameraConfigs.width = cameraConfigs.enableShadingScale\n                ? Math.max(Math.floor(cameraConfigs.nativeWidth * cameraConfigs.shadingScale), 1)\n                : cameraConfigs.nativeWidth;\n            cameraConfigs.height = cameraConfigs.enableShadingScale\n                ? Math.max(Math.floor(cameraConfigs.nativeHeight * cameraConfigs.shadingScale), 1)\n                : cameraConfigs.nativeHeight;\n\n            // Radiance\n            cameraConfigs.enableHDR = cameraConfigs.enableFullPipeline\n                && pipelineConfigs.useFloatOutput;\n            cameraConfigs.radianceFormat = cameraConfigs.enableHDR\n                ? gfx.Format.RGBA16F : gfx.Format.RGBA8;\n\n            // Tone Mapping\n            cameraConfigs.copyAndTonemapMaterial = this._copyAndTonemapMaterial;\n\n            // Depth\n            cameraConfigs.enableStoreSceneDepth = false;\n        }\n\n        private _setupCameraConfigs(\n            ppl: rendering.BasicPipeline,\n            camera: renderer.scene.Camera,\n            pipelineConfigs: PipelineConfigs,\n            cameraConfigs: CameraConfigs\n        ): void {\n            this._setupPipelinePreview(camera, cameraConfigs);\n\n            this._preparePipelinePasses(cameraConfigs);\n\n            sortPipelinePassBuildersByConfigOrder(this._passBuilders);\n\n            this._setupBuiltinCameraConfigs(ppl, camera, pipelineConfigs, cameraConfigs);\n\n            for (const builder of this._passBuilders) {\n                if (builder.configCamera) {\n                    builder.configCamera(camera, pipelineConfigs, cameraConfigs);\n                }\n            }\n        }\n\n        // ----------------------------------------------------------------\n        // Interface\n        // ----------------------------------------------------------------\n        windowResize(\n            ppl: rendering.BasicPipeline,\n            window: renderer.RenderWindow,\n            camera: renderer.scene.Camera,\n            nativeWidth: number,\n            nativeHeight: number,\n        ): void {\n            setupPipelineConfigs(ppl, this._configs);\n\n            this._setupCameraConfigs(ppl, camera, this._configs, this._cameraConfigs);\n\n            // Render Window (UI)\n            const id = window.renderWindowId;\n\n            ppl.addRenderWindow(this._cameraConfigs.colorName,\n                Format.RGBA8, nativeWidth, nativeHeight, window,\n                this._cameraConfigs.depthStencilName);\n\n            const width = this._cameraConfigs.width;\n            const height = this._cameraConfigs.height;\n\n            if (this._cameraConfigs.enableShadingScale) {\n                ppl.addDepthStencil(`ScaledSceneDepth_${id}`, Format.DEPTH_STENCIL, width, height);\n                ppl.addRenderTarget(`ScaledRadiance0_${id}`, this._cameraConfigs.radianceFormat, width, height);\n                ppl.addRenderTarget(`ScaledRadiance1_${id}`, this._cameraConfigs.radianceFormat, width, height);\n                ppl.addRenderTarget(`ScaledLdrColor0_${id}`, Format.RGBA8, width, height);\n                ppl.addRenderTarget(`ScaledLdrColor1_${id}`, Format.RGBA8, width, height);\n            } else {\n                ppl.addDepthStencil(`SceneDepth_${id}`, Format.DEPTH_STENCIL, width, height);\n                ppl.addRenderTarget(`Radiance0_${id}`, this._cameraConfigs.radianceFormat, width, height);\n                ppl.addRenderTarget(`Radiance1_${id}`, this._cameraConfigs.radianceFormat, width, height);\n                ppl.addRenderTarget(`LdrColor0_${id}`, Format.RGBA8, width, height);\n                ppl.addRenderTarget(`LdrColor1_${id}`, Format.RGBA8, width, height);\n            }\n            ppl.addRenderTarget(`UiColor0_${id}`, Format.RGBA8, nativeWidth, nativeHeight);\n            ppl.addRenderTarget(`UiColor1_${id}`, Format.RGBA8, nativeWidth, nativeHeight);\n\n            for (const builder of this._passBuilders) {\n                if (builder.windowResize) {\n                    builder.windowResize(ppl, this._configs, this._cameraConfigs, window, camera, nativeWidth, nativeHeight);\n                }\n            }\n        }\n        setup(cameras: renderer.scene.Camera[], ppl: rendering.BasicPipeline): void {\n            // TODO(zhouzhenglong): Make default effect asset loading earlier and remove _initMaterials\n            if (this._initMaterials(ppl)) {\n                return;\n            }\n\n            // Render cameras\n            // log(`==================== One Frame ====================`);\n            for (const camera of cameras) {\n                // Skip invalid camera\n                if (!camera.scene || !camera.window) {\n                    continue;\n                }\n                // Setup camera configs\n                this._setupCameraConfigs(ppl, camera, this._configs, this._cameraConfigs);\n                // log(`Setup camera: ${camera.node!.name}, window: ${camera.window.renderWindowId}, isFull: ${this._cameraConfigs.enableFullPipeline}, `\n                //     + `size: ${camera.window.width}x${camera.window.height}`);\n\n                this._pipelineEvent.emit(PipelineEventType.RENDER_CAMERA_BEGIN, camera);\n\n                // Build pipeline\n                if (this._cameraConfigs.enableFullPipeline) {\n                    this._buildForwardPipeline(ppl, camera, camera.scene, this._passBuilders);\n                } else {\n                    this._buildSimplePipeline(ppl, camera);\n                }\n\n                this._pipelineEvent.emit(PipelineEventType.RENDER_CAMERA_END, camera);\n            }\n        }\n        // ----------------------------------------------------------------\n        // Pipelines\n        // ----------------------------------------------------------------\n        private _buildSimplePipeline(\n            ppl: rendering.BasicPipeline,\n            camera: renderer.scene.Camera,\n        ): void {\n            const width = Math.max(Math.floor(camera.window.width), 1);\n            const height = Math.max(Math.floor(camera.window.height), 1);\n            const colorName = this._cameraConfigs.colorName;\n            const depthStencilName = this._cameraConfigs.depthStencilName;\n\n            const viewport = camera.viewport;  // Reduce C++/TS interop\n            this._viewport.left = Math.round(viewport.x * width);\n            this._viewport.top = Math.round(viewport.y * height);\n            // Here we must use camera.viewport.width instead of camera.viewport.z, which\n            // is undefined on native platform. The same as camera.viewport.height.\n            this._viewport.width = Math.max(Math.round(viewport.width * width), 1);\n            this._viewport.height = Math.max(Math.round(viewport.height * height), 1);\n\n            const clearColor = camera.clearColor;  // Reduce C++/TS interop\n            this._clearColor.x = clearColor.x;\n            this._clearColor.y = clearColor.y;\n            this._clearColor.z = clearColor.z;\n            this._clearColor.w = clearColor.w;\n\n            const pass = ppl.addRenderPass(width, height, 'default');\n\n            // bind output render target\n            if (forwardNeedClearColor(camera)) {\n                pass.addRenderTarget(colorName, LoadOp.CLEAR, StoreOp.STORE, this._clearColor);\n            } else {\n                pass.addRenderTarget(colorName, LoadOp.LOAD, StoreOp.STORE);\n            }\n\n            // bind depth stencil buffer\n            if (camera.clearFlag & ClearFlagBit.DEPTH_STENCIL) {\n                pass.addDepthStencil(\n                    depthStencilName,\n                    LoadOp.CLEAR,\n                    StoreOp.DISCARD,\n                    camera.clearDepth,\n                    camera.clearStencil,\n                    camera.clearFlag & ClearFlagBit.DEPTH_STENCIL,\n                );\n            } else {\n                pass.addDepthStencil(depthStencilName, LoadOp.LOAD, StoreOp.DISCARD);\n            }\n\n            pass.setViewport(this._viewport);\n\n            // The opaque queue is used for Reflection probe preview\n            pass.addQueue(QueueHint.OPAQUE)\n                .addScene(camera, SceneFlags.OPAQUE);\n\n            // The blend queue is used for UI and Gizmos\n            let flags = SceneFlags.BLEND | SceneFlags.UI;\n            if (this._cameraConfigs.enableProfiler) {\n                flags |= SceneFlags.PROFILER;\n                pass.showStatistics = true;\n            }\n            pass.addQueue(QueueHint.BLEND)\n                .addScene(camera, flags);\n        }\n\n        private _buildForwardPipeline(\n            ppl: rendering.BasicPipeline,\n            camera: renderer.scene.Camera,\n            scene: renderer.RenderScene,\n            passBuilders: rendering.PipelinePassBuilder[],\n        ): void {\n            sortPipelinePassBuildersByRenderOrder(passBuilders);\n\n            const context: PipelineContext = {\n                colorName: '',\n                depthStencilName: '',\n            };\n\n            let lastPass: rendering.BasicRenderPassBuilder | undefined = undefined;\n\n            for (const builder of passBuilders) {\n                if (builder.setup) {\n                    lastPass = builder.setup(ppl, this._configs, this._cameraConfigs,\n                        camera, context, lastPass);\n                }\n            }\n\n            assert(this._cameraConfigs.remainingPasses === 0);\n        }\n\n        private _initMaterials(ppl: rendering.BasicPipeline): number {\n            if (this._initialized) {\n                return 0;\n            }\n\n            setupPipelineConfigs(ppl, this._configs);\n\n            // When add new effect asset, please add its uuid to the dependentAssets in cc.config.json.\n            this._copyAndTonemapMaterial._uuid = `builtin-pipeline-tone-mapping-material`;\n            this._copyAndTonemapMaterial.initialize({ effectName: 'pipeline/post-process/tone-mapping' });\n\n            if (this._copyAndTonemapMaterial.effectAsset) {\n                this._initialized = true;\n            }\n\n            return this._initialized ? 0 : 1;\n        }\n    }\n\n    rendering.setCustomPipeline('Builtin', new BuiltinPipelineBuilder());\n\n} // if (rendering)\n"]}