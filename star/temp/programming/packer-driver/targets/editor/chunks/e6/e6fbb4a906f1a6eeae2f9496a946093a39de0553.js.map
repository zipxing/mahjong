{"version":3,"sources":["file:///Users/xinzhou/work/mahjong/star/assets/scripts/UIManager.ts"],"names":["UIManager","Button","Vec3","tween","Color","_decorator","ccclass","property","scoreLabel","targetScoreLabel","moveCountLabel","gameOverPanel","finalScoreLabel","resultTitleLabel","restartButton","hintButton","pauseButton","onRestartCallback","onHintCallback","onPauseCallback","isUIInitialized","currentScore","targetScore","moveCount","init","uiReferences","setupButtonEvents","initializeUI","console","log","node","on","EventType","CLICK","onRestartButtonClick","onHintButtonClick","onPauseButtonClick","updateScoreDisplay","updateMoveCountDisplay","hideGameOverPanel","updateGameState","gameState","score","isGameOver","showGameOverPanel","string","animateScoreChange","progress","color","labelNode","to","scale","start","active","isSuccess","efficiency","Math","round","remainingBlocks","animateGameOverPanel","setScale","easing","showScoreIncrease","scoreIncrease","position","showComboEffect","comboCount","setButtonEnabled","buttonType","enabled","button","opacity","showHint","message","duration","setCallbacks","callbacks","onRestart","onHint","onPause","showLoading","hideLoading","getUIState","isGameOverPanelVisible","destroy","off","debugPrintUIState"],"mappings":"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","sourcesContent":["/**\n * UI管理器\n * 负责管理游戏界面的显示和交互\n */\n\nimport { Node, Label, Button, Vec3, tween, Color, _decorator } from 'cc';\nconst { ccclass, property } = _decorator;\n\nexport interface GameState {\n    score: number;\n    targetScore: number;\n    isGameOver: boolean;\n    remainingBlocks: number;\n    moveCount: number;\n}\n\nexport class UIManager {\n    \n    // UI节点引用\n    private scoreLabel: Label = null!;\n    private targetScoreLabel: Label = null!;\n    private moveCountLabel: Label = null!;\n    private gameOverPanel: Node = null!;\n    private finalScoreLabel: Label = null!;\n    private resultTitleLabel: Label = null!;\n    private restartButton: Button = null!;\n    private hintButton: Button = null!;\n    private pauseButton: Button = null!;\n    \n    // 回调接口\n    private onRestartCallback: (() => void) | null = null;\n    private onHintCallback: (() => void) | null = null;\n    private onPauseCallback: (() => void) | null = null;\n    \n    // UI状态\n    private isUIInitialized: boolean = false;\n    private currentScore: number = 0;\n    private targetScore: number = 1000;\n    private moveCount: number = 0;\n    \n    /**\n     * 初始化UI管理器\n     */\n    init(uiReferences: {\n        scoreLabel?: Label,\n        targetScoreLabel?: Label,\n        moveCountLabel?: Label,\n        gameOverPanel?: Node,\n        finalScoreLabel?: Label,\n        resultTitleLabel?: Label,\n        restartButton?: Button,\n        hintButton?: Button,\n        pauseButton?: Button\n    }) {\n        // 设置UI引用\n        this.scoreLabel = uiReferences.scoreLabel || null!;\n        this.targetScoreLabel = uiReferences.targetScoreLabel || null!;\n        this.moveCountLabel = uiReferences.moveCountLabel || null!;\n        this.gameOverPanel = uiReferences.gameOverPanel || null!;\n        this.finalScoreLabel = uiReferences.finalScoreLabel || null!;\n        this.resultTitleLabel = uiReferences.resultTitleLabel || null!;\n        this.restartButton = uiReferences.restartButton || null!;\n        this.hintButton = uiReferences.hintButton || null!;\n        this.pauseButton = uiReferences.pauseButton || null!;\n        \n        // 设置按钮事件\n        this.setupButtonEvents();\n        \n        // 初始化UI显示\n        this.initializeUI();\n        \n        this.isUIInitialized = true;\n        console.log('✅ UI管理器初始化完成');\n    }\n    \n    /**\n     * 设置按钮事件\n     */\n    private setupButtonEvents() {\n        if (this.restartButton) {\n            this.restartButton.node.on(Button.EventType.CLICK, this.onRestartButtonClick, this);\n        }\n        \n        if (this.hintButton) {\n            this.hintButton.node.on(Button.EventType.CLICK, this.onHintButtonClick, this);\n        }\n        \n        if (this.pauseButton) {\n            this.pauseButton.node.on(Button.EventType.CLICK, this.onPauseButtonClick, this);\n        }\n    }\n    \n    /**\n     * 初始化UI显示\n     */\n    private initializeUI() {\n        this.updateScoreDisplay();\n        this.updateMoveCountDisplay();\n        this.hideGameOverPanel();\n    }\n    \n    /**\n     * 更新游戏状态显示\n     */\n    updateGameState(gameState: GameState) {\n        this.currentScore = gameState.score;\n        this.targetScore = gameState.targetScore;\n        this.moveCount = gameState.moveCount;\n        \n        this.updateScoreDisplay();\n        this.updateMoveCountDisplay();\n        \n        if (gameState.isGameOver) {\n            this.showGameOverPanel(gameState);\n        }\n    }\n    \n    /**\n     * 更新分数显示\n     */\n    private updateScoreDisplay() {\n        if (this.scoreLabel) {\n            this.scoreLabel.string = `分数: ${this.currentScore}`;\n            \n            // 分数变化动画\n            this.animateScoreChange();\n        }\n        \n        if (this.targetScoreLabel) {\n            this.targetScoreLabel.string = `目标: ${this.targetScore}`;\n            \n            // 根据完成度改变颜色\n            const progress = this.currentScore / this.targetScore;\n            if (progress >= 1.0) {\n                this.targetScoreLabel.color = new Color(0, 255, 0, 255); // 绿色\n            } else if (progress >= 0.8) {\n                this.targetScoreLabel.color = new Color(255, 165, 0, 255); // 橙色\n            } else {\n                this.targetScoreLabel.color = new Color(255, 255, 255, 255); // 白色\n            }\n        }\n    }\n    \n    /**\n     * 更新移动次数显示\n     */\n    private updateMoveCountDisplay() {\n        if (this.moveCountLabel) {\n            this.moveCountLabel.string = `移动: ${this.moveCount}`;\n        }\n    }\n    \n    /**\n     * 分数变化动画\n     */\n    private animateScoreChange() {\n        if (!this.scoreLabel) return;\n        \n        const labelNode = this.scoreLabel.node;\n        \n        // 缩放动画\n        tween(labelNode)\n            .to(0.1, { scale: new Vec3(1.2, 1.2, 1) })\n            .to(0.1, { scale: new Vec3(1, 1, 1) })\n            .start();\n    }\n    \n    /**\n     * 显示游戏结束面板\n     */\n    private showGameOverPanel(gameState: GameState) {\n        if (!this.gameOverPanel) return;\n        \n        // 显示面板\n        this.gameOverPanel.active = true;\n        \n        // 设置结果文本\n        const isSuccess = gameState.score >= gameState.targetScore;\n        \n        if (this.resultTitleLabel) {\n            this.resultTitleLabel.string = isSuccess ? \"🎉 恭喜过关！\" : \"😔 游戏结束\";\n            this.resultTitleLabel.color = isSuccess ? \n                new Color(0, 255, 0, 255) : // 绿色\n                new Color(255, 100, 100, 255); // 红色\n        }\n        \n        if (this.finalScoreLabel) {\n            const efficiency = gameState.moveCount > 0 ? \n                Math.round((gameState.score / gameState.moveCount) * 100) / 100 : 0;\n                \n            this.finalScoreLabel.string = \n                `最终得分: ${gameState.score}\\n` +\n                `目标得分: ${gameState.targetScore}\\n` +\n                `移动次数: ${gameState.moveCount}\\n` +\n                `平均效率: ${efficiency} 分/次\\n` +\n                `剩余方块: ${gameState.remainingBlocks} 个`;\n        }\n        \n        // 面板出现动画\n        this.animateGameOverPanel();\n    }\n    \n    /**\n     * 隐藏游戏结束面板\n     */\n    private hideGameOverPanel() {\n        if (this.gameOverPanel) {\n            this.gameOverPanel.active = false;\n        }\n    }\n    \n    /**\n     * 游戏结束面板出现动画\n     */\n    private animateGameOverPanel() {\n        if (!this.gameOverPanel) return;\n        \n        // 初始状态：缩放为0\n        this.gameOverPanel.setScale(new Vec3(0, 0, 1));\n        \n        // 弹出动画\n        tween(this.gameOverPanel)\n            .to(0.3, { \n                scale: new Vec3(1, 1, 1) \n            }, { \n                easing: 'backOut' \n            })\n            .start();\n    }\n    \n    /**\n     * 显示得分增加动画\n     */\n    showScoreIncrease(scoreIncrease: number, position?: Vec3) {\n        if (!this.scoreLabel || scoreIncrease <= 0) return;\n        \n        // 创建临时分数增加提示\n        // 注意：这里需要在实际项目中创建一个临时节点来显示\n        console.log(`💰 +${scoreIncrease} 分！`);\n        \n        // 更新分数显示\n        this.updateScoreDisplay();\n    }\n    \n    /**\n     * 显示连击效果\n     */\n    showComboEffect(comboCount: number) {\n        if (comboCount <= 1) return;\n        \n        console.log(`🔥 ${comboCount}连击！`);\n        \n        // 在实际项目中，这里可以显示连击特效\n        // 比如创建临时文字节点，播放粒子效果等\n    }\n    \n    /**\n     * 设置按钮可用性\n     */\n    setButtonEnabled(buttonType: 'hint' | 'pause' | 'restart', enabled: boolean) {\n        let button: Button | null = null;\n        \n        switch (buttonType) {\n            case 'hint':\n                button = this.hintButton;\n                break;\n            case 'pause':\n                button = this.pauseButton;\n                break;\n            case 'restart':\n                button = this.restartButton;\n                break;\n        }\n        \n        if (button) {\n            button.enabled = enabled;\n            button.node.opacity = enabled ? 255 : 128;\n        }\n    }\n    \n    /**\n     * 显示提示信息\n     */\n    showHint(message: string, duration: number = 2.0) {\n        console.log(`💡 提示: ${message}`);\n        \n        // 在实际项目中，这里可以显示临时提示文字\n        // 比如创建一个飘浮的文字节点\n    }\n    \n    /**\n     * 重新开始按钮点击\n     */\n    private onRestartButtonClick() {\n        console.log('🔄 点击重新开始按钮');\n        \n        if (this.onRestartCallback) {\n            this.onRestartCallback();\n        }\n        \n        this.hideGameOverPanel();\n    }\n    \n    /**\n     * 提示按钮点击\n     */\n    private onHintButtonClick() {\n        console.log('💡 点击提示按钮');\n        \n        if (this.onHintCallback) {\n            this.onHintCallback();\n        }\n    }\n    \n    /**\n     * 暂停按钮点击\n     */\n    private onPauseButtonClick() {\n        console.log('⏸️ 点击暂停按钮');\n        \n        if (this.onPauseCallback) {\n            this.onPauseCallback();\n        }\n    }\n    \n    /**\n     * 设置回调函数\n     */\n    setCallbacks(callbacks: {\n        onRestart?: () => void,\n        onHint?: () => void,\n        onPause?: () => void\n    }) {\n        this.onRestartCallback = callbacks.onRestart || null;\n        this.onHintCallback = callbacks.onHint || null;\n        this.onPauseCallback = callbacks.onPause || null;\n    }\n    \n    /**\n     * 显示加载界面\n     */\n    showLoading(message: string = \"加载中...\") {\n        console.log(`⏳ ${message}`);\n        // 在实际项目中显示加载动画\n    }\n    \n    /**\n     * 隐藏加载界面\n     */\n    hideLoading() {\n        console.log('✅ 加载完成');\n        // 隐藏加载动画\n    }\n    \n    /**\n     * 获取当前UI状态\n     */\n    getUIState(): {\n        isGameOverPanelVisible: boolean,\n        currentScore: number,\n        targetScore: number,\n        moveCount: number\n    } {\n        return {\n            isGameOverPanelVisible: this.gameOverPanel ? this.gameOverPanel.active : false,\n            currentScore: this.currentScore,\n            targetScore: this.targetScore,\n            moveCount: this.moveCount\n        };\n    }\n    \n    /**\n     * 销毁UI管理器\n     */\n    destroy() {\n        // 移除按钮事件监听\n        if (this.restartButton) {\n            this.restartButton.node.off(Button.EventType.CLICK, this.onRestartButtonClick, this);\n        }\n        \n        if (this.hintButton) {\n            this.hintButton.node.off(Button.EventType.CLICK, this.onHintButtonClick, this);\n        }\n        \n        if (this.pauseButton) {\n            this.pauseButton.node.off(Button.EventType.CLICK, this.onPauseButtonClick, this);\n        }\n        \n        // 清空回调\n        this.onRestartCallback = null;\n        this.onHintCallback = null;\n        this.onPauseCallback = null;\n        \n        console.log('🗑️ UI管理器已销毁');\n    }\n    \n    /**\n     * 调试：打印UI状态\n     */\n    debugPrintUIState() {\n        console.log('🖥️ UI状态:');\n        console.log(`  初始化状态: ${this.isUIInitialized}`);\n        console.log(`  当前分数: ${this.currentScore}`);\n        console.log(`  目标分数: ${this.targetScore}`);\n        console.log(`  移动次数: ${this.moveCount}`);\n        console.log(`  游戏结束面板: ${this.gameOverPanel ? this.gameOverPanel.active : 'null'}`);\n    }\n}\n"]}